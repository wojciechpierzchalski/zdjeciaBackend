<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący wyjątek.</summary>
      <returns>Żądanie musi być skojarzone z wystąpieniem klasy <see cref="T:System.Web.Http.HttpConfiguration" />.Element <see cref="T:System.Net.Http.HttpResponseMessage" />, którego zawartością jest zserializowana reprezentacja wystąpienia klasy <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący komunikat o błędzie.</summary>
      <returns>Żądanie musi być skojarzone z wystąpieniem klasy <see cref="T:System.Web.Http.HttpConfiguration" />.Element <see cref="T:System.Net.Http.HttpResponseMessage" />, którego zawartością jest zserializowana reprezentacja wystąpienia klasy <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
      <param name="message">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący wyjątek z komunikatem o błędzie.</summary>
      <returns>Żądanie musi być skojarzone z wystąpieniem klasy <see cref="T:System.Web.Http.HttpConfiguration" />.Element <see cref="T:System.Net.Http.HttpResponseMessage" />, którego zawartością jest zserializowana reprezentacja wystąpienia klasy <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
      <param name="message">Komunikat o błędzie.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący błąd.</summary>
      <returns>Żądanie musi być skojarzone z wystąpieniem klasy <see cref="T:System.Web.Http.HttpConfiguration" />.Element <see cref="T:System.Net.Http.HttpResponseMessage" />, którego zawartością jest zserializowana reprezentacja wystąpienia klasy <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
      <param name="error">Błąd HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący błąd w stanie modelu.</summary>
      <returns>Żądanie musi być skojarzone z wystąpieniem klasy <see cref="T:System.Web.Http.HttpConfiguration" />.Element <see cref="T:System.Net.Http.HttpResponseMessage" />, którego zawartością jest zserializowana reprezentacja wystąpienia klasy <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
      <param name="modelState">Stan modelu.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="formatter">Program formatujący typ nośnika.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="formatter">Program formatujący typ nośnika.</param>
      <param name="mediaType">Wartość nagłówka typu nośnika.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="formatter">Program formatujący typ nośnika.</param>
      <param name="mediaType">Typ nośnika.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="mediaType">Wartość nagłówka typu nośnika.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="mediaType">Typ nośnika.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Zainicjowana klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> powiązaną ze skojarzoną klasą <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Typ żądania HTTP, które spowodowało ten komunikat odpowiedzi.</param>
      <param name="statusCode">Kod stanu odpowiedzi HTTP.</param>
      <param name="value">Zawartość komunikatu odpowiedzi HTTP.</param>
      <param name="configuration">Konfiguracja HTTP zawierająca mechanizm rozpoznawania zależności używany do rozpoznawania usług.</param>
      <typeparam name="T">Typ komunikatu odpowiedzi HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Usuwa wszystkie śledzone zasoby skojarzone z elementem <paramref name="request" />, które zostały dodane za pośrednictwem metody <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" />.</summary>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetActionDescriptor(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera bieżący certyfikat X.509 z danego żądania HTTP.</summary>
      <returns>Bieżący element <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> lub wartość null, jeśli certyfikat jest niedostępny.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera klasę <see cref="T:System.Web.Http.HttpConfiguration" /> dla danego żądania.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.HttpConfiguration" /> dla danego żądania.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera typ <see cref="T:System.Guid" />, który został przypisany jako identyfikator korelacji skojarzony z danym elementem <paramref name="request" />.Wartość, która zostanie utworzona i ustawiona przy pierwszym wywołaniu tej metody.</summary>
      <returns>Obiekt <see cref="T:System.Guid" /> reprezentujący identyfikator korelacji skojarzony z żądaniem.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera przeanalizowany ciąg zapytania jako kolekcję par kluczy i wartości.</summary>
      <returns>Ciąg zapytania jako kolekcja par kluczy i wartości.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRequestContext(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetResourcesForDisposal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera obiekt <see cref="T:System.Threading.SynchronizationContext" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</summary>
      <returns>Obiekt <see cref="T:System.Threading.SynchronizationContext" /> dla danego żądania lub wartość null, jeśli nie jest dostępny.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera wystąpienie klasy <see cref="T:System.Web.Http.Routing.UrlHelper" /> dla żądania HTTP.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Http.Routing.UrlHelper" /> inicjowane dla określonego żądania HTTP.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsBatchRequest(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsLocal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.IDisposable})"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Dodaje dany element <paramref name="resource" /> do listy zasobów, które zostaną usunięte przez hosta po usunięciu elementu <paramref name="request" />.</summary>
      <param name="request">Żądanie HTTP kontrolujące czas istnienia elementu <paramref name="resource" />.</param>
      <param name="resource">Zasób, który zostanie usunięty podczas usuwania elementu <paramref name="request" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetConfiguration(System.Net.Http.HttpRequestMessage,System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRequestContext(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpRequestContext)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRouteData(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRouteData)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.ShouldIncludeErrorDetail(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Reprezentuje rozszerzenia komunikatów dla odpowiedzi HTTP z operacji ASP.NET.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Próbuje pobrać wartość zawartości dla klasy <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />.</summary>
      <returns>Wynik pobierania wartości zawartości.</returns>
      <param name="response">Odpowiedź operacji.</param>
      <param name="value">Wartość zawartości.</param>
      <typeparam name="T">Typ wartości do pobrania.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>Reprezentuje rozszerzenia używane do dodawania elementów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> do klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)"></member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Udostępnia klasy <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z rozszerzeń ścieżek wyświetlanych w klasie <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Rozszerzenie odpowiadające elementowi mediaType. Ta wartość nie może zawierać kropek ani symboli wieloznacznych.</param>
      <param name="mediaType">Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />, która zostanie zwrócona w przypadku dopasowania elementu uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Rozszerzenie odpowiadające elementowi mediaType. Ta wartość nie może zawierać kropek ani symboli wieloznacznych.</param>
      <param name="mediaType">Typ nośnika, który zostanie zwrócony w przypadku dopasowania elementu uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Zwraca wartość wskazującą, czy to wystąpienie klasy <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> może udostępnić klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> dla klasy <see cref="T:System.Uri" /> elementu request. </summary>
      <returns>Jeśli to wystąpienie może dopasować rozszerzenie pliku w elemencie request, zwraca wartość 1.0; w przeciwnym razie zwraca wartość 0.0.</returns>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> do sprawdzenia.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Pobiera rozszerzenie ścieżki klasy <see cref="T:System.Uri" />. </summary>
      <returns>Rozszerzenie ścieżki klasy <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>Klucz rozszerzenia ścieżki klasy <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Reprezentuje atrybut określający, na które metody HTTP będzie odpowiadać metoda akcji.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.AcceptVerbsAttribute" />, używając metody akcji, na którą odpowie.</summary>
      <param name="method">Metoda HTTP, na którą będzie odpowiadać metoda akcji.</param>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.AcceptVerbsAttribute" />, korzystając z listy metod HTTP, na które odpowiada metoda akcji.</summary>
      <param name="methods">Metody HTTP, na które będzie odpowiadać metoda akcji.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Pobiera lub ustawia listę metod HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <returns>Pobiera lub ustawia listę metod HTTP, na które będzie odpowiadać metoda akcji.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Reprezentuje atrybut używany na potrzeby nazwy akcji.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ActionNameAttribute" />.</summary>
      <param name="name">Nazwa akcji.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Pobiera lub ustawia nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Określa, że akcje i kontrolery są pomijane przez klasę <see cref="T:System.Web.Http.AuthorizeAttribute" /> podczas autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Definiuje właściwości i metody dla kontrolera API.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor"></member>
    <member name="P:System.Web.Http.ApiController.ActionContext">
      <summary>Pobiera kontekst akcji.</summary>
      <returns>Kontekst akcji.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest">
      <summary>Tworzy element <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Results.BadRequestResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.String)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.ErrorMessageResult" /> (400 Niewłaściwe żądanie) z określonym komunikatem o błędzie.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> z określonym stanem modelu.</returns>
      <param name="message">Widoczny dla użytkownika komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Tworzy element <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> z określonym stanem modelu.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> z określonym stanem modelu.</returns>
      <param name="modelState">Stan modelu do uwzględnienia w błędzie.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Conflict">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.ConflictResult" /> (409 Konflikt).</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Results.ConflictResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
      <summary>Tworzy element &lt;patrz cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; z określonymi wartościami.</summary>
      <returns>Element &lt;patrz cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; z określonymi wartościami.</returns>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="value">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Tworzy element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</summary>
      <returns>Element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</returns>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="value">Wartość zawartości do formatowania w treści jednostki.</param>
      <param name="formatter">Element formujący do używania w celu formatowania zawartości.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Tworzy element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</summary>
      <returns>Element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</returns>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="value">Wartość zawartości do formatowania w treści jednostki.</param>
      <param name="formatter">Element formujący do używania w celu formatowania zawartości.</param>
      <param name="mediaType"> Wartość dla nagłówka typu zawartości lub &lt;patrz langword="null" /&gt;, aby element formatujący wybrał domyślną wartość. </param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Tworzy element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</summary>
      <returns>Element &lt;patrz cref="T:System.Web.Http.FormattedContentResult`1" /&gt; z określonymi wartościami.</returns>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="value">Wartość zawartości do formatowania w treści jednostki.</param>
      <param name="formatter">Element formujący do używania w celu formatowania zawartości.</param>
      <param name="mediaType">Wartość nagłówka typu zawartości.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Utworzono) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> z określonymi wartościami.</returns>
      <param name="location">Lokalizacja, gdzie została utworzona zawartość.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Utworzono) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> z określonymi wartościami.</returns>
      <param name="location">Lokalizacja, gdzie została utworzona zawartość.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Utworzono) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> z określonymi wartościami.</returns>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Utworzono) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> z określonymi wartościami.</returns>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Wykonuje zdefiniowane przez aplikację zadania skojarzone ze zwalnianiem lub resetowaniem zasobów niezarządzanych.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez obiekt oraz opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, a wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Wykonuje asynchronicznie jedną operację HTTP.</summary>
      <returns>Nowo rozpoczęte zadanie.</returns>
      <param name="controllerContext">Kontekst kontrolera dla jednej operacji HTTP.</param>
      <param name="cancellationToken">Token anulowania przypisany do operacji HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Inicjuje wystąpienie klasy <see cref="T:System.Web.Http.ApiController" /> z określonym kontekstem controllerContext.</summary>
      <param name="controllerContext">Obiekt <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> używany do inicjowania.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> (500 Wewnętrzny błąd serwera).</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.ExceptionResult" /> (500 wewnętrzny błąd serwera) z określonym wyjątkiem.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.ExceptionResult" /> z określonym wyjątkiem.</returns>
      <param name="exception">Wyjątek do uwzględnienia w błędzie.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) z określoną wartością.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.JsonResult`1" /> z określoną wartością.</returns>
      <param name="content">Wartość zawartości do serializacji w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.JsonResult`1" /> z określonymi wartościami.</returns>
      <param name="content">Wartość zawartości do serializacji w treści jednostki.</param>
      <param name="serializerSettings">Ustawienia serializatora.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.JsonResult`1" /> z określonymi wartościami.</returns>
      <param name="content">Wartość zawartości do serializacji w treści jednostki.</param>
      <param name="serializerSettings">Ustawienia serializatora.</param>
      <param name="encoding">Kodowanie zawartości.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Pobiera stan modelu po procesie powiązania modelu.</summary>
      <returns>Stan modelu po procesie powiązania modelu.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.NotFound">
      <summary>Tworzy element <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Results.NotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.OkResult" /> (200 OK).</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.OkResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok``1(``0)">
      <summary>Tworzy element <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> z określonymi wartościami.</returns>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.String)">
      <summary>Tworzy wynik przekierowania (302 Found) z określoną wartością.</summary>
      <returns>Wynik przekierowania (302 Found) z określoną wartością.</returns>
      <param name="location">Adres, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.Uri)">
      <summary>Tworzy wynik przekierowania (302 Found) z określoną wartością.</summary>
      <returns>Wynik przekierowania (302 Found) z określoną wartością.</returns>
      <param name="location">Adres, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Tworzy przekierowanie do wyniku trasy (302 Found) z określoną wartością.</summary>
      <returns>Przekierowanie do wyniku trasy (302 Found) z określoną wartością.</returns>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
      <summary>Tworzy przekierowanie do wyniku trasy (302 Found) z określoną wartością.</summary>
      <returns>Przekierowanie do wyniku trasy (302 Found) z określoną wartością.</returns>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Pobiera lub ustawia obiekt HttpRequestMessage bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Obiekt HttpRequestMessage bieżącej klasy <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.RequestContext">
      <summary>Pobiera kontekst żądania.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
      <summary>Tworzy element <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> z określoną odpowiedzią.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> dla określonej odpowiedzi.</returns>
      <param name="response">Komunikat odpowiedzi HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
      <summary>Tworzy element <see cref="T:System.Web.Http.StatusCodeResult" /> z określonym kodem stanu.</summary>
      <returns>Element <see cref="T:System.Web.Http.StatusCodeResult" /> z określonym kodem stanu.</returns>
      <param name="status">Kod stanu HTTP dla komunikatu odpowiedzi</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Nieautoryzowane) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> z określonymi wartościami.</returns>
      <param name="challenges">Żądania WWW-Authenticate.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
      <summary>Tworzy wynik <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Nieautoryzowane) z określonymi wartościami.</summary>
      <returns>Element <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> z określonymi wartościami.</returns>
      <param name="challenges">Żądania WWW-Authenticate.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Pobiera wystąpienie elementu <see cref="T:System.Web.Http.Routing.UrlHelper" /> używane do generowania adresów URL do innych interfejsów API. </summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.UrlHelper" /> używany do generowania adresów URL do innych interfejsów API.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary>Zwraca bieżący podmiot zabezpieczeń skojarzony z tym żądaniem.</summary>
      <returns>Bieżący podmiot zabezpieczeń skojarzony z tym żądaniem.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0)">
      <summary>Weryfikuje daną jednostkę i dodaje błędy weryfikacji do stanu modelu w postaci pustego prefiksu, jeśli występują.</summary>
      <param name="entity">Jednostka weryfikowana.</param>
      <typeparam name="TEntity">Typ jednostki, która ma zostać zweryfikowana.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
      <summary>Weryfikuje daną jednostkę i dodaje błędy weryfikacji do stanu modelu, jeśli występują.</summary>
      <param name="entity">Jednostka weryfikowana.</param>
      <param name="keyPrefix">Prefiks klucza, dla którego błędy stanu modelu zostaną dodane w stanie modelu.</param>
      <typeparam name="TEntity">Typ jednostki, która ma zostać zweryfikowana.</typeparam>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Określa filtr autoryzacji weryfikujący interfejs <see cref="T:System.Security.Principal.IPrincipal" /> żądania.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Przetwarza żądania, których autoryzacja nie powiodła się.</summary>
      <param name="actionContext">Kontekst.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Wskazuje, czy określona kontrolka ma autoryzację.</summary>
      <returns>Wartość true, jeśli kontrolka ma autoryzację; w przeciwnym razie wartość false.</returns>
      <param name="actionContext">Kontekst.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Ta metoda jest wywoływana podczas autoryzowania akcji.</summary>
      <param name="actionContext">Kontekst.</param>
      <exception cref="T:System.ArgumentNullException">Parametr kontekstu ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Pobiera lub ustawia autoryzowane role. </summary>
      <returns>Ciąg ról. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator dla tego atrybutu.</summary>
      <returns>Unikatowy identyfikator dla tego atrybutu.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Pobiera lub ustawia autoryzowanych użytkowników. </summary>
      <returns>Ciąg użytkowników. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Atrybut określający, że parametr akcji pochodzi tylko z treści jednostki przychodzącego komunikatu <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.FromBodyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Pobiera wiązanie parametru.</summary>
      <returns>Wiązanie parametru.</returns>
      <param name="parameter">Opis parametru.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Atrybut określający, że parametr akcji pochodzi z identyfikatora URI przychodzącego komunikatu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.FromUriAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Pobiera fabryki dostawców wartości dla integratora modelu.</summary>
      <returns>Kolekcja obiektów <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Reprezentuje atrybuty określające, że wiązanie HTTP powinno wykluczać właściwość.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpBindNeverAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Reprezentuje atrybut wymagany dla wiązania HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpBindRequiredAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary>Reprezentuje konfigurację wystąpień <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpConfiguration" /> z kolekcją tras HTTP.</summary>
      <param name="routes">Kolekcja tras HTTP do powiązania z tym wystąpieniem.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Pobiera lub ustawia mechanizm rozpoznawania zależności skojarzony z tym wystąpieniem.</summary>
      <returns>Mechanizm rozpoznawania zależności.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Wykonuje zdefiniowane przez aplikację zadania skojarzone ze zwalnianiem lub resetowaniem zasobów niezarządzanych.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez obiekt oraz opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.EnsureInitialized">
      <summary>Wywołuje inicjatora punktu zaczepienia.Jest on uważany za niezmienialny od tego miejsca dalej.Jego wielokrotne wywołania nie stanowią zagrożenia.</summary>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Pobiera listę filtrów stosowanych do wszystkich żądań obsługiwanych za pomocą tego wystąpienia klasy <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Lista filtrów.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Pobiera programy formatujące typy nośnika dla tego wystąpienia.</summary>
      <returns>Kolekcja obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Pobiera lub ustawia wartość wskazującą, czy szczegóły błędu powinny być dodawane do komunikatów o błędach.</summary>
      <returns>Wartość <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> wskazująca zasady dotyczące szczegółów błędów.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Pobiera lub ustawia akcję, która przeprowadzi końcowe inicjowanie wystąpienia klasy <see cref="T:System.Web.Http.HttpConfiguration" />, zanim zostanie ono użyte do przetwarzania żądań. </summary>
      <returns>Akcja, która przeprowadzi końcowe inicjowanie wystąpienia klasy <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Pobiera uporządkowaną listę wystąpień klasy <see cref="T:System.Net.Http.DelegatingHandler" /> do wywołania, gdy klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> przemieszcza się w górę stosu, a klasa <see cref="T:System.Net.Http.HttpResponseMessage" /> w odpowiedzi przemieszcza się w dół stosu. </summary>
      <returns>Kolekcja programów obsługi wiadomości.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Pobiera kolekcję zasad określających sposób wiązania parametrów.</summary>
      <returns>Kolekcja funkcji mogących utworzyć wiązanie parametru dla danego parametru.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Pobiera właściwości skojarzone z tym wystąpieniem.</summary>
      <returns>Obiekt <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zawierający właściwości.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Pobiera klasę <see cref="T:System.Web.Http.HttpRouteCollection" /> skojarzoną z wystąpieniem tej klasy <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Element <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Pobiera kontener usług domyślnych skojarzonych z tym wystąpieniem.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> zawierający usługi domyślne dla tego wystąpienia.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Pobiera ścieżkę wirtualną katalogu głównego.</summary>
      <returns>Ścieżka wirtualna katalogu głównego.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Zawiera metody rozszerzenia dla klasy <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="configuration">Konfiguracja serwera.</param>
      <param name="directRouteProvider">Element <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> służy do odnajdowania i tworzenia tras.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="configuration">Konfiguracja serwera.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="configuration">Konfiguracja serwera.</param>
      <param name="constraintResolver">Element <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" /> do użycia w celu rozpoznawania ograniczeń w tekście.</param>
      <param name="directRouteProvider">Element <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> służy do odnajdowania i tworzenia tras.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.SuppressHostPrincipal(System.Web.Http.HttpConfiguration)"></member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Określa, że akcja obsługuje metodę DELETE HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Pobiera metody HTTP, które odpowiadają temu atrybutowi.</summary>
      <returns>Metody HTTP, które odpowiadają temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary>Definiuje możliwy do serializacji kontener przeznaczony do przechowywania informacji o błędzie. Te informacje są przechowywane jako pary kluczy/wartości. Dostępne są klucze słownikowe do wyszukiwania informacji o standardowych błędach na temat typu <see cref="T:System.Web.Http.HttpErrorKeys" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpError" /> dla elementu <paramref name="exception" />.</summary>
      <param name="exception">Wyjątek do użycia dla informacji o błędzie.</param>
      <param name="includeErrorDetail">Wartość true, aby uwzględnić w błędzie informacje o wyjątku, w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpError" /> zawierającej komunikat o błędzie <paramref name="message" />.</summary>
      <param name="message">Komunikat o błędzie do powiązania z tym wystąpieniem.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpError" /> dla elementu <paramref name="modelState" />.</summary>
      <param name="modelState">Nieprawidłowy stan modelu do użycia dla informacji o błędzie.</param>
      <param name="includeErrorDetail">Wartość true, aby uwzględnić w błędzie komunikaty o wyjątku; w przeciwnym razie wartość false.</param>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionMessage">
      <summary>Pobiera lub ustawia komunikat wyjątku <see cref="T:System.Exception" />, o ile jest dostępny.</summary>
      <returns>Komunikat elementu <see cref="T:System.Exception" />, jeśli jest dostępny.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionType">
      <summary>Pobiera lub ustawia typ wyjątku <see cref="T:System.Exception" />, o ile jest dostępny.</summary>
      <returns>Typ elementu <see cref="T:System.Exception" />, jeśli jest dostępny.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.GetPropertyValue``1(System.String)">
      <summary>Pobiera określoną wartość właściwości z tego wystąpienia błędu.</summary>
      <returns>Określona wartość właściwości z tego wystąpienia błędu.</returns>
      <param name="key">Nazwa właściwości błędu.</param>
      <typeparam name="TValue">Typ właściwości.</typeparam>
    </member>
    <member name="P:System.Web.Http.HttpError.InnerException">
      <summary>Wewnętrzny element <see cref="T:System.Exception" /> skojarzony z tym wystąpieniem, o ile jest dostępny.</summary>
      <returns>Wewnętrzny element <see cref="T:System.Exception" /> skojarzony z tym wystąpieniem, jeśli jest dostępny.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary>Pobiera lub ustawia komunikat wysokiego poziomu widoczny dla użytkownika wyjaśniający przyczynę błędu. Informacje podane w tym polu powinny być traktowane jako publiczne, ponieważ będą przekazywane przewodowo, bez względu na element <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. W rezultacie należy zwrócić uwagę, aby nie wyjawiać poufnych informacji o serwerze lub aplikacji.</summary>
      <returns>Komunikat wysokiego poziomu widoczny dla użytkownika wyjaśniający przyczynę błędu. Informacje podane w tym polu powinny być traktowane jako publiczne, ponieważ będą przekazywane przewodowo, bez względu na element <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. W rezultacie należy zwrócić uwagę, aby nie wyjawiać poufnych informacji o serwerze lub aplikacji.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.MessageDetail">
      <summary>Pobiera lub ustawia szczegółowy opis błędu umożliwiający deweloperowi pełne zrozumienie niepowodzenia.</summary>
      <returns>Szczegółowy opis błędu umożliwiający deweloperowi pełne zrozumienie niepowodzenia.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ModelState">
      <summary>Pobiera element <see cref="P:System.Web.Http.HttpError.ModelState" /> zawierający informacje o błędach, które wystąpiły podczas wiązania modelu.</summary>
      <returns>Element <see cref="P:System.Web.Http.HttpError.ModelState" /> zawierający informacje o błędach, które wystąpiły podczas wiązania modelu.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.StackTrace">
      <summary>Pobiera lub ustawia informacje o śladzie stosu skojarzone z tym wystąpieniem, jeśli są dostępne.</summary>
      <returns>Informacje o śladzie stosu skojarzone z tym wystąpieniem, jeśli są dostępne.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ta metoda jest zarezerwowana i nie powinna być używana.</summary>
      <returns>Zawsze zwraca wartość null.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Tworzy wystąpienie klasy <see cref="T:System.Web.Http.HttpError" /> na podstawie jej reprezentacji XML.</summary>
      <param name="reader">Strumień XmlReader, z którego deserializowany jest obiekt.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Konwertuje wystąpienie klasy <see cref="T:System.Web.Http.HttpError" /> na jej reprezentację XML.</summary>
      <param name="writer">Strumień XmlWriter, do którego serializowany jest obiekt.</param>
    </member>
    <member name="T:System.Web.Http.HttpErrorKeys">
      <summary> Udostępnia klucze do wyszukiwania informacji o błędach przechowywanych w słowniku <see cref="T:System.Web.Http.HttpError" />. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ErrorCodeKey">
      <summary> Udostępnia klucz dla ErrorCode. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey">
      <summary> Udostępnia klucz dla ExceptionMessage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey">
      <summary> Udostępnia klucz dla ExceptionType. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.InnerExceptionKey">
      <summary> Udostępnia klucz dla InnerException. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageDetailKey">
      <summary> Udostępnia klucz dla MessageDetail. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageKey">
      <summary> Udostępnia klucz dla Message. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageLanguageKey">
      <summary> Udostępnia klucz dla MessageLanguage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ModelStateKey">
      <summary> Udostępnia klucz dla ModelState. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.StackTraceKey">
      <summary> Udostępnia klucz dla StackTrace. </summary>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Określa, że akcja obsługuje metodę GET HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpGetAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Pobiera metody HTTP, które odpowiadają temu atrybutowi.</summary>
      <returns>Metody HTTP, które odpowiadają temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary> Określa, że akcja obsługuje metodę HEAD HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpHeadAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Pobiera metody HTTP odpowiadające temu atrybutowi.</summary>
      <returns>Metody HTTP odpowiadające temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Reprezentuje atrybut używany do ograniczenia metody HTTP w taki sposób, aby obsługiwała tylko żądania OPTIONS protokołu HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Pobiera metody HTTP odpowiadające temu atrybutowi.</summary>
      <returns>Metody HTTP odpowiadające temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary> Określa, że akcja obsługuje metodę PATCH HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpPatchAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Pobiera metody HTTP odpowiadające temu atrybutowi.</summary>
      <returns>Metody HTTP odpowiadające temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Określa, że akcja obsługuje metodę POST HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpPostAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Pobiera metody HTTP odpowiadające temu atrybutowi.</summary>
      <returns>Metody HTTP odpowiadające temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody HTTP w taki sposób, aby obsługiwała tylko żądania HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpPutAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Pobiera metody HTTP odpowiadające temu atrybutowi.</summary>
      <returns>Metody HTTP odpowiadające temu atrybutowi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> Wyjątek umożliwiający zwrócenie danego obiektu <see cref="T:System.Net.Http.HttpResponseMessage" /> klientowi. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpResponseException" />.</summary>
      <param name="response">Odpowiedź HTTP do zwrócenia klientowi.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpResponseException" />. </summary>
      <param name="statusCode">Kod stanu odpowiedzi.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Pobiera odpowiedź HTTP w celu zwrócenia jej klientowi.</summary>
      <returns>Obiekt <see cref="T:System.Net.Http.HttpResponseMessage" /> reprezentujący odpowiedź HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>Kolekcja wystąpień klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
      <param name="virtualPathRoot">Katalog główny ścieżki wirtualnej.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Dodaje wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> do kolekcji.</summary>
      <param name="name">Nazwa trasy.</param>
      <param name="route">Wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> do dodania do kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Określa, czy kolekcja zawiera konkretny obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Wartość true, jeśli obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> zostanie znaleziony w kolekcji; w przeciwnym razie wartość false.</returns>
      <param name="item">Obiekt do zlokalizowania w kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Określa, czy kolekcja zawiera element z określonym kluczem.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera element z określonym kluczem; w przeciwnym razie wartość false.</returns>
      <param name="name">Klucz do zlokalizowania w kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Kopiuje wystąpienia klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> w kolekcji do tablicy, zaczynając od określonego indeksu tablicy.</summary>
      <param name="array">Tablica, która jest miejscem docelowym elementów kopiowanych z kolekcji.</param>
      <param name="arrayIndex">Numerowany od zera indeks w tablicy <paramref name="array" />, od którego rozpoczyna się kopiowanie.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Kopiuje nazwy tras i wystąpienia klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> w kolekcji do tablicy, zaczynając od określonego indeksu tablicy.</summary>
      <param name="array">Tablica, która jest miejscem docelowym elementów kopiowanych z kolekcji.</param>
      <param name="arrayIndex">Numerowany od zera indeks w tablicy <paramref name="array" />, od którego rozpoczyna się kopiowanie.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Tworzy wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne parametry trasy.</param>
      <param name="constraints">Obiekt zawierający ograniczenia trasy.</param>
      <param name="dataTokens">Tokeny danych trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Tworzy wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne parametry trasy.</param>
      <param name="constraints">Obiekt zawierający ograniczenia trasy.</param>
      <param name="dataTokens">Tokeny danych trasy.</param>
      <param name="handler">Program obsługi komunikatów dla trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Tworzy wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne parametry trasy.</param>
      <param name="constraints">Obiekt zawierający ograniczenia trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Wykonuje zdefiniowane przez aplikację zadania skojarzone ze zwalnianiem lub resetowaniem zasobów niezarządzanych.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez obiekt oraz opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Obiekt <see cref="T:System.Collections.Generic.IEnumerator`1" />, który może być używany do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera dane trasy dla określonego żądania HTTP.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> reprezentujące dane trasy.</returns>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Pobiera ścieżkę wirtualną.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> reprezentujące ścieżkę wirtualną.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="name">Nazwa trasy.</param>
      <param name="values">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Wstawia wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> do kolekcji.</summary>
      <param name="index">Liczony od elementu zerowego indeks, w którym powinien zostać wstawiony parametr <paramref name="value" />.</param>
      <param name="name">Nazwa trasy.</param>
      <param name="value">Obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> do wstawienia.Wartość nie może być równa null.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest przeznaczona tylko do odczytu.</summary>
      <returns>Wartość true, jeśli kolekcja jest przeznaczona tylko do odczytu; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Pobiera lub ustawia element pod określonym indeksem.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> pod określonym indeksem.</returns>
      <param name="index">Indeks.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Pobiera lub ustawia element z określoną nazwą trasy.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> pod określonym indeksem.</returns>
      <param name="name">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Metoda wywoływana wewnętrznie w celu pobrania modułu wyliczającego dla kolekcji.</summary>
      <returns>Obiekt <see cref="T:System.Collections.IEnumerator" />, który może być używany do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Usuwa wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> z kolekcji.</summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — false.Ta metoda zwraca także wartość false, jeśli klucz <paramref name="name" /> nie zostanie znaleziony w kolekcji.</returns>
      <param name="name">Nazwa trasy do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Dodaje element do kolekcji.</summary>
      <param name="route">Obiekt, który zostanie dodany do kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Usuwa pierwsze wystąpienie konkretnego obiektu z kolekcji.</summary>
      <returns>Wartość true, jeśli element <paramref name="route" /> został pomyślnie usunięty z kolekcji; w przeciwnym razie wartość false.Ta metoda zwraca również wartość false, jeśli element <paramref name="route" /> nie zostanie znaleziony w oryginalnej kolekcji.</returns>
      <param name="route">Obiekt do usunięcia z kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Obiekt <see cref="T:System.Collections.IEnumerator" />, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> z określoną nazwą trasy.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera element z określoną nazwą; w przeciwnym razie wartość false.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="route">Gdy ta metoda zwraca wartość, po znalezieniu nazwy trasy zawiera ona wystąpienie klasy <see cref="T:System.Web.Http.Routing.IHttpRoute" />. W przeciwnym razie wartość ta jest równa null.Ten parametr jest przekazywany jako niezainicjowany.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ValidateConstraint(System.String,System.String,System.Object)">
      <summary>Weryfikuje, czy ograniczenie jest prawidłowe dla trasy <see cref="T:System.Web.Http.Routing.IHttpRoute" /> utworzonej przez wywołanie do metody <see cref="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="name">Nazwa ograniczenia.</param>
      <param name="constraint">Obiekt ograniczenia.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Pobiera katalog główny ścieżki wirtualnej.</summary>
      <returns>Katalog główny ścieżki wirtualnej.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Metody rozszerzenia dla obiektu <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Ignoruje określoną trasę.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="routeName">Nazwa trasy do zignorowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Ignoruje określoną trasę.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="routeName">Nazwa trasy do zignorowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości szablonu trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpBatchRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Web.Http.Batch.HttpBatchHandler)">
      <summary> Mapuje określoną trasę do obsługi żądań wsadowych HTTP. </summary>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="routeName">Nazwa trasy do zamapowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="batchHandler">Element <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> do obsługi żądań wsadowych.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Mapuje określony szablon trasy.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Mapuje określony szablon trasy i ustawia domyślne wartości trasy.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje określony szablon trasy i ustawia domyślne wartości trasy i ograniczenia.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości dla parametru <paramref name="routeTemplate" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Mapuje określony szablon trasy i ustawia domyślne wartości trasy, ograniczenia i program obsługi komunikatów punktu końcowego.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości dla parametru <paramref name="routeTemplate" />.</param>
      <param name="handler">Program usługi, do którego zostanie skierowane żądanie.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Definiuje implementację klasy <see cref="T:System.Net.Http.HttpMessageHandler" />, która wysyła przychodzącą klasę <see cref="T:System.Net.Http.HttpRequestMessage" /> i w wyniku tego tworzy klasę <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpServer" />, używając domyślnej konfiguracji i dyspozytora.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpServer" /> z określonym dyspozytorem. </summary>
      <param name="dispatcher">Dyspozytor HTTP, który będzie obsługiwać żądania przychodzące.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpServer" /> z określoną konfiguracją.</summary>
      <param name="configuration">Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> służący do konfigurowania tego wystąpienia.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.HttpServer" /> z określoną konfiguracją i dyspozytorem.</summary>
      <param name="configuration">Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> służący do konfigurowania tego wystąpienia.</param>
      <param name="dispatcher">Dyspozytor HTTP, który będzie obsługiwać żądania przychodzące.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> służący do konfigurowania tego wystąpienia.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> służący do konfigurowania tego wystąpienia.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Pobiera dyspozytora HTTP obsługującego żądania przychodzące.</summary>
      <returns>Dyspozytor HTTP obsługujący żądania przychodzące.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane używane przez obiekt oraz opcjonalnie zwalnia zasoby zarządzane.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Przygotowuje serwer do działania.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Wysyła przychodzącą klasę <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns> Zadanie reprezentujące operację asynchroniczną.</returns>
      <param name="request">Żądanie wysłania.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.IHttpActionResult">
      <summary>Definiuje polecenie, które asynchronicznie tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie tworzy element <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Zadanie, które po zakończeniu zawiera komunikat <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Określa, czy szczegóły błędu, takie jak komunikaty o wyjątkach i ślady stosu, mają być dołączane do komunikatów o błędach.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Zawsze dołączaj szczegóły błędu.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Używaj domyślnego zachowania dla środowiska hosta.Dla hostingu ASP.NET używaj wartości z elementu customErrors w pliku Web.config.Dla hostingu samodzielnego używaj wartości <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Dołączaj szczegóły błędu tylko w przypadku odpowiedzi na żądanie lokalne. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Nigdy nie dołączaj szczegółów błędu. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Reprezentuje atrybut używany do określania, że metoda kontrolera nie jest metodą akcji.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.NonActionAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.OverrideActionFiltersAttribute">
      <summary>Reprezentuje atrybut filtra zastępujący filtry akcji zdefiniowane na wyższym poziomie.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideActionFiltersAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.AllowMultiple">
      <summary>Pobiera wartość wskazującą, czy filtr akcji zezwala na wiele atrybutów.</summary>
      <returns>Wartość true, jeśli filtr akcji zezwala na wiele atrybutów, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Pobiera typ filtrów do zastąpienia.</summary>
      <returns>Typ filtrów do zastąpienia.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideAuthenticationAttribute">
      <summary>Reprezentuje atrybut filtra zastępujący filtry uwierzytelniania zdefiniowane na wyższym poziomie.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthenticationAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.OverrideAuthorizationAttribute">
      <summary>Reprezentuje atrybut filtra zastępujący filtry autoryzacji zdefiniowane na wyższym poziomie.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthorizationAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.AllowMultiple">
      <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy dla jednego elementu programu można określić więcej niż jedno wystąpienie wskazanego atrybutu.</summary>
      <returns>Wartość true, jeśli można określić więcej niż jedno wystąpienie. W przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Pobiera typ atrybutów zastępowania filtrów.</summary>
      <returns>Typ atrybutów zastępowania filtrów.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideExceptionFiltersAttribute">
      <summary>Reprezentuje atrybut filtra zastępujący filtry wyjątków zdefiniowane na wyższym poziomie.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideExceptionFiltersAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary>Atrybut parametru lub typu tworzącego obiekt <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.Jeśli atrybut znajduje się w elemencie type-declaration, efekt jest taki, jakby atrybut był obecny we wszystkich parametrach akcji danego typu.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Pobiera wiązanie parametru.</summary>
      <returns>Wiązanie parametru.</returns>
      <param name="parameter">Opis parametru.</param>
    </member>
    <member name="T:System.Web.Http.RouteAttribute">
      <summary>Miejsce w akcji do jej bezpośredniego ujawnienia za pomocą trasy.</summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.RouteAttribute" />. </summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.RouteAttribute" />. </summary>
      <param name="template">Szablon trasy opisujący wzorzec URI używany do dopasowywania.</param>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Name">
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Order">
      <returns>Zwraca wartość <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.System#Web#Http#Routing#IDirectRouteFactory#CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)"></member>
    <member name="P:System.Web.Http.RouteAttribute.Template">
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>Za pomocą klasy <see cref="T:System.Web.Http.RouteParameter" /> można wskazać właściwości parametru trasy (literały i symbole zastępcze znajdujące się w segmentach obiektu <see cref="M:IHttpRoute.RouteTemplate" />).Przy jej użyciu można na przykład określić, że parametr trasy jest opcjonalny.</summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>Parametr opcjonalny.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Zwraca klasę <see cref="T:System.String" /> reprezentującą to wystąpienie.</summary>
      <returns>Klasa <see cref="T:System.String" /> reprezentująca to wystąpienie.</returns>
    </member>
    <member name="T:System.Web.Http.RoutePrefixAttribute">
      <summary> Oznacza kontroler prefiksem trasy stosowanym do wszystkich akcji w ramach kontrolera. </summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor(System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.RoutePrefixAttribute" />. </summary>
      <param name="prefix">Prefiks trasy dla kontrolera.</param>
    </member>
    <member name="P:System.Web.Http.RoutePrefixAttribute.Prefix">
      <summary> Pobiera prefiks trasy. </summary>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Udostępnia bezpieczne metody dostępu dla usług uzyskanych z obiektu <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Description.IApiExplorer" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Description.IApiExplorer" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Zwraca program obsługi zarejestrowanych nieobsługiwanych wyjątków, jeśli występuje.</summary>
      <returns>Program obsługi zarejestrowanych nieobsługiwanych wyjątków, jeśli występuje; w przeciwnym razie wartość null.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionLoggers(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Zwraca kolekcję rejestratorów zarejestrowanych nieobsługiwanych wyjątków.</summary>
      <returns>Kolekcja rejestratorów zarejestrowanych nieobsługiwanych wyjątków.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera kolekcję obiektów <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</summary>
      <returns>Zwraca kolekcję obiektów <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> lub wartość null, jeśli żadne wystąpienie nie zostało zarejestrowane.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera kolekcję obiektów <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
      <returns>Zwraca kolekcję obiektów <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera kolekcję obiektów <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Zwraca kolekcję obiektów <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera usługę <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</summary>
      <returns>Zwraca wystąpienie klasy <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera kolekcję obiektów <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
      <returns>Zwraca kolekcję obiektów <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="T:System.Web.Http.SingleResult">
      <summary>Reprezentuje element <see cref="T:System.Linq.IQueryable" /> zawierający zero lub jedną jednostkę.Należy go używać razem z parametrem [EnableQuery] z obszaru nazw System.Web.Http.OData lub System.Web.OData.</summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.SingleResult" />.</summary>
      <param name="queryable">Element <see cref="T:System.Linq.IQueryable" /> zawierający zero lub jedną jednostkę.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary>Tworzy element <see cref="T:System.Web.Http.SingleResult`1" /> na podstawie elementu <see cref="T:System.Linq.IQueryable`1" />.Metoda pomocnika umożliwiająca utworzenie wystąpienia obiektu <see cref="T:System.Web.Http.SingleResult`1" /> bez konieczności jawnego określania typu <paramref name="T" />.</summary>
      <returns>Utworzony element <see cref="T:System.Web.Http.SingleResult`1" />.</returns>
      <param name="queryable">Element <see cref="T:System.Linq.IQueryable`1" /> zawierający zero lub jedną jednostkę.</param>
      <typeparam name="T">Typ danych w źródle danych.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary>Element <see cref="T:System.Linq.IQueryable" /> zawierający zero lub jedną jednostkę.</summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary>Reprezentuje element <see cref="T:System.Linq.IQueryable`1" /> zawierający zero lub jedną jednostkę.Należy go używać razem z parametrem [EnableQuery] z obszaru nazw System.Web.Http.OData lub System.Web.OData.</summary>
      <typeparam name="T">Typ danych w źródle danych.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.SingleResult`1" />.</summary>
      <param name="queryable">Element <see cref="T:System.Linq.IQueryable`1" /> zawierający zero lub jedną jednostkę.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary>Element <see cref="T:System.Linq.IQueryable`1" /> zawierający zero lub jedną jednostkę.</summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchExecutionOrder">
      <summary> Definiuje kolejność wykonywania żądań wsadowych. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.NonSequential">
      <summary> Niesekwencyjnie wykonuje żądania wsadowe. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.Sequential">
      <summary> Sekwencyjnie wykonuje żądania wsadowe. </summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchHttpRequestMessageExtensions">
      <summary> Udostępnia metody rozszerzenia dla klasy <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Batch.BatchHttpRequestMessageExtensions.CopyBatchRequestProperties(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpRequestMessage)">
      <summary> Kopije właściwości z innego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="subRequest">Żądanie podrzędne.</param>
      <param name="batchRequest">Żądanie wsadowe zawierające właściwości do skopiowania.</param>
    </member>
    <member name="T:System.Web.Http.Batch.DefaultHttpBatchHandler">
      <summary>Reprezentuje domyślne wdrożenie metody <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> kodującej komunikaty żądania/odpowiedzi HTTP jako wieloczęściowa wiadomość MIME.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Batch.DefaultHttpBatchHandler" />.</summary>
      <param name="httpServer">Element <see cref="T:System.Web.Http.HttpServer" /> do obsługi poszczególnych żądań wsadowych.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IList{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Tworzy komunikat odpowiedzi wsadowej.</summary>
      <returns>Komunikat odpowiedzi wsadowej.</returns>
      <param name="responses">Odpowiedzi dla żądań wsadowych.</param>
      <param name="request">Początkowe żądanie zawierające wszystkie żądania wsadowe.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage},System.Threading.CancellationToken)">
      <summary>Wykonuje komunikaty żądania wsadowego.</summary>
      <returns>Kolekcja <see cref="T:System.Net.Http.HttpResponseMessage" /> dla żądań wsadowych.</returns>
      <param name="requests">Kolekcja komunikatów żądań wsadowych.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecutionOrder">
      <summary>Pobiera lub ustawia kolejność wykonywania żądań wsadowych.Domyślna kolejność wykonywania jest sekwencyjna.</summary>
      <returns>Kolejność wykonywania żądań wsadowych.Domyślna kolejność wykonywania jest sekwencyjna.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Konwertuje przychodzące żądanie wsadowe na kolekcję komunikatów żądania.</summary>
      <returns>Kolekcja <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Żądanie zawierające komunikaty żądania wsadowego.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Przetwarza żądania wsadowe.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="request">Żądanie wsadowe.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.SupportedContentTypes">
      <summary>Pobiera obsługiwane typy zawartości dla żądania wsadowego.</summary>
      <returns>Obsługiwane typy zawartości dla żądania wsadowego.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Weryfikuje żądanie przychodzące zawierające komunikaty żądania wsadowego.</summary>
      <param name="request">Żądanie zawierające komunikaty żądania wsadowego.</param>
    </member>
    <member name="T:System.Web.Http.Batch.HttpBatchHandler">
      <summary>Definiuje abstrakcję obsługi żądań wsadowych HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Batch.HttpBatchHandler" />.</summary>
      <param name="httpServer">Element <see cref="T:System.Web.Http.HttpServer" /> do obsługi poszczególnych żądań wsadowych.</param>
    </member>
    <member name="P:System.Web.Http.Batch.HttpBatchHandler.Invoker">
      <summary>Pobiera element wywołujący, aby wysłać żądania wsadowe do elementu <see cref="T:System.Web.Http.HttpServer" />.</summary>
      <returns>Element wywołujący, aby wysłać żądania wsadowe do elementu <see cref="T:System.Web.Http.HttpServer" />.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Przetwarza przychodzące żądanie wsadowe jako pojedynczy element <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Odpowiedź wsadowa.</returns>
      <param name="request">Żądanie wsadowe.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Wysyła asynchronicznie program obsługi wsadu.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="request">Żądanie wysłania.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Wywołuje metody akcji kontrolera.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wywołuje określoną akcję przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Wywołana akcja.</returns>
      <param name="actionContext">Kontekst kontrolera.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Reprezentuje selektor akcji oparty na odbiciu.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Pobiera mapowania akcji dla klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Mapowania akcji.</returns>
      <param name="controllerDescriptor">Informacje opisujące kontroler.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Wybiera akcję dla klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Wybrana akcja.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Reprezentuje kontener dla usług, które mogą być specyficzne dla kontrolera.  W ten sposób tworzona jest kopia-cień usług z nadrzędnej klasy <see cref="T:System.Web.Http.Controllers.ServicesContainer" />. Kontroler może albo ustawić usługę w tym miejscu, albo przejść do bardziej globalnego zestawu usług.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ControllerServices" />.</summary>
      <param name="parent">Nadrzędny kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Usuwa usługę o jednym wystąpieniu spośród usług domyślnych.</summary>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Pobiera usługę o określonym typie.</summary>
      <returns>Pierwsze wystąpienie usługi lub wartość null, jeśli usługa nie została znaleziona.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Pobiera listę obiektów usługi dla danego typu usługi i sprawdza typ usługi.</summary>
      <returns>Lista obiektów usługi o danym typie.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Pobiera listę obiektów usługi o danym typie usługi.</summary>
      <returns>Lista obiektów usługi o określonym typie albo pusta lista, jeśli usługi nie uda się znaleźć.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Sprawdza, czy typ usługi to typ o jednym wystąpieniu.</summary>
      <returns>Wartość true, jeśli typ usługi ma najwyżej jedno wystąpienie, lub wartość false, jeśli typ usługi obsługuje wiele wystąpień.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Zamienia obiekt usługi o jednym wystąpieniu.</summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Obiekt usługi zastępujący poprzednie wystąpienie.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Opisuje, *jak* zostanie wykonane wiązanie, ale w rzeczywistości nie tworzy wiązania.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <param name="actionDescriptor">Wskaźnik wstecz do akcji, dla której utworzono to wiązanie.  </param>
      <param name="bindings">Wiązania synchroniczne dla każdego parametru.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Pobiera lub ustawia wskaźnik wstecz do akcji, dla której utworzono to wiązanie.  </summary>
      <returns>Wskaźnik wstecz do akcji, dla której utworzono to wiązanie.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Wykonuje asynchronicznie wiązanie dla danego kontekstu żądania.</summary>
      <returns>Zadanie sygnalizowane po zakończeniu wiązania. </returns>
      <param name="actionContext">Kontekst akcji dla wiązania. Zawiera słownik parametrów, który zostanie wypełniony.</param>
      <param name="cancellationToken">Token anulowania dla anulowania operacji wiązania. Integrator może także powiązać parametr z tym elementem.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Pobiera lub ustawia wiązania synchroniczne dla każdego parametru. </summary>
      <returns>Wiązania synchroniczne dla każdego parametru.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Zawiera informacje dla wykonywanej akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Pobiera listę argumentów akcji.</summary>
      <returns>Lista argumentów akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji dla kontekstu akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Pobiera lub ustawia kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Pobiera słownik stanów modelu dla kontekstu.</summary>
      <returns>Słownik stanów modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Pobiera komunikat żądania dla kontekstu akcji.</summary>
      <returns>Komunikat żądania dla kontekstu akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.RequestContext">
      <summary>Pobiera kontekst bieżącego żądania.</summary>
      <returns>Kontekst bieżącego żądania.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Pobiera lub ustawia komunikat odpowiedzi dla kontekstu akcji.</summary>
      <returns>Komunikat odpowiedzi dla kontekstu akcji.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Zawiera metody rozszerzenia dla klasy <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Udostępnia informacje dotyczące metod akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> przy użyciu informacji opisujących kontroler akcji.</summary>
      <param name="controllerDescriptor">Informacje opisujące kontroler akcji.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Pobiera lub ustawia wiązanie opisujące akcję.</summary>
      <returns>Wiązanie opisujące akcję.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Pobiera nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Pobiera lub ustawia konfigurację akcji.</summary>
      <returns>Konfiguracja akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Pobiera informacje opisujące kontroler akcji.</summary>
      <returns>Informacje opisujące kontroler akcji.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Wykonuje opisaną akcję i zwraca element <see cref="T:System.Threading.Tasks.Task`1" />, który po ukończeniu będzie zawierał wartość zwracaną akcji.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task`1" />, który po ukończeniu będzie zawierał wartość zwracaną akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="arguments">Lista argumentów.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Zwraca niestandardowe atrybuty powiązane z deskryptorem akcji.</summary>
      <returns>Niestandardowe atrybuty powiązane z deskryptorem akcji.</returns>
      <typeparam name="T">Deskryptor akcji.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Pobiera atrybuty niestandardowe dla akcji.</summary>
      <returns>Kolekcja atrybutów niestandardowych zastosowanych do tej akcji.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch dziedziczenia tej akcji w celu znalezienia atrybutów, a w innym razie – false.</param>
      <typeparam name="T">Typ atrybutu do szukania.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Pobiera filtry dla danej konfiguracji i akcji.</summary>
      <returns>Filtry dla danej konfiguracji i akcji.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Pobiera filtry dla deskryptora akcji.</summary>
      <returns>Filtry dla deskryptora akcji.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Pobiera parametry dla deskryptora akcji.</summary>
      <returns>Parametry dla deskryptora akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Pobiera właściwości skojarzone z tym wystąpieniem.</summary>
      <returns>Właściwości skojarzone z tym wystąpieniem.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>Pobiera konwerter do poprawnej transformacji wyniku wywołania metody ExecuteAsync(HttpControllerContext,IDictionaryString, Object)" w wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Konwerter wyniku akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Pobiera typ zwrotny deskryptora.</summary>
      <returns>Typ zwrotny deskryptora.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Pobiera kolekcję metod HTTP obsługiwanych dla deskryptora.</summary>
      <returns>Kolekcja metod HTTP obsługiwanych dla deskryptora.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Zawiera informacje dotyczące jednej operacji HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.Controllers.HttpRequestContext,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Controllers.IHttpController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="request">Żądanie HTTP.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="controller">Kontroler.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="configuration">Konfiguracja.</param>
      <param name="routeData">Dane trasy.</param>
      <param name="request">Żądanie.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Pobiera lub ustawia konfigurację.</summary>
      <returns>Konfiguracja.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Pobiera lub ustawia kontroler HTTP.</summary>
      <returns>Kontroler HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Pobiera lub ustawia deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Pobiera lub ustawia żądanie.</summary>
      <returns>Żądanie.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RequestContext">
      <summary>Pobiera lub ustawia kontekst żądania.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Pobiera lub ustawia dane trasy.</summary>
      <returns>Dane trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>Reprezentuje informacje opisujące kontrolera HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
      <param name="configuration">Konfiguracja.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Pobiera lub ustawia konfiguracje skojarzone z kontrolerem.</summary>
      <returns>Konfiguracje skojarzone z kontrolerem.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Pobiera lub ustawia nazwę kontrolera.</summary>
      <returns>Nazwa kontrolera.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Pobiera lub ustawia typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Tworzy wystąpienie kontrolera dla danej klasy <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Utworzone wystąpienie kontrolera.</returns>
      <param name="request">Komunikat żądania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Pobiera kolekcję niestandardowych atrybutów kontrolera.</summary>
      <returns>Kolekcja niestandardowych atrybutów.</returns>
      <typeparam name="T">Typ obiektu.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Zwraca kolekcję atrybutów, które mogą być przypisane do &lt;typeparamref name="T" /&gt; dla tego kontrolera deskryptora </summary>
      <returns>Kolekcja atrybutów skojarzona z tym kontrolerem.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch dziedziczenia tego kontrolera w celu znalezienia atrybutów, a w innym razie – false.</param>
      <typeparam name="T">Służy do filtrowania kolekcji atrybutów. Użyj wartości elementu <see cref="T:System.Object" />, aby pobrać wszystkie atrybuty.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Zwraca kolekcję filtrów skojarzonych z kontrolerem.</summary>
      <returns>Kolekcja filtrów skojarzonych z kontrolerem.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Pobiera właściwości skojarzone z tym wystąpieniem.</summary>
      <returns>Właściwości skojarzone z tym wystąpieniem.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Zawiera ustawienia kontrolera HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" />.</summary>
      <param name="configuration">Obiekt konfiguracji używany do inicjowania wystąpienia.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Pobiera kolekcję wystąpień klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> dla kontrolera.</summary>
      <returns>Kolekcja wystąpień klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Pobiera kolekcję funkcji wiązania parametrów dla kontrolera.</summary>
      <returns>Kolekcja funkcji wiązania parametrów.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Pobiera kolekcję wystąpień usługi dla kontrolera.</summary>
      <returns>Kolekcja wystąpień usługi.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Opisuje sposób wiązania parametru. Wiązanie powinno być statyczne (oparte wyłącznie na deskryptorze) i może być współużytkowane przez wiele żądań.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
      <param name="descriptor">Obiekt <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> opisujący parametry.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Pobiera klasę <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> użytą do zainicjowania tego wystąpienia.</summary>
      <returns>Wystąpienie <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Jeśli wiązanie jest nieprawidłowe, pobiera komunikat o błędzie opisujący błąd wiązania.</summary>
      <returns>Komunikat o błędzie. Jeśli wiązanie powiodło się, wartość to null.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje wiązanie dla danego żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="metadataProvider">Dostawca metadanych do użycia w celu weryfikacji.</param>
      <param name="actionContext">Kontekst akcji dla wiązania. Kontekst akcji zawiera słownik parametrów, który zostanie wypełniony na podstawie parametru.</param>
      <param name="cancellationToken">Token anulowania dla anulowania operacji wiązania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Pobiera wartość parametru ze słownika argumentów kontekstu akcji.</summary>
      <returns>Wartość tego parametru w danym kontekście akcji lub wartość null, jeśli parametr nie został ustawiony.</returns>
      <param name="actionContext">Kontekst akcji.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Pobiera wartość wskazującą, czy wiązanie powiodło się.</summary>
      <returns>Wartość true, jeśli wiązanie powiodło się; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Ustawia wynik tego powiązania parametru w słowniku argumentów kontekstu akcji.  </summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="value">Wartość parametru.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Zwraca wartość wskazującą, czy to wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> będzie odczytywać element body encji komunikatu HTTP.</summary>
      <returns>Wartość true, jeśli obiekt <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> będzie odczytywał element body encji, w przeciwnym razie — wartość false.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>Reprezentuje deskryptor parametru HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> dla obiektu <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.HttpConfiguration" /> dla obiektu <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną parametru.</summary>
      <returns>Wartość domyślna parametru.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Pobiera kolekcję atrybutów niestandardowych z parametru.</summary>
      <returns>Kolekcja atrybutów niestandardowych z parametru.</returns>
      <typeparam name="T">Typ atrybutów niestandardowych.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Pobiera wartość wskazującą, czy parametr jest opcjonalny.</summary>
      <returns>Wartość true, jeśli parametr jest opcjonalny; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Pobiera lub ustawia atrybut wiązania parametru.</summary>
      <returns>Atrybut wiązania parametru.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Pobiera prefiks tego parametru.</summary>
      <returns>Prefiks tego parametru.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Pobiera właściwości tego parametru.</summary>
      <returns>Właściwości tego parametru.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpRequestContext">
      <summary>Reprezentuje kontekst skojarzony z żądaniem.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpRequestContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpRequestContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.ClientCertificate">
      <summary>Pobiera lub ustawia certyfikat klienta.</summary>
      <returns>Zwraca wartość <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Configuration">
      <summary>Pobiera lub ustawia konfigurację.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IncludeErrorDetail">
      <summary>Pobiera lub ustawia wartość wskazującą, czy szczegóły błędu, takie jak komunikaty wyjątku i ślady stosu, powinny zostać dołączone do odpowiedzi na to żądanie.</summary>
      <returns>Zwraca wartość <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IsLocal">
      <summary>Pobiera lub ustawia wartość wskazującą, czy żądanie pochodzi z adresu lokalnego.</summary>
      <returns>Zwraca wartość <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Principal">
      <summary>Pobiera lub ustawia podmiot zabezpieczeń.</summary>
      <returns>Zwraca wartość <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.RouteData">
      <summary>Pobiera lub ustawia dane trasy.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.Routing.IHttpRouteData" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Url">
      <summary>Pobiera lub ustawia fabrykę używaną do generowania adresów URL dla innych interfejsów API.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.VirtualPathRoot">
      <summary>Pobiera lub ustawia katalog główny ścieżki wirtualnej.</summary>
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionHttpMethodProvider"></member>
    <member name="P:System.Web.Http.Controllers.IActionHttpMethodProvider.HttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> Kontrakt dla procedury konwersji, która może przyjąć wynik akcji zwrócony z metody &lt;see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; i przekonwertować go na wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konwertuje określony obiekt <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> na inny obiekt.</summary>
      <returns>Przekonwertowany obiekt.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Definiuje metodę pobierania powiązania akcji skojarzonej z wartością parametru.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Pobiera klasę <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Jeśli kontrolerowi zostanie nadany atrybut z tym interfejsem, zostaje on wywołany w celu zainicjowania kontrolera.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Wywołanie zwrotne inicjowane w celu ustawienia przesłonięć tego elementu controllerDescriptor dla poszczególnych kontrolerów. </summary>
      <param name="controllerSettings">Ustawienia kontrolera do zainicjowania.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera. Należy zwrócić uwagę, że obiekt <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> może zostać skojarzony z pochodnym typem kontrolera, o ile dziedziczony jest obiekt <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" />.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Zawiera metodę, która służy do wywoływania operacji HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Wykonuje asynchronicznie operację HTTP.</summary>
      <returns>Nowo rozpoczęte zadanie.</returns>
      <param name="actionContext">Kontekst wykonywania.</param>
      <param name="cancellationToken">Token anulowania przypisany do operacji HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Zawiera logikę wybierania metody akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Zwraca mapę, wyznaczaną przez ciąg akcji, wszystkich elementów klasy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, które selektor może wybrać.Ta metoda jest wywoływana przede wszystkim przez interfejs <see cref="T:System.Web.Http.Description.IApiExplorer" /> w celu wykrycia wszystkich możliwych akcji w kontrolerze.</summary>
      <returns>Mapa elementów <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, które selektor może wybrać, lub wartość null, jeśli selektor nie ma dobrze zdefiniowanego mapowania klasy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Wybiera akcję dla kontrolera.</summary>
      <returns>Akcja dla kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Reprezentuje kontroler HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Uruchamia kontroler w celu synchronizacji.</summary>
      <returns>Kontroler.</returns>
      <param name="controllerContext">Bieżący kontekst kontrolera testowego.</param>
      <param name="cancellationToken">Powiadomienie anulujące operację.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Definiuje metody rozszerzenia dla klasy <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Wiąże parametr, który powoduje błąd. </summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="message">Komunikat o błędzie opisujący przyczynę niepowodzenia powiązania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Powiąż parametr tak, jakby w deklaracji nadano mu atrybut.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Parametr, dla którego ma zostać udostępnione wiązanie.</param>
      <param name="attribute">Atrybut opisujący wiązanie.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Wiąże parametr, analizując treść elementu HTTP body.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Wiąże parametr, analizując treść elementu HTTP body.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="formatters">Lista elementów formatujących, umożliwiająca wybór odpowiedniego elementu formatującego w celu serializacji parametru w obiekt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Wiąże parametr, analizując treść elementu HTTP body.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="formatters">Lista elementów formatujących, umożliwiająca wybór odpowiedniego elementu formatującego w celu serializacji parametru w obiekt.</param>
      <param name="bodyModelValidator">Moduł weryfikacji modelu elementu body użyty do weryfikacji parametru.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Wiąże parametr, analizując treść elementu HTTP body.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="formatters">Lista elementów formatujących, umożliwiająca wybór odpowiedniego elementu formatującego w celu serializacji parametru w obiekt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Wiąże parametr, analizując ciąg zapytania.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Wiąże parametr, analizując ciąg zapytania.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="valueProviderFactories">Fabryki dostawców wartości udostępniające dane parametru ciągu zapytania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Wiąże parametr, analizując ciąg zapytania.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="binder">Integrator modelu użyty do włączenia parametru w obiekt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Wiąże parametr, analizując ciąg zapytania.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="binder">Integrator modelu użyty do włączenia parametru w obiekt.</param>
      <param name="valueProviderFactories">Fabryki dostawców wartości udostępniające dane parametru ciągu zapytania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Wiąże parametr, analizując ciąg zapytania.</summary>
      <returns>Obiekt wiązania parametru HTTP.</returns>
      <param name="parameter">Deskryptor parametru opisujący parametr do powiązania.</param>
      <param name="valueProviderFactories">Fabryki dostawców wartości udostępniające dane parametru ciągu zapytania.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Reprezentuje odbitą synchroniczną lub asynchroniczną metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> z określonymi szczegółami deskryptora i metody.</summary>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="methodInfo">Informacje dotyczące metody akcji.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Pobiera nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Wykonuje opisaną akcję i zwraca element <see cref="T:System.Threading.Tasks.Task`1" />, który po ukończeniu będzie zawierał wartość zwracaną akcji.</summary>
      <returns>Element [T:System.Threading.Tasks.Task`1"], który po ukończeniu będzie zawierał wartość zwracaną akcji.</returns>
      <param name="controllerContext">Kontekst.</param>
      <param name="arguments">Argumenty.</param>
      <param name="cancellationToken">Token anulowania na potrzeby anulowania akcji.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Zwraca tablicę z identyfikowanymi według typu atrybutami niestandardowymi zdefiniowanymi dla tego elementu.</summary>
      <returns>Tablica z atrybutami niestandardowymi lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch dziedziczenia tej akcji w celu znalezienia atrybutów, a w innym razie – false.</param>
      <typeparam name="T">Typ atrybutów niestandardowych.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Pobiera informacje o filtrach akcji.</summary>
      <returns>Informacje o filtrze.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetHashCode"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Pobiera parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Pobiera lub ustawia informacje dotyczące metody akcji.</summary>
      <returns>Informacje dotyczące metody akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Pobiera typ zwrotny tej metody.</summary>
      <returns>Typ zwrotny tej metody.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Pobiera lub ustawia obsługiwane metody HTTP.</summary>
      <returns>Obsługiwane metody HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Reprezentuje odzwierciedlony deskryptor parametru HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameterInfo">Informacje o parametrze.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną dla parametru.</summary>
      <returns>Wartość domyślna dla parametru.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Pobiera kolekcję atrybutów niestandardowych z parametru.</summary>
      <returns>Kolekcja atrybutów niestandardowych z parametru.</returns>
      <typeparam name="TAttribute">Typ atrybutów niestandardowych.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Pobiera wartość wskazującą, czy parametr jest opcjonalny.</summary>
      <returns>Wartość true, jeśli parametr jest opcjonalny; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Pobiera lub ustawia informacje o parametrze.</summary>
      <returns>Informacje o parametrze.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Reprezentuje konwerter dla akcji z typem zwrotnym <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konwertuje obiekt <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> na inny obiekt.</summary>
      <returns>Przekonwertowany obiekt.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>Klasa abstrakcyjna udostępniająca kontener dla usług używanych przez interfejs API sieci Web platformy ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Dodaje usługę na końcu listy usług dla danego typu usługi.  </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Wystąpienie usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Dodaje usługi z określonej kolekcji na końcu listy usług dla danego typu usługi. </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="services">Usługi do dodania.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Usuwa wszystkie wystąpienia usług o danym typie usługi.  </summary>
      <param name="serviceType">Typ usługi do wyczyszczenia z listy usług.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Usuwa wszystkie wystąpienia typu usługi o wielu wystąpieniach.</summary>
      <param name="serviceType">Typ usługi do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Usuwa typ usługi o jednym wystąpieniu.</summary>
      <param name="serviceType">Typ usługi do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Wykonuje zdefiniowane przez aplikację zadania skojarzone ze zwalnianiem lub resetowaniem zasobów niezarządzanych.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Szuka usługi pasującej do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks pierwszego wystąpienia. </summary>
      <returns>Jeśli wyszukiwanie powiedzie się, liczony od zera indeks pierwszego wystąpienia; w przeciwnym razie -1.</returns>
      <param name="serviceType">Typ usługi.</param>
      <param name="match">Delegat definiujący warunki elementu do wyszukania. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Pobiera wystąpienie usługi o określonym typie.</summary>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Pobiera modyfikowalną listę wystąpień usługi o określonym typie.</summary>
      <returns>Modyfikowalna lista wystąpień usługi.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Pobiera kolekcję wystąpień usługi o określonym typie.</summary>
      <returns>Kolekcja wystąpień usługi.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Wstawia usługę do kolekcji pod określony indeks. </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="index">Liczony od zera indeks, pod który powinna zostać wstawiona usługa.Przekazanie wartości <see cref="F:System.Int32.MaxValue" /> daje pewność, że element jest dodawany na końcu.</param>
      <param name="service">Usługa do wstawienia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Wstawia elementy kolekcji na listę usług pod określonym indeksem. </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="index">Liczony od zera indeks, pod którym powinny zostać wstawione nowe elementy.Przekazanie wartości <see cref="F:System.Int32.MaxValue" /> daje pewność, że nowe elementy są dodawane na końcu.</param>
      <param name="services">Kolekcja usług do wstawienia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Określa, czy typ usługi powinien być pobierany za pomocą funkcji GetService, czy funkcji GetServices.  </summary>
      <returns>Wartość true, jeśli usługa jest pojedyncza. </returns>
      <param name="serviceType">Typ usługi, której ma dotyczyć zapytanie.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Usuwa pierwsze wystąpienie danej usługi z listy usług dla wskazanego typu usługi. </summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — wartość false.</returns>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Wystąpienie usługi do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Usuwa wszystkie elementy odpowiadające warunkom zdefiniowanym przez określony predykat. </summary>
      <returns>Liczba elementów usuniętych z listy.</returns>
      <param name="serviceType">Typ usługi.</param>
      <param name="match">Delegat definiujący warunki elementu do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Usuwa usługę pod określonym indeksem. </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="index">Liczony od zera indeks usługi do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary>Zamienia wszystkie istniejące usługi o danym typie usługi na wskazane wystąpienie usługi.Działa zarówno w przypadku usług pojedynczych, jak i mnogich.</summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Wystąpienie usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Zamienia wszystkie wystąpienia usługi o wielu wystąpieniach na nowe wystąpienie.</summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Wystąpienie usługi, które zastąpi bieżące usługi o wskazanym typie.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Zamienia wszystkie istniejące usługi o danym typie usługi na wskazane wystąpienia usług. </summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="services">Wystąpienia usług.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Zamienia usługę o jednym wystąpieniu, która ma określony typ.</summary>
      <param name="serviceType">Typ usługi. </param>
      <param name="service">Wystąpienie usługi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Usuwa buforowane wartości dla pojedynczego typu usługi.</summary>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Konwerter używany do tworzenia odpowiedzi z akcji, które zwracają dowolną wartość typu <paramref name="T" />. </summary>
      <typeparam name="T">Zadeklarowany typ zwrotny akcji.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konwertuje wynik akcji o dowolnym typie zwrotnym <paramref name="T" /> na wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Nowo utworzony obiekt <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="controllerContext">Kontekst kontrolera akcji.</param>
      <param name="actionResult">Wynik wykonywania.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Reprezentuje konwerter służący do tworzenia odpowiedzi z akcji, które nie zwracają wartości.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Controllers.VoidResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konwertuje utworzone odpowiedzi z akcji, które nie zwracają wartości.</summary>
      <returns>Przekonwertowana odpowiedź.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Reprezentuje kontener iniekcji zależności.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Rozpoczyna zakres rozwiązywania. </summary>
      <returns>Zakres zależności.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Reprezentuje interfejs dla zakresu zależności.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Pobiera usługę z zakresu.</summary>
      <returns>Pobrana usługa.</returns>
      <param name="serviceType">Usługa do pobrania.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Pobiera kolekcję usług z zakresu.</summary>
      <returns>Pobrana kolekcja usług.</returns>
      <param name="serviceType">Kolekcja usług do pobrania.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Opisuje interfejs API zdefiniowany przez ścieżkę względną identyfikatora URI i metodę HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Pobiera lub ustawia deskryptor akcji, który będzie obsługiwał interfejs API. </summary>
      <returns> Deskryptor akcji. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Pobiera lub ustawia dokumentację interfejsu API. </summary>
      <returns> Dokumentacja. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Pobiera lub ustawia metodę HTTP. </summary>
      <returns> Metoda HTTP. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary>Pobiera identyfikator.Identyfikator jest unikatowy w ramach <see cref="T:System.Web.Http.HttpServer" />.</summary>
      <returns>Identyfikator.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Pobiera opisy parametrów. </summary>
      <returns>Opisy parametrów.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Pobiera lub ustawia ścieżkę względną. </summary>
      <returns> Ścieżka względna. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ResponseDescription">
      <summary>Pobiera lub ustawia opis odpowiedzi.</summary>
      <returns>Opis odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Pobiera lub ustawia zarejestrowaną trasę dla interfejsu API. </summary>
      <returns> Trasa. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Pobiera obsługiwane elementy formatujące treść żądania. </summary>
      <returns>Obsługiwane elementy formatujące treść żądania.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Pobiera obsługiwane elementy formatujące odpowiedzi. </summary>
      <returns>Obsługiwane elementy formatujące odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Eksploruje obszar identyfikatorów URI usługi na podstawie tras, kontrolerów i akcji dostępnych w systemie. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Pobiera opisy interfejsów API. Opisy są inicjowane przy pierwszym dostępie. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Pobiera lub ustawia dostawcę dokumentacji. Dostawca będzie odpowiedzialny za dokumentację interfejsu API. </summary>
      <returns> Dostawca dokumentacji. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Pobiera kolekcję metod HttpMethods obsługiwanych przez akcję. Wywoływana podczas inicjowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Kolekcja metod HttpMethods obsługiwana przez akcję.</returns>
      <param name="route">Trasa.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Określa, czy akcja powinna być brana pod uwagę podczas generowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Wywoływana podczas inicjowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Wartość true, jeśli akcja powinna być brana pod uwagę podczas generowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />, w przeciwnym razie wartość false</returns>
      <param name="actionVariableValue">Wartość zmiennej akcji z trasy.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="route">Trasa.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Określa, czy kontroler powinien być brany pod uwagę podczas generowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Wywoływana podczas inicjowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Wartość true, jeśli kontroler powinien być brany pod uwagę podczas generowania klasy <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />, w przeciwnym razie wartość false.</returns>
      <param name="controllerVariableValue">Wartość zmiennej kontrolera z trasy.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="route">Trasa.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> Ten atrybut może być używany dla kontrolerów i akcji w celu wywierania wpływu na zachowanie elementu <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Pobiera lub ustawia wartość wskazującą, czy wykluczyć kontroler lub akcję z wystąpień klasy <see cref="T:System.Web.Http.Description.ApiDescription" /> generowanych przez obiekt <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <returns>Wartość true, jeśli należy ignorować kontroler lub akcję; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Opisuje parametr w interfejsie API zdefiniowany przez ścieżkę względną identyfikatora URI i metodę HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ApiParameterDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Pobiera lub ustawia dokumentację. </summary>
      <returns> Dokumentacja. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Pobiera lub ustawia nazwę. </summary>
      <returns> Nazwa. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Pobiera lub ustawia deskryptor parametru. </summary>
      <returns> Deskryptor parametru. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Pobiera lub ustawia źródło parametru. Może on pochodzić z identyfikatora URI żądania, treści żądania lub z innych miejsc. </summary>
      <returns> Źródło. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Opisuje pochodzenie parametru. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>Parametr pochodzi z elementu body.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>Parametr pochodzi z miejsca określonego identyfikatorem URI.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>Miejsce pochodzenia jest nieznane.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Definiuje interfejs w celu pobrania kolekcji klasy <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Pobiera opisy interfejsu API. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Definiuje dostawcę odpowiedzialnego za dokumentację usługi. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Pobiera dokumentację na podstawie klasy <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </summary>
      <returns>Dokumentacja dla kontrolera.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Pobiera dokumentację na podstawie klasy <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />. </summary>
      <returns>Dokumentacja dla kontrolera.</returns>
      <param name="parameterDescriptor">Deskryptor parametru.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="T:System.Web.Http.Description.ResponseDescription">
      <summary>Opisuje reakcję interfejsu API.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseDescription.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ResponseDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.DeclaredType">
      <summary>Pobiera lub ustawia zadeklarowany typ odpowiedzi.</summary>
      <returns>Deklarowany typ odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.Documentation">
      <summary>Pobiera lub ustawia dokumentację odpowiedzi.</summary>
      <returns>Dokumentacja odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.ResponseType">
      <summary>Pobiera lub ustawia rzeczywisty typ odpowiedzi.</summary>
      <returns>Rzeczywisty typ odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ResponseTypeAttribute">
      <summary>Służy do określania typu jednostki zwracanego przez akcję, gdy deklarowanym typem zwracanym jest <see cref="T:System.Net.Http.HttpResponseMessage" /> lub <see cref="T:System.Web.Http.IHttpActionResult" />.Typ <see cref="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType" /> zostanie odczytany przez <see cref="T:System.Web.Http.Description.ApiExplorer" /> podczas generowania <see cref="T:System.Web.Http.Description.ApiDescription" />.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseTypeAttribute.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Description.ResponseTypeAttribute" />.</summary>
      <param name="responseType">Typ odpowiedzi.</param>
    </member>
    <member name="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType">
      <summary>Pobiera typ odpowiedzi.</summary>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Udostępnia implementację klasy <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> bez zależności zewnętrznych. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Zwraca listę zestawów dostępnych dla danej aplikacji. </summary>
      <returns>Kolekcja &lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt; zestawów.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Reprezentyje domyślną implementację klasy <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />. Inną implementację można zarejestrować za pomocą klasy <see cref="T:System.Web.Http.Services.DependencyResolver" />. Ta klasa jest zoptymalizowana na potrzeby przypadków, w których istnieje jedno wystąpienie klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> dla każdego wystąpienia klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, ale obsługuje ona także przypadki, w których istnieje wiele wystąpień klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dla jednej klasy <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />. W drugim przypadku wyszukiwanie jest wolniejsze, ponieważ przeszukuje słownik <see cref="P:HttpControllerDescriptor.Properties" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Tworzy interfejs <see cref="T:System.Web.Http.Controllers.IHttpController" /> określony przez klasę <paramref name="controllerType" /> przy użyciu danej klasy <paramref name="request" />.</summary>
      <returns>Wystąpienie typu <paramref name="controllerType" />.</returns>
      <param name="request">Komunikat żądania.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Reprezentuje domyślne wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> do wybierania elementu <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> przy danym elemencie <see cref="T:System.Net.Http.HttpRequestMessage" />. Inną implementację można zarejestrować za pomocą klasy <see cref="P:System.Web.Http.HttpConfiguration.Services" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" />.</summary>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Określa ciąg sufiksu w nazwie kontrolera.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Zwraca mapę, wyznaczaną przez ciąg kontrolera, wszystkich obiektów <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, które selektor może wybrać. </summary>
      <returns>Mapa wszystkich obiektów <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, które selektor może wybrać, lub wartość null, jeśli selektor nie ma dobrze zdefiniowanego mapowania klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Pobiera nazwę kontrolera dla określonego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Nazwa kontrolera dla określonego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Komunikat żądania HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Wybiera obiekt <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dla danego obiektu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Wystąpienie elementu <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dla określonego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Komunikat żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Udostępnia implementację interfejsu <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> bez zależności zewnętrznych. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />, używając predykatu do filtrowania typów kontrolerów. </summary>
      <param name="predicate">Predykat.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Zwraca listę kontrolerów dostępnych dla danej aplikacji. </summary>
      <returns>Kolekcja (&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;) kontrolerów.</returns>
      <param name="assembliesResolver">Mechanizm rozpoznawania zestawów.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Pobiera wartość wskazującą, czy typ mechanizmu rozpoznawania jest predykatem typu kontrolera.</summary>
      <returns>Wartość true, jeśli typ mechanizmu rozpoznawania jest predykatem typu kontrolera; w przeciwnym razie — false.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Wysyła przychodzącą klasę <see cref="T:System.Net.Http.HttpRequestMessage" /> do implementacji interfejsu <see cref="T:System.Web.Http.Controllers.IHttpController" /> w celu przetworzenia.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> z określoną konfiguracją.</summary>
      <param name="configuration">Konfiguracja HTTP.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Pobiera konfigurację HTTP.</summary>
      <returns>Konfiguracja HTTP.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Wysyła przychodzącą klasę <see cref="T:System.Net.Http.HttpRequestMessage" /> do interfejsu <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący trwającą operację.</returns>
      <param name="request">Żądanie wysłania.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Ta klasa to domyślny program obsługi komunikatów punktu końcowego, który sprawdza obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> dopasowanej trasy i wybiera program obsługi komunikatów do wywołania. Jeśli obiekt <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> ma wartość null, następuje delegacja do obiektu <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> przy użyciu dostarczonego obiektu <see cref="T:System.Web.Http.HttpConfiguration" /> i obiektu <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> jako domyślnego programu obsługi. </summary>
      <param name="configuration">Konfiguracja serwera.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> przy użyciu udostępnionych obiektów <see cref="T:System.Web.Http.HttpConfiguration" /> i <see cref="T:System.Net.Http.HttpMessageHandler" />. </summary>
      <param name="configuration">Konfiguracja serwera.</param>
      <param name="defaultHandler">Domyślny program obsługi, który ma być używany, gdy obiekt <see cref="T:System.Web.Http.Routing.IHttpRoute" /> nie ma przypisanego obiektu <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" />.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie HTTP jako operację asynchroniczną.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="request">Komunikat żądania HTTP do wysłania.</param>
      <param name="cancellationToken">Token anulowania do anulowania operacji.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary>Udostępnia abstrakcję do zarządzania zestawami danej aplikacji.Inną implementację można zarejestrować za pomocą klasy <see cref="T:System.Web.Http.Services.DependencyResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Zwraca listę zestawów dostępnych dla danej aplikacji. </summary>
      <returns>Kolekcja (&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;) zestawów.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Definiuje metody wymagane dla interfejsu <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Controllers.IHttpController" />.</returns>
      <param name="request">Żądanie komunikatu.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera HTTP.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Definiuje metody wymagane dla fabryki interfejsu <see cref="T:System.Web.Http.Controllers.IHttpController" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary>Zwraca mapę, wyznaczaną przez ciąg kontrolera, wszystkich obiektów <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, które selektor może wybrać.Ta metoda jest wywoływana przede wszystkim przez interfejs <see cref="T:System.Web.Http.Description.IApiExplorer" /> w celu wykrycia wszystkich możliwych kontrolerów w systemie.</summary>
      <returns>Mapa wszystkich obiektów <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, które selektor może wybrać, lub wartość null, jeśli selektor nie ma dobrze zdefiniowanego mapowania klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Wybiera obiekt <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dla danego obiektu <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
      <param name="request">Komunikat żądania.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Udostępnia abstrakcję do zarządzania typami kontrolerów danej aplikacji. Inną implementację można zarejestrować za pomocą klasy DependencyResolver.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Zwraca listę kontrolerów dostępnych dla danej aplikacji. </summary>
      <returns>Kolekcja (&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;) kontrolerów.</returns>
      <param name="assembliesResolver">Mechanizm rozpoznawania zestawów z błędem.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks">
      <summary>Dostarcza bloki catch używane w tym zestawie.</summary>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler">
      <summary>Pobiera blok catch w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</summary>
      <returns>Blok catch w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher">
      <summary>Pobiera blok catch w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</summary>
      <returns>Blok catch w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer">
      <summary>Pobiera blok catch używane w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</summary>
      <returns>Blok catch w System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter">
      <summary>Pobiera blok catch w System.Web.Http.ApiController.ExecuteAsync podczas używania <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</summary>
      <returns>Blok catch w System.Web.Http.ApiController.ExecuteAsync podczas używania <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContext">
      <summary>Reprezentuje wyjątek i dane kontekstowe powiązane z nim w chwili jego zgłoszenia.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">Zgłoszony wyjątek.</param>
      <param name="catchBlock">Block catch, gdzie wyjątek wystąpił.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">Zgłoszony wyjątek.</param>
      <param name="catchBlock">Block catch, gdzie wyjątek wystąpił.</param>
      <param name="request">Żądanie przetwarzane, gdy wyjątek został zgłoszony.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">Zgłoszony wyjątek.</param>
      <param name="catchBlock">Block catch, gdzie wyjątek wystąpił.</param>
      <param name="request">Żądanie przetwarzane, gdy wyjątek został zgłoszony.</param>
      <param name="response">Żądanie zwracane, gdy wyjątek został zgłoszony.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Web.Http.Controllers.HttpActionContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">Zgłoszony wyjątek.</param>
      <param name="catchBlock">Block catch, gdzie wyjątek wystąpił.</param>
      <param name="actionContext">Kontekst akcji, w której wyjątek wystąpił.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ActionContext">
      <summary>Pobiera kontekst akcji, w którym wyjątek wystąpił, jeśli dostępna.</summary>
      <returns>Kontekst akcji, w którym wyjątek wystąpił, jeśli dostępna.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.CatchBlock">
      <summary>Pobiera block catch, gdzie wyjątek wystąpił.</summary>
      <returns>Block catch, gdzie wyjątek wystąpił.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ControllerContext">
      <summary>Pobiera kontekst kontrolera, w którym wyjątek wystąpił, jeśli dostępna.</summary>
      <returns>Kontekst kontrolera, w którym wyjątek wystąpił, jeśli dostępna.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Exception">
      <summary>Pobiera zgłoszony wyjątek.</summary>
      <returns>Zgłoszony wyjątek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Request">
      <summary>Pobiera żądanie przetwarzane, gdy wyjątek został zgłoszony.</summary>
      <returns>Żądanie przetwarzane, gdy wyjątek został zgłoszony.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.RequestContext">
      <summary>Pobiera kontekst żądania, w którym wyjątek wystąpił.</summary>
      <returns>Kontekst żądania, w którym wyjątek wystąpił.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Response">
      <summary>Pobiera żądanie przesyłane, gdy wyjątek został zgłoszony.</summary>
      <returns>Żądanie przesyłane, gdy wyjątek został zgłoszony.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock">
      <summary>Reprezentuje lokalizacje bloku catch dla kontekstu wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock" />.</summary>
      <param name="name">Etykieta dla bloku catch, gdzie wyjątek wystąpił.</param>
      <param name="isTopLevel">Wartość wskazująca, czy blok catch, gdzie wyjątek wystąpił, jest ostatnim blokiem przed hostem.</param>
      <param name="callsHandler">Wartość wskazująca, czy wyjątki w bloku catch można obsłużyć po ich zarejestrowaniu.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.CallsHandler">
      <summary>Pobiera wartość wskazującą, czy wyjątki w bloku catch można obsłużyć po ich zarejestrowaniu.</summary>
      <returns>Wartość wskazująca, czy wyjątki w bloku catch można obsłużyć po ich zarejestrowaniu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.IsTopLevel">
      <summary>Pobiera wartość wskazującą, czy blok catch, gdzie wyjątek wystąpił, jest ostatnim blokiem przed hostem.</summary>
      <returns>Wartość wskazująca, czy blok catch, gdzie wyjątek wystąpił, jest ostatnim blokiem przed hostem.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.Name">
      <summary>Pobiera etykietę dla bloku catch, gdzie wyjątek wystąpił.</summary>
      <returns>Etykieta dla bloku catch, gdzie wyjątek wystąpił.</returns>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.ToString">
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandler">
      <summary>Reprezentuje moduł rejestrujący nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Po przesłonięciu w klasie pochodnej obsługuje wyjątek synchronicznie.</summary>
      <param name="context">Kontekst modułu rejestrującego wyjątku.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Po przesłonięciu w klasie pochodnej obsługuje wyjątek asynchronicznie.</summary>
      <returns>Zadanie reprezentujące asynchroniczną operację obsługiwania wyjątku.</returns>
      <param name="context">Kontekst modułu rejestrującego wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Określa, czy wyjątek powinien zostać obsługiwany.</summary>
      <returns>Wartość true , jeśli wyjątek ma być obsługiwany; w przeciwnym razie wartość false.</returns>
      <param name="context">Kontekst modułu rejestrującego wyjątku.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.System#Web#Http#ExceptionHandling#IExceptionHandler#HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext">
      <summary>Reprezentuje kontekst, w którym wystąpiła obsługa nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" />.</summary>
      <param name="exceptionContext">Kontekst wyjątku.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.CatchBlock">
      <summary>Pobiera block catch, gdzie wyjątek wystąpił.</summary>
      <returns>Block catch, gdzie wyjątek wystąpił.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Exception">
      <summary>Pobiera zgłoszony wyjątek.</summary>
      <returns>Zgłoszony wyjątek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.ExceptionContext">
      <summary>Pobiera kontekst wyjątku dostarczający dane wyjątku i powiązane informacje.</summary>
      <returns>Kontekst wyjątku dostarczający dane wyjątku i powiązane informacje.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Request">
      <summary>Pobiera żądanie przetwarzane, gdy wyjątek został zgłoszony.</summary>
      <returns>Żądanie przetwarzane, gdy wyjątek został zgłoszony.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.RequestContext">
      <summary>Pobiera kontekst żądania, w którym wyjątek wystąpił.</summary>
      <returns>Kontekst żądania, w którym wyjątek wystąpił.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Result">
      <summary>Pobiera lub ustawia wynik dostarczający komunikat odpowiedzi podczas obsługi wyjątku.</summary>
      <returns>Wynik dostarczający komunikat odpowiedzi podczas obsługi wyjątku.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions">
      <summary>Udostępnia metody rozszerzenia dla klasy <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions.HandleAsync(System.Web.Http.ExceptionHandling.IExceptionHandler,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Wywołuje program obsługi wyjątku i określa odpowiedź obsługującą go, jeśli występuje.</summary>
      <returns>Zadanie, które po zakończeniu zawiera komunikat odpowiedzi zwracany podczas obsługiwania wyjątku, lub wartość null, jeśli wyjątek pozostanie nieobsłużony.</returns>
      <param name="handler">Program obsługi nieobsługiwanego wyjątku.</param>
      <param name="context">Kontekst wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLogger">
      <summary>Reprezentuje rejestrator nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLogger" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Po przesłonięciu w klasie pochodnej rejestruje wyjątek synchronicznie.</summary>
      <param name="context">Kontekst rejestratora wyjątku.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Po przesłonięciu w klasie pochodnej rejestruje wyjątek asynchronicznie.</summary>
      <returns>Zadanie reprezentujące asynchroniczną operację rejestrowania wyjątku.</returns>
      <param name="context">Kontekst rejestratora wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Określa, czy wyjątek powinien zostać zarejestrowany.</summary>
      <returns>Wartość true , jeśli wystawca ma być weryfikowany; w przeciwnym razie wartość false.</returns>
      <param name="context">Kontekst rejestratora wyjątku.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.System#Web#Http#ExceptionHandling#IExceptionLogger#LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext">
      <summary>Reprezentuje kontekst, w którym wystąpiła rejestracja nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />.</summary>
      <param name="exceptionContext">Kontekst wyjątku.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CallsHandler">
      <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek może zostać obsłużony przez <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />, który zwróci nowy komunikat odpowiedzi.</summary>
      <returns>Pobiera lub ustawia wartość wskazującą, czy wyjątek może zostać obsłużony przez <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />, który zwróci nowy komunikat odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CatchBlock">
      <summary>Pobiera block catch, gdzie wyjątek wystąpił.</summary>
      <returns>Block catch, gdzie wyjątek wystąpił.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Exception">
      <summary>Pobiera zgłoszony wyjątek.</summary>
      <returns>Zgłoszony wyjątek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.ExceptionContext">
      <summary>Pobiera kontekst wyjątku dostarczający dane wyjątku i powiązane informacje.</summary>
      <returns>Kontekst wyjątku dostarczający dane wyjątku i powiązane informacje.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Request">
      <summary>Pobiera żądanie przetwarzane, gdy wyjątek został zgłoszony.</summary>
      <returns>Żądanie przetwarzane, gdy wyjątek został zgłoszony.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.RequestContext">
      <summary>Pobiera kontekst żądania, w którym wyjątek wystąpił.</summary>
      <returns>Kontekst żądania, w którym wyjątek wystąpił.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions">
      <summary>Udostępnia metody rozszerzenia dla klasy <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync(System.Web.Http.ExceptionHandling.IExceptionLogger,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Wywołuje moduł rejestrujący wyjątku.</summary>
      <returns>Zadanie reprezentujące asynchroniczną operację rejestrowania wyjątku.</returns>
      <param name="logger">Rejestrator nieobsługiwanego wyjątku.</param>
      <param name="context">Kontekst wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionServices">
      <summary>Tworzy usługi dla wyjątku w celu wywoływania modułu rejestrowania i obsługi z poziomu bloków catch.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera program obsługi wyjątku, który wywołuje zarejestrowaną usługę programu obsługi, jeśli występuje, i zapobiega przypadkowemu propagowaniu wyjątków do hosta.</summary>
      <returns>Program obsługi wyjątku, który wywołuje zarejestrowaną usługę programu obsługi, jeśli występuje, i zapobiega przypadkowemu propagowaniu wyjątków do hosta.</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.HttpConfiguration)">
      <summary>Pobiera program obsługi wyjątku, który wywołuje zarejestrowaną usługę programu obsługi, jeśli występuje, i zapobiega przypadkowemu propagowaniu wyjątków do hosta.</summary>
      <returns>Program obsługi wyjątku, który wywołuje zarejestrowaną usługę programu obsługi, jeśli występuje, i zapobiega przypadkowemu propagowaniu wyjątków do hosta.</returns>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Pobiera rejestrator wyjątku, który wywołuje wszystkie zarejestrowane usługi modułu rejestrującego.</summary>
      <returns>Zaawansowany rejestrator</returns>
      <param name="services">Kontener usług.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.HttpConfiguration)">
      <summary>Pobiera rejestrator wyjątku, który wywołuje wszystkie zarejestrowane usługi modułu rejestrującego.</summary>
      <returns>Zaawansowany moduł rejestrujący</returns>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionHandler">
      <summary>Określa program obsługi nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Przetwarza nieobsługiwany wyjątek, zezwalając na jego propagację lub obsługując go z użyciem zwracanego komunikatu odpowiedzi.</summary>
      <returns>Zadanie reprezentujące asynchroniczną operację obsługiwania wyjątku.</returns>
      <param name="context">Kontekst modułu rejestrującego wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionLogger">
      <summary>Określa rejestrator nieobsługiwanego wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Rejestruje nieobsługiwany wyjątek.</summary>
      <returns>Zadanie reprezentujące asynchroniczną operację rejestrowania wyjątku.</returns>
      <param name="context">Kontekst rejestratora wyjątku.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Udostępnia informacje o metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Zwraca filtry skojarzone z tą metodą akcji.</summary>
      <returns>Filtry skojarzone z tą metodą akcji.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Reprezentuje klasę podstawową dla wszystkich atrybutów filtru akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Występuje po wywołaniu metody akcji.</summary>
      <param name="actionExecutedContext">Kontekst wykonanej akcji.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Występuje przed wywołaniem metody akcji.</summary>
      <param name="actionContext">Kontekst akcji.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Wykonuje asynchronicznie akcję filtru.</summary>
      <returns>Nowo utworzone zadanie dla tej operacji.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Token anulowania przypisany do tego zadania.</param>
      <param name="continuation">Funkcja delegata, która ma być kontynuowana po wywołaniu metody akcji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Udostępnia szczegóły dla filtra autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Metoda wywoływana, gdy proces żąda autoryzacji.</summary>
      <param name="actionContext">Kontekst akcji, który hermetyzuje informacje w celu użycia klasy <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Wykonuje filtr autoryzacji podczas synchronizacji.</summary>
      <returns>Filtr autoryzacji używany podczas synchronizacji.</returns>
      <param name="actionContext">Kontekst akcji, który hermetyzuje informacje w celu użycia klasy <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
      <param name="cancellationToken">Token anulowania, który anuluje operację.</param>
      <param name="continuation">Kontynuacja operacji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Reprezentuje konfigurację dostawcy filtrów.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Zwraca filtry skojarzone z tą metodą konfiguracji.</summary>
      <returns>Filtry skojarzone z tą metodą konfiguracji.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Reprezentuje atrybuty dla filtru wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Zgłasza zdarzenie wyjątku.</summary>
      <param name="actionExecutedContext">Kontekst dla akcji.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnExceptionAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Wykonuje asynchronicznie filtr wyjątku.</summary>
      <returns>Wynik wykonania.</returns>
      <param name="actionExecutedContext">Kontekst dla akcji.</param>
      <param name="cancellationToken">Kontekst anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Reprezentuje klasę podstawową dla atrybutów filtru akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Pobiera wartość określającą, czy można używać wielu filtrów.</summary>
      <returns>true, jeśli można używać wielu filtrów, a w przeciwnym wypadku — false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Udostępnia informacje o dostępnych filtrach akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <param name="instance">Wystąpienie tej klasy.</param>
      <param name="scope">Zakres tej klasy.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Pobiera lub ustawia wystąpienie klasy <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Pobiera lub ustawia zakres klasy <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>Zakres klasy FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Definiuje wartości określające kolejność uruchamiania filtrów w obrębie tego samego typu filtru i tej samej kolejności filtrowania.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Określa akcję po elemencie Controller. </summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Określa kolejność przed elementem Action i po elemencie Global.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Określa akcję przed elementem Controller.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>Reprezentuje akcję kontekstu wykonanego w HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Pobiera lub ustawia kontekst akcji HTTP.</summary>
      <returns>Kontekst akcji HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Pobiera lub ustawia wyjątek zgłoszony podczas wykonywania.</summary>
      <returns>Wyjątek zgłoszony podczas wykonywania.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Pobiera obiekt <see cref="T:System.Net.Http.HttpRequestMessage" /> dla kontekstu.</summary>
      <returns>Obiekt <see cref="T:System.Net.Http.HttpRequestMessage" /> dla kontekstu.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Pobiera lub ustawia element <see cref="T:System.Net.Http.HttpResponseMessage" /> dla kontekstu.</summary>
      <returns>Obiekt <see cref="T:System.Net.Http.HttpResponseMessage" /> dla kontekstu.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext">
      <summary>Reprezentuje kontekst żądania uwierzytelnienia zawierający informacje do realizacji żądania uwierzytelnienia.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationChallengeContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.IHttpActionResult)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext" />.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="result">Wynik akcji bieżącej.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.ActionContext">
      <summary>Pobiera kontekst akcji.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Request">
      <summary>Pobiera komunikat żądania.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Result">
      <summary>Pobiera lub ustawia wynik akcji do wykonania.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationContext">
      <summary>Reprezentuje kontekst uwierzytelniania zawierający informacje do realizacji uwierzytelnienia.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Security.Principal.IPrincipal)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.HttpAuthenticationContext" />.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="principal">Bieżący podmiot zabezpieczeń.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ActionContext">
      <summary>Pobiera kontekst akcji.</summary>
      <returns>Kontekst akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ErrorResult">
      <summary>Pobiera lub ustawia wynik akcji, który utworzy odpowiedź z informacją o błędzie (w razie niepowodzenia uwierzytelniania, w przeciwnym razie wartość null).</summary>
      <returns>Wynik akcji, który utworzy odpowiedź z informacją o błędzie.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Principal">
      <summary>Pobiera lub ustawia uwierzytelniony podmiot zabezpieczeń.</summary>
      <returns>Uwierzytelniony podmiot zabezpieczeń.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Request">
      <summary>Pobiera komunikat żądania.</summary>
      <returns>Komunikat żądania.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Reprezentuje kolekcję filtrów HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Filters.HttpFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Dodaje element na końcu kolekcji.</summary>
      <param name="filter">Element, który ma zostać dodany do kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.AddRange(System.Collections.Generic.IEnumerable{System.Web.Http.Filters.IFilter})"></member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Usuwa wszystkie elementy w kolekcji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Określa, czy kolekcja zawiera określony element.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony element. W przeciwnym razie wartość false.</returns>
      <param name="filter">Element do sprawdzenia.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Obiekt modułu wyliczającego, którego można używać do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Usuwa określony element z kolekcji.</summary>
      <param name="filter">Element, który ma zostać usunięty z kolekcji.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Obiekt modułu wyliczającego, którego można używać do iterowania po kolekcji.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Definiuje metody używane w filtrze akcji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Wykonuje asynchronicznie akcję filtru.</summary>
      <returns>Nowo utworzone zadanie dla tej operacji.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Token anulowania przypisany do tego zadania.</param>
      <param name="continuation">Funkcja delegata, która ma być kontynuowana po wywołaniu metody akcji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthenticationFilter">
      <summary>Definiuje filtr realizujący uwierzytelnianie.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)">
      <summary>Uwierzytelnia żądanie.</summary>
      <returns>Zadanie, które przeprowadzi uwierzytelnianie.</returns>
      <param name="context">Kontekst uwierzytelniania.</param>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Definiuje metody wymagane na potrzeby filtru autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Wykonuje filtr autoryzacji do synchronizacji.</summary>
      <returns>Filtr autoryzacji do synchronizacji.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Token anulowania skojarzony z filtrem.</param>
      <param name="continuation">Kontynuacja.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Definiuje metody wymagane dla filtru wyjątku.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Wykonuje asynchroniczny filtr wyjątku.</summary>
      <returns>Asynchroniczny filtr wyjątku.</returns>
      <param name="actionExecutedContext">Kontekst wykonanej akcji.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Definiuje metody używane w filtrze.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Pobiera lub ustawia wartość wskazującą, czy dla jednego elementu programu można określić więcej niż jedno wystąpienie wskazanego atrybutu.</summary>
      <returns>Wartość true, jeśli można określić więcej niż jedno wystąpienie. W przeciwnym razie wartość false.Wartością domyślną jest false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Udostępnia informacje o filtrze.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Zwraca wyliczenie filtrów.</summary>
      <returns>Wyliczenie filtrów.</returns>
      <param name="configuration">Konfiguracja HTTP.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IOverrideFilter"></member>
    <member name="P:System.Web.Http.Filters.IOverrideFilter.FiltersToOverride"></member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary> Udostępnia klucze wspólne dla właściwości przechowywanych we właściwości <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Udostępnia klucz dla certyfikatu klienta dla tego żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary>Udostępnia klucz dla obiektu <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> skojarzonego z tym żądaniem.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary>Udostępnia klucz dla kolekcji zasobów, która powinna zostać usunięta po usunięciu żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpActionDescriptorKey">
      <summary> Udostępnia klucz dla obiektu <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> skojarzonego z tym żądaniem. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary>Udostępnia klucz dla obiektu <see cref="T:System.Web.Http.HttpConfiguration" /> skojarzonego z tym żądaniem.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary>Udostępnia klucz dla obiektu <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> skojarzonego z tym żądaniem.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Udostępnia klucz, który wskazuje, czy szczegóły błędu mają być uwzględniane w odpowiedzi na to żądanie HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsBatchRequest">
      <summary> Udostępnia klucz, który wskazuje, czy żądanie jest żądaniem wsadowym. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>Udostępnia klucz wskazujący, czy żądanie pochodzi z adresu lokalnego.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.NoRouteMatched">
      <summary> Udostępnia klucz, który wskazuje, czy żądanie nie pasuje do trasy. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestContextKey">
      <summary>Udostępnia klucz dla klasy <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> dla tego żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary>Udostępnia klucz dla klasy <see cref="T:System.Guid" /> przechowywanej we właściwości <see cref="T:System.Net.Http.Properties" />. To jest identyfikator korelacji dla tego żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>Udostępnia klucz dla przeanalizowanego ciągu zapytania przechowywanego w obiekcie <see cref="T:System.Net.Http.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Udostępnia klucz dla delegata, który może pobrać certyfikat klienta dla tego żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary>Udostępnia klucz dla bieżącego elementu <see cref="T:System.Threading.SynchronizationContext" /> przechowywanego w obiekcie Properties(). Jeśli obiekt Current() ma wartość null, kontekst nie jest przechowywany.</summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Interfejs do sterowania użyciem żądań i odpowiedzi dotyczących buforowania na hoście. Jeśli host udostępnia obsługę żądań i/lub odpowiedzi dotyczących buforowania, może używać tego interfejsu do określania zasad użycia buforowania.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Określa, czy host powinien buforować element body obiektu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Wartość true, jeśli buforowanie powinno być używane; w przeciwnym razie należy użyć żądania przesyłanego strumieniowo.</returns>
      <param name="hostContext">Kontekst hosta.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Określa, czy host powinien buforować element body obiektu <see cref="T.System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Wartość true, jeśli buforowanie powinno być używane; w przeciwnym razie należy użyć odpowiedzi przesyłanej strumieniowo.</returns>
      <param name="response">Komunikat odpowiedzi HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler">
      <summary>Reprezentuje program obsługi komunikatów, które pomijają wyniki uwierzytelniania hosta.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wysyła komunikat żądania.</summary>
      <returns>Zadanie kończące operację asynchroniczną.</returns>
      <param name="request">Komunikat żądania do wysłania.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>Reprezentuje klasę metadanych elementu ModelMetadata.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.ModelMetadata" />.</summary>
      <param name="provider">Dostawca.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Pobiera słownik zawierający dodatkowe metadane na temat modelu.</summary>
      <returns>Słownik zawierający dodatkowe metadane na temat modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Pobiera lub ustawia typ kontenera dla modelu.</summary>
      <returns>Typ kontenera dla modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Pobiera lub ustawia wartość wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null.</summary>
      <returns>Wartość true, jeśli puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null, a w przeciwnym razie wartość false.Wartością domyślną jest true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu.Wartość domyślna to null.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Pobiera nazwę wyświetlaną dla modelu.</summary>
      <returns>Nazwa wyświetlana dla modelu.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Pobiera listę modułów weryfikacji dla modelu.</summary>
      <returns>Lista modułów weryfikacji dla modelu.</returns>
      <param name="validatorProviders">Dostawcy modułów weryfikacji dla modelu.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest typem złożonym.</summary>
      <returns>Wartość wskazująca, czy model jest uznawany za złożony.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Pobiera wartość wskazującą, czy dany typ może przyjmować wartość null.</summary>
      <returns>Wartość true, jeśli dany typ może przyjmować wartość null, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli model jest przeznaczony tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Pobiera wartość modelu.</summary>
      <returns>Model może przyjmować wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Pobiera typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Pobiera kolekcję obiektów metadanych modelu opisujących właściwości modelu.</summary>
      <returns>Kolekcja obiektów metadanych modelu opisujących właściwości modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Pobiera nazwę właściwości.</summary>
      <returns>Nazwa właściwości.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Pobiera lub ustawia dostawcę.</summary>
      <returns>Dostawca.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Udostępnia abstrakcyjną klasę podstawową dla niestandardowego dostawcy metadanych.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Pobiera obiekt ModelMetadata dla każdej właściwości modelu.</summary>
      <returns>Obiekt ModelMetadata  dla każdej właściwości modelu.</returns>
      <param name="container">Kontener.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Pobiera metadane dla określonej właściwości.</summary>
      <returns>Model metadanych dla określonej właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyName">Właściwość, dla której ma zostać pobrany model metadanych.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Pobiera metadane dla określonej metody dostępu modelu i typu modelu.</summary>
      <returns>Metadane.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ obiektu modelu.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Udostępnia klasę abstrakcyjną do implementowania dostawcy metadanych.</summary>
      <typeparam name="TModelMetadata">Typ metadanych modelu.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>W przypadku przesłonięcia w klasie pochodnej tworzy metadane modelu dla właściwości, używając określonego prototypu.</summary>
      <returns>Metadane modelu dla danej właściwości.</returns>
      <param name="prototype">Prototyp, na podstawie którego mają zostać utworzone metadane modelu.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>W przypadku przesłonięcia w klasie pochodnej tworzy metadane modelu dla właściwości.</summary>
      <returns>Metadane modelu dla danej właściwości.</returns>
      <param name="attributes">Zestaw atrybutów.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Pobiera listę właściwości dla modelu.</summary>
      <returns>Lista właściwości modelu.</returns>
      <param name="container">Kontener modelu.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Pobiera metadane dla określonej właściwości przy użyciu typu kontenera i nazwy właściwości.</summary>
      <returns>Metadane dla określonej właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Zwraca metadane dla określonej właściwości przy użyciu typu modelu.</summary>
      <returns>Metadane dla określonej właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ kontenera.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>Udostępnia dane pamięci podręcznej prototypów dla elementu <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Atrybuty udostępniające dane na potrzeby inicjowania.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Pobiera lub ustawia atrybut wyświetlania metadanych.</summary>
      <returns>Atrybut wyświetlania metadanych.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Pobiera lub ustawia atrybut formatu wyświetlania metadanych.</summary>
      <returns>Atrybut formatu wyświetlania metadanych.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayName"></member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Pobiera lub ustawia atrybut możliwości edycji metadanych.</summary>
      <returns>Atrybut możliwości edycji metadanych.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Pobiera lub ustawia atrybut tylko do odczytu metadanych.</summary>
      <returns>Atrybut tylko do odczytu metadanych.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Udostępnia kontener dla wspólnych metadanych, dla klasy <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" /> na potrzeby modelu danych.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="prototype">Prototyp używany do inicjowania metadanych modelu.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="provider">Dostawca metadanych.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="attributes">Atrybuty udostępniające dane na potrzeby inicjowania.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Pobiera wartość wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null.</summary>
      <returns>Wartość true, jeśli puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Pobiera opis modelu.</summary>
      <returns>Opis modelu.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Pobiera wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli model jest przeznaczony tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.GetDisplayName"></member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>Udostępnia dane pamięci podręcznej prototypów dla elementu <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <typeparam name="TPrototypeCache">Typ pamięci podręcznej prototypów.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="provider">Dostawca.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="prototypeCache">Pamięć podręczna prototypów.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Wskazuje, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być obliczane konwertowane do wartości null.</summary>
      <returns>Wartość true, jeśli puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Wskazuje wartość obliczaną.</summary>
      <returns>Wartość obliczana.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Pobiera wartość wskazującą, czy model jest typem złożonym.</summary>
      <returns>Wartość wskazująca, czy model jest uznawany za typ złożony przez strukturę interfejsu API sieci Web.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Pobiera wartość wskazującą, czy model, który ma zostać obliczony, jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli model, który ma zostać obliczony, jest tylko do odczytu, w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Pobiera lub ustawia wartość wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null.</summary>
      <returns>Wartość true, jeśli puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane do wartości null, a w przeciwnym razie wartość false.Wartością domyślną jest true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Pobiera wartość wskazującą, czy model jest typem złożonym.</summary>
      <returns>Wartość wskazująca, czy model jest uznawany za typ złożony przez strukturę interfejsu API sieci Web.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli model jest przeznaczony tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Pobiera lub ustawia wartość wskazującą, czy pamięć podręczna prototypów jest aktualizowana.</summary>
      <returns>Wartość true, jeśli pamięć podręczna prototypów jest aktualizowana, a w przeciwnym razie — false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Implementuje domyślnego dostawcę metadanych modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Tworzy metadane na podstawie prototypu dla konkretnej właściwości.</summary>
      <returns>Metadane właściwości.</returns>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Tworzy metadane dla określonej właściwości.</summary>
      <returns>Metadane właściwości.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>Reprezentuje pustego dostawcę metadanych modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Tworzy metadane na podstawie prototypu.</summary>
      <returns>Metadane.</returns>
      <param name="prototype">Prototyp metadanych modelu.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Tworzy prototyp dostawcy metadanych <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
      <returns>Prototyp dostawcy metadanych.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>Reprezentuje wiązanie bezpośrednio w odniesieniu do tokena anulowania.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" />.</summary>
      <param name="descriptor">Deskryptor wiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Wykonuje wiązanie podczas synchronizacji.</summary>
      <returns>Wiązanie podczas synchronizacji.</returns>
      <param name="metadataProvider">Dostawca metadanych.</param>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Powiadomienie po anulowaniu operacji.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Reprezentuje atrybut wywołujący niestandardowego integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Odwołanie do obiektu implementującego interfejs <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>Reprezentuje domyślną wartość akcji integratora.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Domyślna implementacja interfejsu <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.Ten interfejs stanowi podstawowy punkt wejścia do wiązania parametrów akcji.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> skojarzona z klasą <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Pobiera klasę <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> skojarzoną z klasą <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
      <returns>Klasa <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> skojarzona z klasą <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="parameter">Deskryptor parametru.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Definiuje błąd wiązania.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" />.</summary>
      <param name="descriptor">Deskryptor błędu.</param>
      <param name="message">Komunikat.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Pobiera komunikat o błędzie.</summary>
      <returns>Komunikat o błędzie.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Wykonuje metodę wiązania podczas synchronizacji.</summary>
      <param name="metadataProvider">Dostawca metadanych.</param>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Anulowanie wartości tokenu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Reprezentuje wiązanie parametru, które będzie odczytywać treść i wywoływać elementy formatujące.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <param name="descriptor">Deskryptor.</param>
      <param name="formatters">Element formatujący.</param>
      <param name="bodyModelValidator">Moduł weryfikacji modelu elementu body.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Pobiera lub ustawia interfejs dla modułu weryfikacji elementu body w modelu.</summary>
      <returns>Interfejs dla modułu weryfikacji elementu body w modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Pobiera komunikat o błędzie.</summary>
      <returns>Komunikat o błędzie.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje powiązanie elementu <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>Wynik akcji.</returns>
      <param name="metadataProvider">Dostawca metadanych.</param>
      <param name="actionContext">Kontekst skojarzony z akcją.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Pobiera lub ustawia obiekt wyliczalny, który reprezentuje program formatujący dla powiązania parametrów.</summary>
      <returns>Obiekt wyliczalny, który reprezentuje program formatujący dla powiązania parametrów.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Asynchronicznie odczytuje zawartość elementu <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>Wynik akcji.</returns>
      <param name="request">Żądanie.</param>
      <param name="type">Typ.</param>
      <param name="formatters">Element formatujący.</param>
      <param name="formatterLogger">Program rejestrujący format.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>Pobiera informację, czy element <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> będzie odczytywał element body.</summary>
      <returns>Wartość true, jeśli element <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> będzie odczytywał element body, w przeciwnym razie — wartość false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Reprezentuje rozszerzenie dla kolekcji danych formularza.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <summary>Odczytuje rozszerzenia kolekcji z określonym typem.</summary>
      <returns>Odczytane rozszerzenia kolekcji.</returns>
      <param name="formData">Dane formularza.</param>
      <typeparam name="T">Typ ogólny.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Odczytuje rozszerzenia kolekcji z określonym typem.</summary>
      <returns>Rozszerzenia kolekcji.</returns>
      <param name="formData">Dane formularza.</param>
      <param name="modelName">Nazwa modelu.</param>
      <param name="requiredMemberSelector">Wymagany selektor elementów.</param>
      <param name="formatterLogger">Program rejestrujący format.</param>
      <typeparam name="T">Typ ogólny.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)">
      <summary>Odczytuje rozszerzenia kolekcji z określonym typem.</summary>
      <returns>Rozszerzenia kolekcji z określonym typem.</returns>
      <param name="formData">Dane formularza.</param>
      <param name="type">Typ obiektu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Odczytuje rozszerzenia kolekcji z określonym typem i nazwą modelu.</summary>
      <returns>Rozszerzenia kolekcji.</returns>
      <param name="formData">Dane formularza.</param>
      <param name="type">Typ obiektu.</param>
      <param name="modelName">Nazwa modelu.</param>
      <param name="requiredMemberSelector">Wymagany selektor elementów.</param>
      <param name="formatterLogger">Program rejestrujący format.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger,System.Web.Http.HttpConfiguration)">
      <summary>Deserializuje dane formularza do danego typu przy użyciu wiązania modelu.</summary>
      <returns>Najlepsza próba powiązania obiektu. Najlepsza próba może mieć wartość null.</returns>
      <param name="formData">Kolekcja z przeanalizowanymi danymi adresu URL formularza.</param>
      <param name="type">Typ obiektu docelowego do odczytu jako</param>
      <param name="modelName">wartość null lub pusty w celu odczytu całego formularza jako pojedynczego obiektu. To jest typowe dla danych treści. Lub nazwa modelu w celu utworzenia częściowego wiązania dla danych formularza. To jest typowe dla wyodrębniania poszczególnych pól.</param>
      <param name="requiredMemberSelector">Element <see cref="T:System.Net.Http.Formatting.IRequiredMemberSelector" /> służący do określania wymaganych elementów.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
      <param name="config">Konfiguracja <see cref="T:System.Web.Http.HttpConfiguration" />, z której jest pobierany integrator. Może mieć wartość null, jeśli konfiguracja nie została jeszcze utworzona. W takim przypadku tworzona jest nowa konfiguracja.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>Wylicza zachowanie wiązania HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>Nigdy nie używaj wiązania HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>Opcjonalne zachowanie wiązania</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>Wiązanie HTTP jest wymagane.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Udostępnia klasę podstawową dla atrybutów zachowania wiązania modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" />.</summary>
      <param name="behavior">Zachowanie.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Pobiera lub ustawia kategorię zachowania.</summary>
      <returns>Kategoria zachowania.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator dla tego atrybutu.</summary>
      <returns>Unikatowy identyfikator dla tego atrybutu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>Powiązanie parametru z żądaniem.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" />.</summary>
      <param name="descriptor">Deskryptor parametru.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje wiązanie parametru.</summary>
      <returns>Powiązany parametr.</returns>
      <param name="metadataProvider">Dostawca metadanych.</param>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Definiuje metody wymagane dla integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model z wartością przy użyciu określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Wartość true, jeśli wiązanie modelu przebiegło pomyślnie, a w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Reprezentuje dostawcę wartości dla wiązania parametru.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Pobiera wystąpienia klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> używane przez to wiązanie parametru.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> używane przez to wiązanie parametru.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>Reprezentuje klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do obsługi danych formularza HTML zakodowanych w adresie URL, czyli danych application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Określa, czy ta klasa <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> może odczytywać obiekty z określonym parametrem <paramref name="type" />. </summary>
      <returns>Wartość true, jeśli obiekty tego typu mogą być odczytywane. W przeciwnym razie wartość false.</returns>
      <param name="type">Typ obiektu, który będzie odczytywany.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Odczytuje obiekt o określonym parametrze <paramref name="type" /> z określonego strumienia. Ta metoda jest wywoływana podczas deserializacji.</summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która jako wynik zwróci odczytane wystąpienie obiektu.</returns>
      <param name="type">Typ obiektu do odczytania.</param>
      <param name="readStream">Element <see cref="T:System.IO.Stream" />, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="content">Odczytywana zawartość.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary>Określa zastosowanie tego parametru jako integratora modelu.Może on opcjonalnie określić konkretnego integratora modelu i dostawców wartości, którzy sterują tym integratorem modelu.Atrybuty pochodne mogą udostępnić wygodne ustawienia dla integratora modelu lub dostawcy zawartości.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
      <param name="binderType">Typ integratora modelu.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Pobiera lub ustawia typ integratora modelu.</summary>
      <returns>Typ integratora modelu. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Pobiera wiązanie dla parametru.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> zawierający wiązanie.</returns>
      <param name="parameter">Parametr do powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Pobierz interfejs IModelBinder dla tego typu. </summary>
      <returns> Integrator modelu o wartości innej niż null.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu do powiązania oczekiwany przez integrator.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Pobiera dostawcę integratora modelu.</summary>
      <returns>Wystąpienie elementu <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="configuration">Obiekt konfiguracji <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Pobiera dostawców wartości, którzy będą przekazywani do integratora modelu. </summary>
      <returns>Kolekcja wystąpień klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Obiekt konfiguracji <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Pobiera lub ustawia nazwę, którą można rozważyć jako nazwę parametru podczas wiązania modelu.</summary>
      <returns>Nazwa parametru do rozważenia.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Pobiera lub ustawia wartość określającą, czy powinno być pomijane sprawdzanie prefiksu.</summary>
      <returns>Wartość true, jeśli sprawdzanie prefiksu powinno być pomijane, a w przeciwnym razie — false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Udostępnia kontener dla konfiguracji integratora modelu.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Pobiera lub ustawia nazwę pliku zasobu (klucza klasy) zawierającego wartości ciągu zlokalizowanego.</summary>
      <returns>Nazwa pliku zasobu (klucza klasy).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Pobiera lub ustawia bieżącego dostawcę komunikatu o błędzie konwersji typu.</summary>
      <returns>Bieżący dostawcę komunikatu o błędzie konwersji typu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Pobiera lub ustawia bieżącego dostawcę komunikatów o błędach wymaganej wartości.</summary>
      <returns>Dostawca komunikatów o błędach.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Udostępnia kontener dla dostawców komunikatów o błędach integratora modelu.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> Opisuje parametr, który zostaje powiązany za pomocą metody ModelBinding.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" />.</summary>
      <param name="descriptor">Deskryptor parametru.</param>
      <param name="modelBinder">Integrator modelu.</param>
      <param name="valueProviderFactories">Kolekcja fabryki dostawców wartości.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Pobiera integrator modelu.</summary>
      <returns>Integrator modelu.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje wiązanie parametru za pomocą integratora modelu.</summary>
      <returns>Zadanie sygnalizowane po zakończeniu wiązania.</returns>
      <param name="metadataProvider">Dostawca metadanych do użycia w celu weryfikacji.</param>
      <param name="actionContext">Kontekst akcji dla wiązania.</param>
      <param name="cancellationToken">Token anulowania przypisany do tego zadania na potrzeby anulowania operacji wiązania.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Pobiera kolekcję fabryki dostawców wartości.</summary>
      <returns>Kolekcja fabryki dostawców wartości.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Udostępnia abstrakcyjną klasę podstawową dla dostawców integratorów modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Znajduje obiekt wiążący dla danego typu.</summary>
      <returns>Obiekt wiążący, który może próbować powiązania tego typu. Albo wartość null, jeśli obiekt wiążący wie statycznie, że nigdy nie będzie w stanie powiązać danego typu.</returns>
      <param name="configuration">Obiekt konfiguracji.</param>
      <param name="modelType">Typ modelu do powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Udostępnia kontekst, w którym działa integrator modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Pobiera lub ustawia wartość wskazującą, czy integrator powinien używać pustego prefiksu.</summary>
      <returns>Wartość true, jeśli integrator powinien używać pustego prefiksu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Pobiera lub ustawia model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Pobiera lub ustawia metadane modelu.</summary>
      <returns>Metadane modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Pobiera lub ustawia nazwę modelu.</summary>
      <returns>Nazwa modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Pobiera lub ustawia stan modelu.</summary>
      <returns>Stan modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Pobiera lub ustawia typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Pobiera metadane właściwości.</summary>
      <returns>Metadane właściwości.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Pobiera lub ustawia węzeł weryfikacji.</summary>
      <returns>Węzeł weryfikacji.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Pobiera lub ustawia dostawcę wartości.</summary>
      <returns>Dostawca wartości.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Reprezentuje błąd występujący podczas wiązania modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelError" /> przy użyciu określonego wyjątku.</summary>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelError" /> przy użyciu określonego wyjątku i komunikatu o błędzie.</summary>
      <param name="exception">Wyjątek.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelError" /> przy użyciu określonego komunikatu o błędzie.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Pobiera lub ustawia komunikat o błędzie.</summary>
      <returns>Komunikat o błędzie.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Reprezentuje kolekcję wystąpień klasy <see cref="T:System.Web.Http.ModelBinding.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Dodaje określony obiekt Exception do kolekcji błędów modelu.</summary>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów modelu.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Hermetyzuje stan powiązania modelu we właściwości argumentu metody akcji lub samym argumencie.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> zawierający wszelkie błędy, które wystąpiły podczas tworzenia powiązania modelu.</summary>
      <returns>Błędy stanu modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Pobiera obiekt <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> hermetyzujący wartość powiązaną podczas tworzenia powiązania modelu.</summary>
      <returns>Wartość stanu modelu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Reprezentuje stan próby powiązania przesłanego formularza z metodą akcji, który obejmuje informacje dotyczące weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> przy użyciu wartości skopiowanych z określonego słownika stanu modelu.</summary>
      <param name="dictionary">Słownik.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Dodaje określony element do słownika stanu modelu.</summary>
      <param name="item">Obiekt, który ma zostać dodany do słownika stanu modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Dodaje element o określonym kluczu i wartości do słownika stanu modelu.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Dodaje określony błąd modelu do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Usuwa wszystkie elementy ze słownika stanu modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Sprawdza, czy słownik stanu modelu zawiera określoną wartość.</summary>
      <returns>Wartość true, jeśli element zostanie znaleziony w słowniku stanu modelu, a w przeciwnym razie — false.</returns>
      <param name="item">Obiekt, który ma zostać zlokalizowany w słowniku stanu modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Sprawdza, czy słownik stanu modelu zawiera określony klucz.</summary>
      <returns>Wartość true, jeśli słownik stanu modelu zawiera określony klucz, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz, który ma zostać zlokalizowany w słowniku stanu modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Kopiuje elementy ze słownika stanu modelu do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica. Indeksowanie tablicy musi rozpoczynać się od zera.</param>
      <param name="arrayIndex">Liczony od elementu zerowego indeks tablicy, od którego rozpocznie się kopiowanie.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Pobiera liczbę par klucz/wartość zawartych w kolekcji.</summary>
      <returns>Liczba par klucz/wartość w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest przeznaczona tylko do odczytu.</summary>
      <returns>Wartość true, jeśli kolekcja jest przeznaczona tylko do odczytu; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Pobiera wartość wskazującą, czy to wystąpienie słownika stanu modelu jest prawidłowe.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest prawidłowe, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Sprawdza, czy istnieją obiekty <see cref="T:System.Web.Http.ModelBinding.ModelError" /> skojarzone z określonym kluczem bądź używające go jako prefiksu.</summary>
      <returns>Wartość true, jeśli słownik stanu modelu zawiera wartość skojarzoną z określonym kluczem, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</summary>
      <returns>Element stanu modelu.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze ze słownika.</summary>
      <returns>Kolekcja zawierająca klucze słownika stanu modelu.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Kopiuje wartość z określonego obiektu <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> do tego słownika, zastępując istniejące wartości w przypadku takich samych kluczy.</summary>
      <param name="dictionary">Słownik.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Usuwa pierwsze wystąpienie określonego obiektu ze słownika stanu modelu.</summary>
      <returns>Wartość true, jeśli element został pomyślnie usunięty ze słownika stanu modelu, a w przeciwnym razie — false. Ta metoda zwraca też wartość false, jeśli element nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="item">Obiekt, który ma zostać usunięty ze słownika stanu modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Usuwa element o określonym kluczu ze słownika stanu modelu.</summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — false. Ta metoda zwraca też wartość false, jeśli klucz nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Ustawia wartość dla określonego klucza przy użyciu podanego słownika dostawcy wartości.</summary>
      <param name="key">Klucz.</param>
      <param name="value">Wartość.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Obiekt IEnumerator, którego można używać do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Próbuje pobrać wartość skojarzoną z określonym kluczem.</summary>
      <returns>Wartość true, jeśli obiekt zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Wartość skojarzona z określonym kluczem.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości ze słownika.</summary>
      <returns>Kolekcja zawierająca wartości słownika stanu modelu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> Kolekcja funkcji mogących utworzyć wiązanie parametru dla danego parametru.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Dodaje funkcję na końcu kolekcji.  Dodawana funkcja jest otoką elementu funcInner, który sprawdza zgodność elementów parameterType i typeMatch. </summary>
      <param name="typeMatch">Typ do dopasowania do elementu HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">Funkcja wewnętrzna, która jest wywoływana, jeśli dopasowywanie typu powiedzie się.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Wstawia funkcję do kolekcji pod określonym indeksem. /// Dodawana funkcja jest otoką elementu funcInner, który sprawdza zgodność elementów parameterType i typeMatch. </summary>
      <param name="index">Indeks, pod którym ma zostać wstawiona funkcja.</param>
      <param name="typeMatch">Typ do dopasowania do elementu HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">Funkcja wewnętrzna, która jest wywoływana, jeśli dopasowywanie typu powiedzie się.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Wykonuje każdą funkcję wiązania po kolei, dopóki jedna z nich nie zwróci wiązania o wartości innej niż null.  </summary>
      <returns>Pierwsze wiązanie o wartości innej niż null utworzone dla parametru. Wartość null, jeśli nie zostanie utworzone żadne wiązanie.</returns>
      <param name="parameter">Parametr do powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>‏Mapuje żądanie przeglądarki na tablicę.</summary>
      <typeparam name="TElement">Typ tablicy.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wskazuje, czy model jest powiązany.</summary>
      <returns>Wartość true, jeśli określony model jest powiązany, w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Konwertuje kolekcję na tablicę.</summary>
      <returns>Wartość true w każdym przypadku.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
      <param name="newCollection">Nowa kolekcja.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Udostępnia integratora modelu dla tablic.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Zwraca integratora modelu dla tablic.</summary>
      <returns>Obiekt wiążący modelu lub wartość null, jeśli próba pobrania obiektu wiążącego zakończy się niepowodzeniem.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>‏Mapuje żądanie przeglądarki na kolekcję.</summary>
      <typeparam name="TElement">Typ kolekcji.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu wykonywania i kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli wiązanie modelu przebiegło pomyślnie, a w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Zapewnia klasom pochodnym możliwość modyfikowania kolekcji przed jej zwróceniem z integratora.</summary>
      <returns>Wartość true w każdym przypadku.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
      <param name="newCollection">Nowa kolekcja.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Udostępnia integratora modelu dla kolekcji.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera integratora modelu dla kolekcji.</summary>
      <returns>Integrator modelu.</returns>
      <param name="configuration">Konfiguracja modelu.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Reprezentuje obiekt transferu danych (DTO) dla modelu złożonego.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <param name="modelMetadata">Metadane modelu.</param>
      <param name="propertyMetadata">Kolekcja metadanych właściwości.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>Pobiera lub ustawia metadane modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Metadane modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>Pobiera lub ustawia kolekcję metadanych właściwości modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Kolekcja metadanych właściwości modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>Pobiera lub ustawia wyniki modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Wyniki modelu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>Reprezentuje integrator modelu dla obiektu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Określa, czy dany model jest powiązany.</summary>
      <returns>Wartość true, jeśli określony model jest powiązany, w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Reprezentuje model złożony, który wywołuje dostawcę integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Integrator modelu.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu do pobrania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>Reprezentuje wynik dla obiektu <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" />.</summary>
      <param name="model">Model obiektu.</param>
      <param name="validationNode">Węzeł weryfikacji.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Pobiera lub ustawia model dla tego obiektu.</summary>
      <returns>Model dla tego obiektu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Pobiera lub ustawia element <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> dla tego obiektu.</summary>
      <returns>Element <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> dla tego obiektu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Reprezentuje interfejs <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />, który deleguje do jednej z kolekcji wystąpień klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Wyliczenie obiektów wiążących.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Tablica obiektów wiążących.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wskazuje, czy określony model jest powiązany.</summary>
      <returns>Wartość true, jeśli model jest powiązany, w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Reprezentuje klasę dla dostawców integratorów modelu złożonego.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
      <param name="providers">Kolekcja wystąpień klasy <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera obiekt wiążący dla modelu.</summary>
      <returns>Obiekt wiążący dla modelu.</returns>
      <param name="configuration">Konfiguracja obiektu wiążącego.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Pobiera dostawców dla integratora modelu złożonego.</summary>
      <returns>Kolekcja dostawców.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>‏Mapuje żądanie przeglądarki na obiekt danych słownika.</summary>
      <typeparam name="TKey">Typ klucza.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Konwertuje kolekcję na słownik.</summary>
      <returns>Wartość true w każdym przypadku.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
      <param name="newCollection">Nowa kolekcja.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Udostępnia integratora modelu dla słownika.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Skojarzony integrator modelu.</returns>
      <param name="configuration">Konfiguracja do użycia.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>‏Mapuje żądanie przeglądarki na obiekt danych złożony z par klucz/wartość.</summary>
      <typeparam name="TKey">Typ klucza.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu wykonywania i kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli wiązanie modelu przebiegło pomyślnie, a w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Udostępnia integratora modelu dla kolekcji par klucz/wartość.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Skojarzony obiekt wiążący modelu.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>‏Mapuje żądanie przeglądarki na modyfikowalny obiekt danych.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu akcji i kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli wiązanie przebiegło pomyślnie; w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Pobiera wartość wskazującą, czy właściwość może być aktualizowana.</summary>
      <returns>Wartość true, jeśli właściwość może być aktualizowana, a w przeciwnym razie — false.</returns>
      <param name="propertyMetadata">Metadane dla właściwości do oceny.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Tworzy wystąpienie modelu.</summary>
      <returns>Nowo utworzony obiekt modelu.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Tworzy wystąpienie modelu, jeśli takie wystąpienie nie istnieje jeszcze w kontekście powiązania.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Pobiera metadane dla właściwości modelu.</summary>
      <returns>Metadane dla właściwości modelu.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Ustawia wartość określonej właściwości.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
      <param name="propertyMetadata">Metadane dla właściwości do ustawienia.</param>
      <param name="dtoResult">Informacje o weryfikacji dotyczące właściwości.</param>
      <param name="requiredValidator">Moduł weryfikacji dla modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Udostępnia integratora modelu dla obiektów modyfikowalnych.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera integratora modelu dla określonego typu.</summary>
      <returns>Integrator modelu.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu do pobrania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>Udostępnia prosty integrator modelu dla tego klasy wiązania modelu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="modelBinderFactory">Fabryka integratorów modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> przy użyciu określonego typu modelu i integratora modelu.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="modelBinder">Integrator modelu.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Zwraca obiekt wiążący modelu przy użyciu określonego kontekstu wykonania i kontekstu powiązania.</summary>
      <returns>Obiekt wiążący modelu lub wartość null, jeśli próba pobrania obiektu wiążącego modelu zakończy się niepowodzeniem.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Pobiera typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Pobiera lub ustawia wartość określającą, czy powinno być pomijane sprawdzanie prefiksu.</summary>
      <returns>Wartość true, jeśli sprawdzanie prefiksu powinno być pomijane, a w przeciwnym razie — false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>‏Mapuje żądanie przeglądarki na obiekt danych. Ten typ jest używany, gdy powiązanie modelu wymaga konwersji przy użyciu konwertera typów programu .NET Framework.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli wiązanie modelu przebiegło pomyślnie, a w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Udostępnia integratora modelu dla modelu, który wymaga konwersji typu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera integratora modelu dla modelu, który wymaga konwersji typu.</summary>
      <returns>Integrator modelu lub wartość Nothing, jeśli typ nie może zostać poddany konwersji lub brak jest wartości do konwersji.</returns>
      <param name="configuration">Konfiguracja obiektu wiążącego.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>‏Mapuje żądanie przeglądarki na obiekt danych. Ta klasa jest używana, gdy powiązanie modelu nie wymaga konwersji typu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu wykonywania i kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli wiązanie modelu przebiegło pomyślnie, a w przeciwnym razie — false.</returns>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="bindingContext">Kontekst powiązania.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Udostępnia integratora modelu dla modelu, który nie wymaga konwersji typu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Skojarzony integrator modelu.</returns>
      <param name="configuration">Konfiguracja.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestErrorMessageResult">
      <summary>Reprezentuje wynik akcji zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.BadRequest" /> i przeprowadza negocjacje zawartości na podstawie <see cref="T:System.Web.Http.HttpError" /> z <see cref="P:System.Web.Http.HttpError.Message" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" />.</summary>
      <param name="message">Widoczny dla użytkownika komunikat o błędzie.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" />. </summary>
      <param name="message">Widoczny dla użytkownika komunikat o błędzie.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
      <returns>Zwraca wartość <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Message">
      <summary>Pobiera widoczny dla użytkownika komunikat o błędzie.</summary>
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestResult">
      <summary>Reprezentuje wynik akcji zwracającej pustą odpowiedź <see cref="F:System.Net.HttpStatusCode.BadRequest" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje żądanie.</summary>
      <returns>Zadanie kończące operację wykonywania.</returns>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ConflictResult">
      <summary>Reprezentuje wynik akcji zwracającej pustą odpowiedź HttpStatusCode.Conflict.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.ConflictResult" />.</summary>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.ConflictResult" />.</summary>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje operację wyniku konfliktu.</summary>
      <returns>Wykonuje asynchronicznie określone zadanie.</returns>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.ConflictResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania HTTP, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1">
      <summary>Reprezentuje wynik akcji generującej trasę i negocjującej zawartość oraz zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.Created" /> w razie powodzenia negocjacji zawartości.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.Routing.UrlHelper,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="urlFactory">Fabryka do użycia podczas generowania adresu URL trasy.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Content">
      <summary>Pobiera wartość zawartości do negocjowania i formatowania w treści jednostki.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteName">
      <summary>Pobiera nazwę trasy do użycia podczas generowania adresu URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteValues">
      <summary>Pobiera dane trasy do użycia podczas generowania adresu URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.UrlFactory">
      <summary>Pobiera fabrykę do użycia podczas generowania adresu URL trasy.</summary>
    </member>
    <member name="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1">
      <summary>Reprezentuje wynik akcji przeprowadzającej negocjację zawartości i zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.Created" /> w razie powodzenia.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="location">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="content">Lokalizacja, gdzie została utworzona zawartość.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="location">Lokalizacja, gdzie została utworzona zawartość.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Content">
      <summary>Pobiera wartość zawartości do negocjowania i formatowania w treści jednostki.</summary>
      <returns>Wartość zawartości do negocjowania i formatowania w treści jednostki.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
      <returns>Moduł negocjowania zawartości do obsługi negocjacji zawartości.</returns>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje operację utworzonego wynegocjowanego wyniku zawartości.</summary>
      <returns>Asynchronicznie wykonuje wartość zwracaną.</returns>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
      <returns>Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Location">
      <summary>Pobiera lokalizację, gdzie została utworzona zawartość.</summary>
      <returns>Lokalizacja, gdzie została utworzona zawartość.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania HTTP, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ExceptionResult">
      <summary>Reprezentuje wynik akcji zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> i przeprowadza negocjacje zawartości dla elementu <see cref="T:System.Web.Http.HttpError" /> na podstawie <see cref="P:System.Web.Http.Results.ExceptionResult.Exception" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.ExceptionResult" />.</summary>
      <param name="exception">Wyjątek do uwzględnienia w błędzie.</param>
      <param name="includeErrorDetail">Wartość true, jeśli błąd ma uwzględniać komunikaty wyjątku, w przeciwnym razie wartość false. </param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.ExceptionResult" />. </summary>
      <param name="exception">Wyjątek do uwzględnienia w błędzie.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Exception">
      <summary>Pobiera wyjątek do uwzględnienia w błędzie.</summary>
      <returns>Zwraca wartość <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
      <returns>Zwraca wartość <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.IncludeErrorDetail">
      <summary>Pobiera wartość wskazującą, czy błąd powinien zawierać komunikaty wyjątków.</summary>
      <returns>Zwraca wartość <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.FormattedContentResult`1">
      <summary>Reprezentuje wynik akcji zwracającej sformatowaną zawartość.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="content">Wartość zawartości do formatowania w treści jednostki.</param>
      <param name="formatter">Element formujący do używania w celu formatowania zawartości.</param>
      <param name="mediaType">Wartość dla nagłówka typu zawartości lub <see cref="null" />, aby element formatujący wybrał domyślną wartość.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="content">Wartość zawartości do formatowania w treści jednostki.</param>
      <param name="formatter">Element formujący do używania w celu formatowania zawartości.</param>
      <param name="mediaType">Wartość dla nagłówka typu zawartości lub <see cref="null" />, aby element formatujący wybrał domyślną wartość.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Content">
      <summary>Pobiera wartość zawartości do formatowania w treści jednostki.</summary>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Formatter">
      <summary>Pobiera element formujący do używania w celu formatowania zawartości.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.MediaType">
      <summary>Pobiera wartość dla nagłówka typu zawartości lub <see cref="null" />, aby element formatujący wybrał domyślną wartość.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.StatusCode">
      <summary>Pobiera kod stanu HTTP dla komunikatu odpowiedzi.</summary>
    </member>
    <member name="T:System.Web.Http.Results.InternalServerErrorResult">
      <summary>Reprezentuje wynik akcji zwracającej pustą odpowiedź <see cref="F:System.Net.HttpStatusCode.InternalServerError" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />. </summary>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />. </summary>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InternalServerErrorResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.InvalidModelStateResult">
      <summary>Reprezentuje wynik akcji zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.BadRequest" /> i przeprowadza negocjacje zawartości na podstawie <see cref="T:System.Web.Http.HttpError" /> dla elementu <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</summary>
      <param name="modelState">Stan modelu do uwzględnienia w błędzie.</param>
      <param name="includeErrorDetail">Wartość true, jeśli błąd ma uwzględniać komunikaty wyjątku, w przeciwnym razie wartość false.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</summary>
      <param name="modelState">Stan modelu do uwzględnienia w błędzie.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
      <returns>Moduł negocjowania zawartości do obsługi negocjacji zawartości.</returns>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie tworzy komunikat odpowiedzi.</summary>
      <returns>Zadanie, które po zakończeniu zawiera komunikat odpowiedzi.</returns>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
      <returns>Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail">
      <summary>Pobiera wartość wskazującą, czy błąd powinien zawierać komunikaty wyjątków.</summary>
      <returns>Wartość true, jeśli błąd ma uwzględniać komunikaty wyjątku, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ModelState">
      <summary>Pobiera stan modelu do uwzględnienia w błędzie.</summary>
      <returns>Stan modelu do uwzględnienia w błędzie.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="T:System.Web.Http.Results.JsonResult`1">
      <summary>Reprezentuje wynik akcji zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.OK" /> z danymi w formacie JSON.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.JsonResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="content">Wartość zawartości do serializacji w treści jednostki.</param>
      <param name="serializerSettings">Ustawienia serializatora.</param>
      <param name="encoding">Kodowanie zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.JsonResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="content">Wartość zawartości do serializacji w treści jednostki.</param>
      <param name="serializerSettings">Ustawienia serializatora.</param>
      <param name="encoding">Kodowanie zawartości.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Content">
      <summary>Pobiera wartość zawartości do serializacji w treści jednostki.</summary>
      <returns>Wartość zawartości do serializacji w treści jednostki.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Encoding">
      <summary>Pobiera kodowanie zawartości.</summary>
      <returns>Kodowanie zawartości.</returns>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie tworzy komunikat odpowiedzi.</summary>
      <returns>Zadanie, które po zakończeniu zawiera komunikat odpowiedzi.</returns>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.SerializerSettings">
      <summary>Pobiera ustawienia serializatora.</summary>
      <returns>Ustawienia serializatora.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NegotiatedContentResult`1">
      <summary>Reprezentuje wynik akcji realizującej negocjacje zawartości.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Content">
      <summary>Pobiera wartość zawartości do negocjowania i formatowania w treści jednostki.</summary>
      <returns>Wartość zawartości do negocjowania i formatowania w treści jednostki.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
      <returns>Moduł negocjowania zawartości do obsługi negocjacji zawartości.</returns>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie wykonuje wynegocjowane wyniki zawartości HTTP.</summary>
      <returns>Asynchronicznie wykonuje wynegocjowane wyniki zawartości HTTP.</returns>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
      <returns>Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania HTTP, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.StatusCode">
      <summary>Pobiera kod stanu HTTP dla komunikatu odpowiedzi.</summary>
      <returns>Kod stanu HTTP dla komunikatu odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NotFoundResult">
      <summary>Reprezentuje wynik akcji zwracającej pustą odpowiedź <see cref="F:System.Net.HttpStatusCode.NotFound" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.NotFoundResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkNegotiatedContentResult`1">
      <summary>Reprezentuje wynik akcji przeprowadzającej negocjację zawartości i zwracającej odpowiedź HttpStatusCode.OK w razie powodzenia.</summary>
      <typeparam name="T">Typ zawartości w treści jednostki.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="contentNegotiator">Moduł negocjowania zawartości do obsługi negocjacji zawartości.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
      <param name="formatters">Elementy formatujące do używania w celu negocjowania i formatowania zawartości.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> z udostępnionymi wartościami.</summary>
      <param name="content">Wartość zawartości do negocjowania i formatowania w treści jednostki.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Content">
      <summary>Pobiera wartość zawartości do negocjowania i formatowania w treści jednostki.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.ContentNegotiator">
      <summary>Pobiera moduł negocjowania zawartości do obsługi negocjacji zawartości.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Formatters">
      <summary>Pobiera elementy formatujące do używania w celu negocjowania i formatowania zawartości.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkResult">
      <summary>Reprezentuje wynik akcji zwracającej pustą odpowiedź HttpStatusCode.OK.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Wykonywane asynchronicznie.</summary>
      <returns>Zwraca zadanie.</returns>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkResult.Request">
      <summary>Pobiera komunikat żądania HTTP dla wyników.</summary>
      <returns>Komunikat żądania HTTP dla wyników.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectResult">
      <summary>Reprezentuje wynik akcji dla &lt;patrz cref="F:System.Net.HttpStatusCode.Redirect"/&gt;.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy &lt;patrz cref="T:System.Web.Http.Results.RedirectResult"/&gt; z określonymi wartościami.</summary>
      <param name="location">Lokalizacja, do której ma nastąpić przekierowanie.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy &lt;patrz cref="T:System.Web.Http.Results.RedirectResult"/&gt; z określonymi wartościami.</summary>
      <param name="location">Lokalizacja, do której ma nastąpić przekierowanie.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Location">
      <summary>Pobiera lokalizację, gdzie została utworzona zawartość.</summary>
      <returns>Zwraca wartość <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectToRouteResult">
      <summary>Reprezentuje wynik akcji generującej trasę i zwracającej odpowiedź &lt;patrz cref="F:System.Net.HttpStatusCode.Redirect"/&gt;.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy &lt;patrz cref="T:System.Web.Http.Results.RedirectToRouteResult"/&gt; z określonymi wartościami.</summary>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.UrlHelper,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy &lt;patrz cref="T:System.Web.Http.Results.RedirectToRouteResult"/&gt; z określonymi wartościami.</summary>
      <param name="routeName">Nazwa trasy do użycia podczas generowania adresu URL.</param>
      <param name="routeValues">Dane trasy do użycia podczas generowania adresu URL.</param>
      <param name="urlFactory">Fabryka do użycia podczas generowania adresu URL trasy.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteName">
      <summary>Pobiera nazwę trasy do użycia podczas generowania adresu URL.</summary>
      <returns>Zwraca wartość <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteValues">
      <summary>Pobiera dane trasy do użycia podczas generowania adresu URL.</summary>
      <returns>Zwraca wartość <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.UrlFactory">
      <summary>Pobiera fabrykę do użycia podczas generowania adresu URL trasy.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ResponseMessageResult">
      <summary>Reprezentuje wynik akcji zwracającej określony komunikat odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.ResponseMessageResult" />.</summary>
      <param name="response">Komunikat odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.ResponseMessageResult.Response">
      <summary>Pobiera komunikat odpowiedzi.</summary>
    </member>
    <member name="T:System.Web.Http.Results.StatusCodeResult">
      <summary>Reprezentuje wynik akcji zwracającej określony kod stanu HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.StatusCodeResult" />.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.StatusCodeResult" />.</summary>
      <param name="statusCode">Kod stanu HTTP dla komunikatu odpowiedzi.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronicznie tworzy komunikat odpowiedzi.</summary>
      <returns>Zadanie, które po zakończeniu zawiera komunikat odpowiedzi.</returns>
      <param name="cancellationToken">Token do monitorowania żądań anulowania.</param>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Komunikat żądania, które doprowadziło do tego wyniku.</returns>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.StatusCode">
      <summary>Pobiera kod stanu HTTP dla komunikatu odpowiedzi.</summary>
      <returns>Kod stanu HTTP dla komunikatu odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.UnauthorizedResult">
      <summary>Reprezentuje wynik akcji zwracającej odpowiedź <see cref="F:System.Net.HttpStatusCode.Unauthorized" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.StatusCodeResult" />. </summary>
      <param name="challenges">Żądania WWW-Authenticate.</param>
      <param name="request">Komunikat żądania, które doprowadziło do tego wyniku.</param>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Web.Http.ApiController)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Results.StatusCodeResult" />. </summary>
      <param name="challenges">Żądania WWW-Authenticate.</param>
      <param name="controller">Kontroler, z którego należy uzyskać zależności niezbędne do wykonania.</param>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Challenges">
      <summary>Pobiera żądania WWW-Authenticate.</summary>
      <returns>Zwraca wartość <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Request">
      <summary>Pobiera komunikat żądania, które doprowadziło do tego wyniku.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultDirectRouteProvider">
      <summary>Domyślna implementacja elementu <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Http.Controllers.HttpActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Tworzy wystąpienia elementu <see cref="T:System.Web.Http.Routing.RouteEntry" /> na podstawie podanych fabryk i akcji.Wejścia dla trasy udostępniają bezpośredni routing do podanej akcji.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="factories">Fabryki tras bezpośrednich.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Pobiera zestaw fabryk tras dla podanego deskryptora akcji.</summary>
      <returns>Zestaw fabryk tras.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Tworzy wystąpienia elementu <see cref="T:System.Web.Http.Routing.RouteEntry" /> na podstawie podanych fabryk, kontrolera i akcji.Wejścia dla trasy udostępniają bezpośredni routing do podanego kontrolera i mogą dotrzeć do zestawu podanych akcji.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji.</param>
      <param name="factories">Fabryki tras bezpośrednich.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Pobiera fabryki tras dla podanego deskryptora kontrolera.</summary>
      <returns>Zestaw fabryk tras.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Pobiera trasy bezpośrednie dla danego deskryptora kontrolera i deskryptorów akcji na podstawie atrybutów elementu <see cref="T:System.Web.Http.Routing.IDirectRouteFactory" />.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji dla wszystkich akcji.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Pobiera prefiks trasy z podanego kontrolera.</summary>
      <returns>Prefiks trasy lub wartość null.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultInlineConstraintResolver">
      <summary>Domyślna implementacja elementu <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" />.Rozpoznaje ograniczenia, analizując klucz ograniczenia i argumenty ograniczenia, używając mapy do rozpoznawania typu ograniczenia oraz wywołując konstruktora odpowiedniego dla typu ograniczenia.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.DefaultInlineConstraintResolver" />.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary> Pobiera modyfikowalny słownik mapujący klucze ograniczenia do konkretnego typu ograniczenia. </summary>
      <returns>Modyfikowalny słownik mapujący klucze ograniczenia do konkretnego typu ograniczenia.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Rozpoznaje ograniczenie w tekście.</summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, jak który zostało rozpoznane ograniczenie w tekście.</returns>
      <param name="inlineConstraint">Ograniczenie w tekście do rozpoznania.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DirectRouteFactoryContext">
      <summary>Reprezentuje kontekst wspierający generowanie trasy bezpośredniej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="prefix">Prefiks trasy, jeśli występuje, określony przez kontroler.</param>
      <param name="actions">Deskryptory akcji, do których tworzona jest trasa.</param>
      <param name="inlineConstraintResolver">Mechanizm rozpoznawania ograniczeń w tekście.</param>
      <param name="targetIsAction">Wartość wskazująca, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Actions">
      <summary>Pobiera deskryptory akcji, do których tworzona jest trasa.</summary>
      <returns>Deskryptory akcji, do których tworzona jest trasa.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Generuje konstruktora trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</summary>
      <returns>Konstruktor trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</returns>
      <param name="template">Szablon trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Generuje konstruktora trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</summary>
      <returns>Konstruktor trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</returns>
      <param name="template">Szablon trasy.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń w tekście do użycia, w przeciwnym razie wartość null.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Pobiera mechanizm rozpoznawania ograniczeń w tekście.</summary>
      <returns>Mechanizm rozpoznawania ograniczeń w tekście.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Prefix">
      <summary>Pobiera prefiks trasy, jeśli występuje, określony przez kontroler.</summary>
      <returns>Prefiks trasy, jeśli występuje, określony przez kontroler.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Pobiera wartość wskazującą, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</summary>
      <returns>Wartość true, jeśli trasa jest skonfigurowana na poziomie akcji; w przeciwnym razie wartość, false )jeśli trasa jest skonfigurowana na poziomie kontrolera).</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>Umożliwia zdefiniowanie poleceń HTTP, które są dozwolone, gdy proces routingu platformy ASP.NET określa, czy adres URL jest zgodny z trasą.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> przy użyciu poleceń HTTP dozwolonych dla danej trasy.</summary>
      <param name="allowedMethods">Polecenia HTTP, które są prawidłowe dla danej trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Pobiera lub ustawia kolekcję dozwolonych poleceń HTTP dla danej trasy.</summary>
      <returns>Kolekcja dozwolonych poleceń HTTP dla danej trasy.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy żądanie zostało wystosowane z użyciem polecenia HTTP, które jest dozwolone dla danej trasy.</summary>
      <returns>Gdy proces routingu platformy ASP.NET przetwarza żądanie: wartość true, jeśli żądanie zostało wystosowane z użyciem dozwolonego polecenia HTTP, a w przeciwnym razie — false. Gdy proces routingu platformy ASP.NET konstruuje adres URL: wartość true, jeśli podane wartości zawierają polecenie HTTP zgodne z jednym z dozwolonych poleceń HTTP, a w przeciwnym razie — false. Wartością domyślną jest true.</returns>
      <param name="request">Żądanie sprawdzane w celu określenia, czy jest ono zgodne z adresem URL.</param>
      <param name="route">Obiekt sprawdzany w celu określenia, czy jest on zgodny z adresem URL.</param>
      <param name="parameterName">Nazwa sprawdzanego parametru.</param>
      <param name="values">Obiekt zawierający parametry dla trasy.</param>
      <param name="routeDirection">Obiekt wskazujący, czy podczas przetwarzania przychodzącego żądania lub generowania adresu URL przeprowadzane jest sprawdzenie ograniczeń.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy żądanie zostało wystosowane z użyciem polecenia HTTP, które jest dozwolone dla danej trasy.</summary>
      <returns>Gdy proces routingu platformy ASP.NET przetwarza żądanie: wartość true, jeśli żądanie zostało wystosowane z użyciem dozwolonego polecenia HTTP, a w przeciwnym razie — false. Gdy proces routingu platformy ASP.NET konstruuje adres URL: wartość true, jeśli podane wartości zawierają polecenie HTTP zgodne z jednym z dozwolonych poleceń HTTP, a w przeciwnym razie — false. Wartością domyślną jest true.</returns>
      <param name="request">Żądanie sprawdzane w celu określenia, czy jest ono zgodne z adresem URL.</param>
      <param name="route">Obiekt sprawdzany w celu określenia, czy jest on zgodny z adresem URL.</param>
      <param name="parameterName">Nazwa sprawdzanego parametru.</param>
      <param name="values">Obiekt zawierający parametry dla trasy.</param>
      <param name="routeDirection">Obiekt wskazujący, czy podczas przetwarzania przychodzącego żądania lub generowania adresu URL przeprowadzane jest sprawdzenie ograniczeń.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Reprezentuje klasę trasy dla hosta samodzielnego (tj.hostowanego poza ASP.NET).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Wartości domyślne parametrów trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Wartości domyślne parametrów trasy.</param>
      <param name="constraints">Ograniczenia dla parametrów trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Wartości domyślne parametrów trasy.</param>
      <param name="constraints">Ograniczenia dla parametrów trasy.</param>
      <param name="dataTokens">Wszelkie dodatkowe tokeny dla parametrów trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Szablon trasy.</param>
      <param name="defaults">Wartości domyślne parametrów trasy.</param>
      <param name="constraints">Ograniczenia dla parametrów trasy.</param>
      <param name="dataTokens">Wszelkie dodatkowe tokeny dla parametrów trasy.</param>
      <param name="handler">Program obsługi komunikatów, który odbierze żądanie.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Pobiera ograniczenia dla parametrów trasy.</summary>
      <returns>Ograniczenia dla parametrów trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Pobiera wszystkie dodatkowe tokeny danych nieużywane bezpośrednio w celu określenia, czy trasa pasuje do przychodzącego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Wszystkie dodatkowe tokeny danych nieużywane bezpośrednio w celu określenia, czy trasa pasuje do przychodzącego komunikatu <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Pobiera wartości domyślne dla parametrów trasy, jeśli nie zostaną udostępnione przez przychodzący element <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Wartości domyślne dla parametrów trasy, jeśli nie zostaną udostępnione przez przychodzący element <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Określa, czy ta trasa pasuje do przychodzącego żądania, wyszukując interfejs <see cref="T:System.Web.Http.Routing.HttpRouteData" /> dla trasy.</summary>
      <returns>Wartość <see cref="T:System.Web.Http.Routing.HttpRouteData" /> dla pasującej trasy; w przeciwnym razie — null.</returns>
      <param name="virtualPathRoot">Katalog główny ścieżki wirtualnej.</param>
      <param name="request">Żądanie HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Próbuje wygenerować identyfikator URI reprezentujący wartości przekazane na podstawie bieżących wartości z obiektu <see cref="T:System.Web.Http.Routing.HttpRouteData" /> oraz nowych wartości, korzystając z określonego obiektu <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <returns>Wystąpienie elementu <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> lub wartość null, jeśli nie można wygenerować identyfikatora URI.</returns>
      <param name="request">Komunikat żądania HTTP.</param>
      <param name="values">Wartości trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Pobiera lub ustawia program obsługi trasy.</summary>
      <returns>Program obsługi trasy HTTP.</returns>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRoute.HttpRouteKey">
      <summary>Określa klucz trasy HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie HTTP.</param>
      <param name="constraint">Ograniczenia dla parametrów trasy.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Jedna z wartości wyliczenia <see cref="System.Web.Http.Routing.HttpRouteDirection" />.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Pobiera szablon trasy opisujący wzorzec URI używany do dopasowywania.</summary>
      <returns>Szablon trasy opisujący wzorzec URI używany do dopasowywania.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>Hermetyzuje informacje dotyczące trasy HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Obiekt definiujący trasę.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Obiekt definiujący trasę.</param>
      <param name="values">Wartość.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Pobiera obiekt reprezentujący trasę.</summary>
      <returns>Obiekt reprezentujący trasę.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Pobiera kolekcję wartości parametru URL i wartości domyślne dla trasy.</summary>
      <returns>Obiekt, który zawiera wartości zanalizowane z adresu URL oraz wartości domyślnych.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDataExtensions">
      <summary>Usuwa wszystkie parametry opcjonalne, które nie mają wartości z danych trasy.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.GetSubRoutes(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Jeśli trasa jest w rzeczywistości związkiem innych tras, zwróć zbiór tras podrzędnych.</summary>
      <returns>Zwraca zbiór tras podrzędnych zawartych w tej trasie.</returns>
      <param name="routeData">Dane trasy związku.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.RemoveOptionalRoutingParameters(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Usuwa wszystkie parametry opcjonalne, które nie mają wartości z danych trasy.</summary>
      <param name="routeData">Dane trasy do zmutowania na miejscu.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Określa wyliczenie kierunku trasy.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>Kierunek elementu UriGeneration.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>Kierunek elementu UriResolution.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Reprezentuje klasę trasy dla hosta samodzielnego składającą się z określonych par klucz/wartość.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="dictionary">Słownik.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="values">Wartość klucza.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>Prezentuje dane dotyczące ścieżki wirtualnej HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />.</summary>
      <param name="route">Trasa ścieżki wirtualnej.</param>
      <param name="virtualPath">Adres URL utworzony na podstawie definicji trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Pobiera lub ustawia trasę ścieżki wirtualnej.</summary>
      <returns>Trasa ścieżki wirtualnej.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Pobiera lub ustawia adres URL utworzony na podstawie definicji trasy.</summary>
      <returns>Adres URL utworzony na podstawie definicji trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteBuilder">
      <summary>Określa konstruktora, który tworzy bezpośrednie trasy do akcji (trasy atrybutów).</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Actions">
      <summary>Pobiera deskryptory akcji, do których tworzona jest trasa.</summary>
      <returns>Deskryptory akcji, do których tworzona jest trasa.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteBuilder.Build">
      <summary>Tworzy wejścia dla trasy w oparciu o bieżące wartości właściwości.</summary>
      <returns>Utworzone wejście dla trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Constraints">
      <summary>Pobiera lub ustawia ograniczenia trasy.</summary>
      <returns>Ograniczenia trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Pobiera lub ustawia tokeny danych trasy.</summary>
      <returns>Tokeny danych trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Defaults">
      <summary>Pobiera lub ustawia domyślne ustawienia trasy.</summary>
      <returns>Wartości domyślne trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Name">
      <summary>Pobiera lub ustawia nazwę trasy, jeśli występuje; w przeciwnym razie wartość null.</summary>
      <returns>Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Order">
      <summary>Pobiera lub ustawia kolejność trasy.</summary>
      <returns>Kolejność trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Precedence">
      <summary>Pobiera lub ustawia pierwszeństwo trasy.</summary>
      <returns>Pierwszeństwo trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Pobiera wartość wskazującą, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</summary>
      <returns>Wartość true, jeśli trasa jest skonfigurowana na poziomie akcji; w przeciwnym razie wartość, false )jeśli trasa jest skonfigurowana na poziomie kontrolera).</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Template">
      <summary>Pobiera lub ustawia szablon trasy.</summary>
      <returns>Szablon trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteFactory">
      <summary>Określa fabrykę, która tworzy trasę bezpośrednio do zbioru deskryptorów akcji (trasa atrybutu).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteFactory.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Tworzy bezpośrednie wejście dla trasy.</summary>
      <returns>Bezpośrednie wejście dla trasy.</returns>
      <param name="context">Kontekst do użycia podczas generowania trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteProvider">
      <summary>Definiuje dostawcę dla tras bezpośrednio prowadzących do deskryptorów akcji (dla tras atrybutów).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Pobiera bezpośrednie trasy dla kontrolera.</summary>
      <returns>Zestaw wejść dla trasy dla kontrolera.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń w tekście.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>Klasa <see cref="T:System.Web.Http.Routing.IHttpRoute" /> definiuje interfejs dla trasy, przedstawiając sposób mapowania przychodzącego elementu <see cref="T:System.Net.Http.HttpRequestMessage" /> na określony kontroler i akcję. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Pobiera ograniczenia dla parametrów trasy. </summary>
      <returns>Ograniczenia dla parametrów trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Pobiera wszystkie dodatkowe tokeny danych nieużywane bezpośrednio w celu określenia, czy trasa pasuje do przychodzącego elementu <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Dodatkowe tokeny danych.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Pobiera wartości domyślne dla parametrów trasy, jeśli nie zostaną udostępnione przez przychodzący element <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Wartości domyślne parametrów trasy.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Określa, czy ta trasa pasuje do przychodzącego żądania, wyszukując interfejs &lt;see cref="!:IRouteData" /&gt; dla trasy. </summary>
      <returns>Wartość &lt;see cref="!:RouteData" /&gt; dla trasy, jeśli pasuje; w przeciwnym razie wartość null.</returns>
      <param name="virtualPathRoot">Katalog główny ścieżki wirtualnej.</param>
      <param name="request">Żądanie.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Pobiera dane ścieżki wirtualnej na podstawie trasy i podanych wartości.</summary>
      <returns>Dane ścieżki wirtualnej.</returns>
      <param name="request">Komunikat żądania.</param>
      <param name="values">Wartości.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>Pobiera program obsługi komunikatów, który odbierze żądanie.</summary>
      <returns>Program obsługi komunikatów.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Pobiera szablon trasy opisujący wzorzec URI używany do dopasowywania.  </summary>
      <returns>Szablon trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Reprezentuje ograniczenie trasy klasy podstawowej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie; w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Udostępnia informacje na temat trasy.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Pobiera obiekt reprezentujący trasę.</summary>
      <returns>Obiekt reprezentujący trasę.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Pobiera kolekcję wartości parametru URL i wartości domyślne dla trasy.</summary>
      <returns>Wartości zanalizowane z adresu URL oraz wartości domyślnych.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteInfoProvider">
      <summary> Udostępnia informacje do definiowania trasy. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Name">
      <summary> Pobiera nazwę trasy do wygenerowania. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Order">
      <summary> Pobiera kolejność trasy w odniesieniu do innych tras. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Template">
      <summary> Pobiera szablon trasy opisujący wzorzec URI używany do dopasowywania. </summary>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>Definiuje właściwości trasy HTTP.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>Pobiera trasę HTTP.</summary>
      <returns>Trasa HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Pobiera identyfikator URI reprezentujący ścieżkę wirtualną bieżącej trasy HTTP.</summary>
      <returns>Identyfikator URI reprezentujący ścieżkę wirtualną bieżącej trasy HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IInlineConstraintResolver">
      <summary> Definiuje abstrakcję rozpoznawania ograniczeń w tekście jako wystąpień obiektu <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary> Rozpoznaje ograniczenie w tekście. </summary>
      <returns>Obiekt <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, jak który zostało rozpoznane ograniczenie w tekście.</returns>
      <param name="inlineConstraint">Ograniczenie w tekście do rozpoznania.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IRoutePrefix">
      <summary>Określa prefiks trasy.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IRoutePrefix.Prefix">
      <summary>Pobiera prefiks trasy.</summary>
      <returns>Prefiks trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteEntry">
      <summary>Reprezentuje trasą mającą nazwę.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteEntry.#ctor(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.RouteEntry" />.</summary>
      <param name="name">Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</param>
      <param name="route">Trasa.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Name">
      <summary>Pobiera nazwę trasy, jeśli występuje; w przeciwnym razie wartość null.</summary>
      <returns>Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Route">
      <summary>Pobiera trasę.</summary>
      <returns>Trasa.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteFactoryAttribute">
      <summary>Reprezentuje trasę atrybutu, która może zawierać niestandardowe ograniczenia.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">Szablon trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Constraints">
      <summary>Pobiera ograniczenia trasy, jeśli występują; w przeciwnym razie wartość null.</summary>
      <returns>Ograniczenia trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Tworzy wejście dla trasy</summary>
      <returns>Utworzone wejście dla trasy.</returns>
      <param name="context">Kontekst.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Pobiera tokeny danych trasy, jeśli występują; w przeciwnym razie wartość null.</summary>
      <returns>Tokeny danych trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Defaults">
      <summary>Pobiera domyślne ustawienia trasy, jeśli występują; w przeciwnym razie wartość null.</summary>
      <returns>Domyśle ustawienia trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Name">
      <summary>Pobiera lub ustawia nazwę trasy, jeśli występuje; w przeciwnym razie wartość null.</summary>
      <returns>Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Order">
      <summary>Pobiera lub ustawia kolejność trasy.</summary>
      <returns>Kolejność trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Template">
      <summary>Pobiera szablon trasy.</summary>
      <returns>Szablon trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.StopRoutingHandler">
      <summary>Reprezentuje program obsługi, który określa trasę, która nie będzie obsługiwać żądań dla szablonu trasy.Gdy trasa udostępnia tę klasę jako program obsługi, żądania zgodne z trasą będą ignorowane.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.StopRoutingHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.StopRoutingHandler" />.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>Reprezentuje fabrykę do tworzenia adresów URL. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.UrlHelper" />. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <param name="request">Żądanie HTTP dla tego wystąpienia.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Content(System.String)">
      <summary>Tworzy bezwzględny adres URL przy użyciu określonej ścieżki.</summary>
      <returns>Wygenerowany adres URL.</returns>
      <param name="path">Ścieżka adresu URL, która może być względnym adresem URL, głównym adresem URL lub ścieżką wirtualną.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca łącze dla określonej trasy.</summary>
      <returns>Łącze dla określonej trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Zwraca łącze dla określonej trasy.</summary>
      <returns>Łącze dla określonej trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartość trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Net.Http.HttpRequestMessage" /> bieżącego wystąpienia klasy <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Obiekt <see cref="T:System.Net.Http.HttpRequestMessage" /> bieżącego wystąpienia klasy.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca trasę dla obiektu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Trasa dla obiektu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Lista wartości trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>Zwraca trasę dla obiektu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Trasa dla obiektu <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint">
      <summary>Ogranicza parametr trasy tak, aby zawierał tylko małe lub wielkie litery alfabetu angielskiego od A do Z.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości logicznych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint">
      <summary>Ogranicza trasę za pomocą kilku ograniczeń podrzędnych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Http.Routing.IHttpRouteConstraint})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">Ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Pobiera ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</summary>
      <returns>Ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Trasa kierunku.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości dziesiętnych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DoubleRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 64-bitowych wartości zmiennoprzecinkowych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.FloatRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 32-bitowych wartości zmiennoprzecinkowych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.IntRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 32-bitowych wartości całkowitych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.IntRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o podanej długości lub mieszczącego się w podanym zakresie długości.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint" /> ograniczające parametr trasy do postaci ciągu o podanej długości.</summary>
      <param name="minLength">Minimalna długość parametru trasy.</param>
      <param name="maxLength">Maksymalna długość parametru trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Pobiera długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Pobiera maksymalną długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Pobiera minimalną długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LongRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 64-bitowych wartości całkowitych.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o określonej długości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint" />.</summary>
      <param name="maxLength">Długość maksymalna.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Pobiera maksymalną długość parametru trasy.</summary>
      <returns>Maksymalna długość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci liczby całkowitej o określonej wartości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Pobiera maksymalną wartość parametru trasy.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o określonej długości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">Długość minimalna.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Pobiera minimalną długość parametru trasy.</summary>
      <returns>Minimalna długość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci długiej o określonej wartości minimalnej.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">Minimalna wartość parametru trasy.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Pobiera minimalną wartość parametru trasy.</summary>
      <returns>Minimalna wartość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint">
      <summary>Ogranicza trasę za pomocą ograniczenia wewnętrznego, którego określenie nie zakończy się niepowodzeniem, gdy parametr opcjonalny jest ustawiony na własną wartość domyślną.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Http.Routing.IHttpRouteConstraint)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">Ograniczenie wewnętrzne do dopasowania, jeśli parametr nie jest parametrem opcjonalnym bez wartości.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Pobiera ograniczenie wewnętrzne do dopasowania, jeśli parametr nie jest parametrem opcjonalnym bez wartości.</summary>
      <returns>Ograniczenie wewnętrzne do dopasowania, jeśli parametr nie jest parametrem opcjonalnym bez wartości.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci liczby całkowitej mającej podany zakres wartości.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">Wartość minimalna.</param>
      <param name="max">Wartość maksymalna.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Pobiera maksymalną wartość parametru trasy.</summary>
      <returns>Maksymalna wartość parametru trasy.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Pobiera minimalną wartość parametru trasy.</summary>
      <returns>Minimalna wartość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint">
      <summary>Ogranicza parametr trasy do dopasowania do wyrażenia regularnego.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint" />.</summary>
      <param name="pattern">Deseń.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="request">Żądanie.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Pobiera wzorzec wyrażenia regularnego do dopasowania.</summary>
      <returns>Wzorzec wyrażenia regularnego do dopasowania.</returns>
    </member>
    <member name="T:System.Web.Http.Services.Decorator">
      <summary> Udostępnia metodę pobierania najbardziej wewnętrznego obiektu obiektu, który może zostać opakowany przez &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
    </member>
    <member name="M:System.Web.Http.Services.Decorator.GetInner``1(``0)">
      <summary> Pobiera najbardziej wewnętrzny obiekt, który nie implementuje &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
      <param name="outer">Obiekt wymagający rozpakowania.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>Reprezentuje kontener dla wystąpień usługi używanych przez obiekt <see cref="T:System.Web.Http.HttpConfiguration" />.Należy zwrócić uwagę, że ten kontener obsługuje tylko znane typy, a metody służące do pobierania lub ustawiania arbitralnie wybranych typów usług będą zgłaszać po wywołaniu wyjątek <see cref="T:System.ArgumentException" />.Aby tworzyć arbitralnie wybrane typy, należy korzystać z obiektu <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" />.Obsługiwane typy dla tego kontenera to:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />Przekazanie dowolnego typu spoza tej listy do dowolnej metody tego interfejsu spowoduje zgłoszenie wyjątku <see cref="T:System.ArgumentException" />.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Services.DefaultServices" />.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Services.DefaultServices" /> z określonym obiektem <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <param name="configuration">Obiekt <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Usuwa usługę o jednym wystąpieniu spośród usług domyślnych.</summary>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Pobiera usługę o określonym typie.</summary>
      <returns>Pierwsze wystąpienie usługi lub wartość null, jeśli usługa nie została znaleziona.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Pobiera listę obiektów usługi dla danego typu usługi i sprawdza typ usługi.</summary>
      <returns>Lista obiektów usługi o danym typie.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Pobiera listę obiektów usługi o danym typie usługi.</summary>
      <returns>Lista obiektów usługi o określonym typie albo pusta lista, jeśli usługi nie uda się znaleźć.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Sprawdza, czy typ usługi to typ o jednym wystąpieniu.</summary>
      <returns>Wartość true, jeśli typ usługi ma najwyżej jedno wystąpienie, lub wartość false, jeśli typ usługi obsługuje wiele wystąpień.</returns>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Zamienia obiekt usługi o jednym wystąpieniu.</summary>
      <param name="serviceType">Typ usługi.</param>
      <param name="service">Obiekt usługi zastępujący poprzednie wystąpienie.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Usuwa buforowane wartości dla pojedynczego typu usługi.</summary>
      <param name="serviceType">Typ usługi.</param>
    </member>
    <member name="T:System.Web.Http.Services.IDecorator`1">
      <summary> Definiuje dekoratora, który uwidacznia wewnętrzny obiekt dekorowany. </summary>
      <typeparam name="T">Ten parametr typu jest kowariantny. Oznacza to, że można użyć określonego typu lub dowolnego typu, który jest bardziej pochodny. Aby uzyskać więcej informacji dotyczących kowariantności i kontrawariantności, zobacz temat .</typeparam>
    </member>
    <member name="P:System.Web.Http.Services.IDecorator`1.Inner">
      <summary> Pobiera obiekt wewnętrzny. </summary>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Reprezentuje klasę śledzenia wydajności do rejestrowania momentu wejścia do metody i wyjścia z niej oraz czasu wykonywania.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>Inicjuje klasę <see cref="T:System.Web.Http.Tracing.ITraceManager" /> z określoną konfiguracją.</summary>
      <param name="configuration">Konfiguracja.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>Reprezentuje moduł zapisujący śledzenie.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Wywołuje określoną akcję śledzenia traceAction w celu umożliwienia ustawienia wartości w nowej klasie <see cref="T:System.Web.Http.Tracing.TraceRecord" /> wyłącznie wtedy, gdy śledzenie jest dozwolone dla danych elementów category i level. </summary>
      <param name="request">Bieżąca klasa <see cref="T:System.Net.Http.HttpRequestMessage" />.Może to być wartość null, ale w tym przypadku kolejna analiza śledzenia nie skoreluje śledzenia z określonym żądaniem.</param>
      <param name="category">Kategoria logiczna śledzenia.Użytkownicy mogą definiować własne kategorie.</param>
      <param name="level">Poziom <see cref="T:System.Web.Http.Tracing.TraceLevel" />, na jakim zostanie zapisane to śledzenie.</param>
      <param name="traceAction">Akcja do wywołania w przypadku włączonego śledzenia.Oczekiwane jest wypełnienie przez obiekt wywołujący pól danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" /> w tej akcji.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>Reprezentuje metody rozszerzenia dla obiektu <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Udostępnia zestaw metod i właściwości pomagających w debugowaniu kodu z określonym modułem zapisującym, żądaniem, kategorią i wyjątkiem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Udostępnia zestaw metod i właściwości pomagających w debugowaniu kodu z określonym modułem zapisującym, żądaniem, kategorią, wyjątkiem, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Udostępnia zestaw metod i właściwości pomagających w debugowaniu kodu z określonym modułem zapisującym, żądaniem, kategorią, wyjątkiem, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Wyświetla komunikat o błędzie na liście z określonym modułem zapisującym, żądaniem, kategorią i wyjątkiem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Wyświetla komunikat o błędzie na liście z określonym modułem zapisującym, żądaniem, kategorią, wyjątkiem, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wyjątek.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument w komunikacie.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Wyświetla komunikat o błędzie na liście z określonym modułem zapisującym, żądaniem, kategorią, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument w komunikacie.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Wyświetla komunikat o błędzie w klasie <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> z określonym modułem zapisującym, żądaniem, kategorią i wyjątkiem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wyjątek pojawiający się podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Wyświetla komunikat o błędzie w klasie <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> z określonym modułem zapisującym, żądaniem, kategorią, wyjątkiem, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wyjątek.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Wyświetla komunikat o błędzie w klasie <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> z określonym modułem zapisującym, żądaniem, kategorią, formatem komunikatu i argumentem.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Wyświetla szczegóły w obiekcie <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Wyświetla szczegóły w obiekcie <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Wyświetla szczegóły w obiekcie <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Wskazuje odbiorniki śledzenia w kolekcji Listeners.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Wskazuje odbiorniki śledzenia w kolekcji Listeners.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Wskazuje odbiorniki śledzenia w kolekcji Listeners.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom <see cref="T:System.Web.Http.Tracing.TraceLevel" /> śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Śledzi zarówno początkowy, jak i końcowy ślad w obrębie określonej operacji.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom <see cref="T:System.Web.Http.Tracing.TraceLevel" /> śledzenia.</param>
      <param name="operatorName">Nazwa obiektu wykonującego operację.Może to być wartość null.</param>
      <param name="operationName">Nazwa wykonywanej operacji.Może to być wartość null.</param>
      <param name="beginTrace">Klasa <see cref="T:System.Action" /> do wywołania przed wykonaniem operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <param name="execute">Element &lt;see cref="T:System.Func`1" /&gt;, który zwraca klasę <see cref="T:System.Threading.Tasks.Task" /> wykonującą operację.</param>
      <param name="endTrace">Klasa <see cref="T:System.Action" /> do wywołania po pomyślnym wykonaniu operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <param name="errorTrace">Klasa <see cref="T:System.Action" /> do wywołania w przypadku wystąpienia błędu podczas wykonywania operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Śledzi zarówno początkowy, jak i końcowy ślad w obrębie określonej operacji. </summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" /> zwracana przez operację.</returns>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom <see cref="T:System.Web.Http.Tracing.TraceLevel" /> śledzenia.</param>
      <param name="operatorName">Nazwa obiektu wykonującego operację.Może to być wartość null.</param>
      <param name="operationName">Nazwa wykonywanej operacji.Może to być wartość null.</param>
      <param name="beginTrace">Klasa <see cref="T:System.Action" /> do wywołania przed wykonaniem operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <param name="execute">Element &lt;see cref="T:System.Func`1" /&gt;, który zwraca klasę <see cref="T:System.Threading.Tasks.Task" /> wykonującą operację.</param>
      <param name="endTrace">Klasa <see cref="T:System.Action" /> do wywołania po pomyślnym wykonaniu operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Przekazane zostaną także wyniki ukończonego zadania.Ta akcja może mieć wartość null.</param>
      <param name="errorTrace">Klasa <see cref="T:System.Action" /> do wywołania w przypadku wystąpienia błędu podczas wykonywania operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <typeparam name="TResult">Typ wyniku zwracany przez klasę <see cref="T:System.Threading.Tasks.Task" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Śledzi zarówno początkowy, jak i końcowy ślad w obrębie określonej operacji. </summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" /> zwracana przez operację.</returns>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="level">Poziom <see cref="T:System.Web.Http.Tracing.TraceLevel" /> śledzenia.</param>
      <param name="operatorName">Nazwa obiektu wykonującego operację.Może to być wartość null.</param>
      <param name="operationName">Nazwa wykonywanej operacji.Może to być wartość null.</param>
      <param name="beginTrace">Klasa <see cref="T:System.Action" /> do wywołania przed wykonaniem operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <param name="execute">Element &lt;see cref="T:System.Func`1" /&gt;, który zwraca klasę <see cref="T:System.Threading.Tasks.Task" /> wykonującą operację.</param>
      <param name="endTrace">Klasa <see cref="T:System.Action" /> do wywołania po pomyślnym wykonaniu operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
      <param name="errorTrace">Klasa <see cref="T:System.Action" /> do wywołania w przypadku wystąpienia błędu podczas wykonywania operacji w celu umożliwienia wypełnienia danego rekordu <see cref="T:System.Web.Http.Tracing.TraceRecord" />.Może to być wartość null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Wskazuje poziom ostrzeżeń wykonywania.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Wskazuje poziom ostrzeżeń wykonywania.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="exception">Wystąpił błąd podczas wykonywania.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Wskazuje poziom ostrzeżeń wykonywania.</summary>
      <param name="traceWriter">Element <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" />, z którą zostanie skojarzone śledzenie.Może to być wartość null.</param>
      <param name="category">Kategoria logiczna śledzenia.</param>
      <param name="messageFormat">Format komunikatu.</param>
      <param name="messageArguments">Argument komunikatu.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>Określa wyliczenie kategorii śledzenia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Kategoria akcji.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>Kategoria kontrolerów.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>Kategoria filtrów.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>Kategoria formatowania.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>Kategoria programów obsługi wiadomości.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>Kategoria powiązania modelu.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>Kategoria żądania.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>Kategoria routingu.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>Określa rodzaj operacji śledzenia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Oznaczanie śledzenia początku operacji.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Oznaczanie śledzenia końca operacji.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Pojedyncze śledzenie niebędące częścią pary śledzenia początek/koniec.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>Określa wyliczenie poziomu śledzenia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>Poziom śledzenia dający zapisy na potrzeby debugowania.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>Poziom śledzenia dający zapisy błędów.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>Poziom śledzenia dający zapisy sytuacji krytycznych.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>Poziom śledzenia dający zapisy informacyjne.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>Śledzenie jest wyłączone.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>Poziom śledzenia dający zapisy ostrzeżeń.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Reprezentuje rekord śledzenia.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Tracing.TraceRecord" />.</summary>
      <param name="request">Żądanie komunikatu.</param>
      <param name="category">Kategoria śledzenia.</param>
      <param name="level">Poziom śledzenia.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>Pobiera lub ustawia kategorię śledzenia.</summary>
      <returns>Kategoria śledzenia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Pobiera lub ustawia wyjątek.</summary>
      <returns>Wyjątek.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>Pobiera lub ustawia rodzaj śledzenia.</summary>
      <returns>Rodzaj śledzenia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>Pobiera lub ustawia poziom śledzenia.</summary>
      <returns>Poziom śledzenia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>Pobiera lub ustawia komunikat.</summary>
      <returns>Komunikat.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Pobiera lub ustawia nazwę wykonywanej operacji logicznej.</summary>
      <returns>Nazwa wykonywanej operacji logicznej.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>Pobiera lub ustawia nazwę logiczną obiektu wykonującego operację.</summary>
      <returns>Nazwa logiczna obiektu wykonującego operację.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Pobiera opcjonalne właściwości zdefiniowane przez użytkownika.</summary>
      <returns>Opcjonalne właściwości zdefiniowane przez użytkownika.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>Pobiera komunikat <see cref="T:System.Net.Http.HttpRequestMessage" /> z rekordu.</summary>
      <returns>Komunikat <see cref="T:System.Net.Http.HttpRequestMessage" /> z rekordu.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>Pobiera identyfikator korelacji z właściwości <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</summary>
      <returns>Identyfikator korelacji z właściwości <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>Pobiera lub ustawia klasę <see cref="T:System.Net.HttpStatusCode" /> skojarzoną z klasą <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Klasa <see cref="T:System.Net.HttpStatusCode" /> skojarzona z klasą <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Pobiera obiekt <see cref="T:System.DateTime" /> tego śledzenia (za pośrednictwem właściwości <see cref="P:System.DateTime.UtcNow" />).</summary>
      <returns>Obiekt <see cref="T:System.DateTime" /> tego śledzenia (za pośrednictwem właściwości <see cref="P:System.DateTime.UtcNow" />).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Reprezentuje klasę używaną do rekursywnej weryfikacji obiektu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.ShouldValidateType(System.Type)">
      <summary>Określa, czy wystąpienia określonego typu powinny być weryfikowane.</summary>
      <returns>Wartość true, jeśli powinien być zweryfikowany. W przeciwnym razie wartość false.</returns>
      <param name="type">Typ do weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary>Określa, czy parametr <paramref name="model" /> jest prawidłowy, i dodaje wszelkie błędy weryfikacji do obiektu <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> właściwego dla wartości elementu <paramref name="actionContext" />.</summary>
      <returns>Wartość true, jeśli model jest prawidłowy, w przeciwnym razie wartość false.</returns>
      <param name="model">Model do weryfikacji.</param>
      <param name="type">Typ <see cref="T:System.Type" /> do użycia w celu weryfikacji.</param>
      <param name="metadataProvider">Klasa <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> używana do udostępnienia metadanych modelu.</param>
      <param name="actionContext">Klasa <see cref="T:System.Web.Http.Controllers.HttpActionContext" />, w której model jest weryfikowany.</param>
      <param name="keyPrefix">Typ <see cref="T:System.String" /> do dołączenia do klucza dla każdego błędu weryfikacji.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Reprezentuje interfejs do sprawdzania poprawności modeli.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Określa, czy model model jest prawidłowy, i dodaje wszystkie błędy weryfikacji do słownika <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> kontekstu akcji actionContext.</summary>
      <returns>Wartość true, jeśli model model jest prawidłowy; w przeciwnym razie wartość false.</returns>
      <param name="model">Model do weryfikacji.</param>
      <param name="type">Typ <see cref="T:System.Type" /> do użycia w celu weryfikacji.</param>
      <param name="metadataProvider">Klasa <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> używana do udostępnienia metadanych modelu.</param>
      <param name="actionContext">Klasa <see cref="T:System.Web.Http.Controllers.HttpActionContext" />, w której model jest weryfikowany.</param>
      <param name="keyPrefix">Typ <see cref="T:System.String" /> do dołączenia do klucza dla każdego błędu weryfikacji.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>Ten interfejs <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> rejestruje błędy elementu formatującego w udostępnionej klasie <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" />.</summary>
      <param name="modelState">Stan modelu.</param>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Rejestruje określony błąd modelu.</summary>
      <param name="errorPath">Ścieżka błędu.</param>
      <param name="exception">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Rejestruje określony błąd modelu.</summary>
      <param name="errorPath">Ścieżka błędu.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>Udostępnia dane dla zdarzenia <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" />.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="parentNode">Węzeł nadrzędny.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Pobiera lub ustawia kontekst dla akcji.</summary>
      <returns>Kontekst dla akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Pobiera lub ustawia element nadrzędny tego węzła.</summary>
      <returns>Element nadrzędny tego węzła.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>Udostępnia dane dla zdarzenia <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" />.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="parentNode">Węzeł nadrzędny.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Pobiera lub ustawia kontekst dla akcji.</summary>
      <returns>Kontekst dla akcji.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Pobiera lub ustawia element nadrzędny tego węzła.</summary>
      <returns>Element nadrzędny tego węzła.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Udostępnia kontener dla informacji o weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> przy użyciu metadanych modelu i klucza stanu.</summary>
      <param name="modelMetadata">Metadane modelu.</param>
      <param name="modelStateKey">Klucz stanu modelu.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> przy użyciu metadanych modelu, klucza stanu modelu i węzłów podrzędnych weryfikacji modelu.</summary>
      <param name="modelMetadata">Metadane modelu.</param>
      <param name="modelStateKey">Klucz stanu modelu.</param>
      <param name="childNodes">Węzły podrzędne modelu.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Pobiera lub ustawia węzły podrzędne.</summary>
      <returns>Węzły podrzędne.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Łączy bieżące wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> z określonym wystąpieniem klasy <see cref="T:System.Web.Http.Validation.ModelValidationNode" />.</summary>
      <param name="otherNode">Węzeł weryfikacji modelu, który ma być połączony z bieżącym wystąpieniem.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Pobiera lub ustawia metadane modelu.</summary>
      <returns>Metadane modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Pobiera lub ustawia klucz stanu modelu.</summary>
      <returns>Klucz stanu modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Pobiera lub ustawia wartość określającą, czy weryfikacja ma być pomijana.</summary>
      <returns>Wartość true, jeśli weryfikacja ma być pomijana, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Weryfikuje model przy użyciu określonego kontekstu wykonywania.</summary>
      <param name="actionContext">Kontekst akcji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Weryfikuje model przy użyciu określonego kontekstu wykonywania i węzła nadrzędnego.</summary>
      <param name="actionContext">Kontekst akcji.</param>
      <param name="parentNode">Węzeł nadrzędny.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Pobiera lub ustawia wartość określającą, czy wszystkie właściwości modelu mają być weryfikowane.</summary>
      <returns>Wartość true, jeśli wszystkie właściwości modelu mają być weryfikowane, lub wartość false, jeśli weryfikacja ma być pomijana.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Występuje po zweryfikowaniu modelu.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Występuje podczas weryfikacji modelu.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Reprezentuje wybór wymaganych elementów przez sprawdzenie, czy istnieją wymagane elementy ModelValidator skojarzone z elementem.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" />.</summary>
      <param name="metadataProvider">Dostawca metadanych.</param>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Wskazuje, czy element jest wymagany do sprawdzania poprawności.</summary>
      <returns>Wartość true, jeśli element jest wymagany w celu sprawdzenia poprawności; w przeciwnym razie — false.</returns>
      <param name="member">Element.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Udostępnia kontener dla wyniku weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Pobiera lub ustawia nazwę elementu członkowskiego.</summary>
      <returns>Nazwa elementu członkowskiego.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Pobiera lub ustawia komunikat o wyniku weryfikacji.</summary>
      <returns>Komunikat o wyniku weryfikacji.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Udostępnia klasę podstawową dla implementacji logiki weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidator" />.</summary>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Zwraca złożony moduł weryfikacji modelu dla danego modelu.</summary>
      <returns>Złożony moduł weryfikacji modelu dla danego modelu.</returns>
      <param name="validatorProviders">Wyliczenie dostawców modułów weryfikacji.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Pobiera wartość określającą, czy właściwość modelu jest wymagana.</summary>
      <returns>Wartość true, jeśli właściwość modelu jest wymagana, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Weryfikuje określony obiekt.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="container">Kontener.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Pobiera lub ustawia wyliczenie dostawców modułów weryfikacji.</summary>
      <returns>Wyliczenie dostawców modułów weryfikacji.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Udostępnia listę modułów weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Pobiera listę modułów weryfikacji skojarzonych z tym obiektem <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Lista modułów weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Udostępnia klasę abstrakcyjną dla klas implementujących dostawcę weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Pobiera deskryptor typu dla określonego typu.</summary>
      <returns>Deskryptor typu dla określonego typu.</returns>
      <param name="type">Typ dostawcy weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Pobiera moduły weryfikacji dla modelu przy użyciu metadanych i dostawców modułów weryfikacji.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Wyliczenie dostawców modułów weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera moduły weryfikacji dla modelu przy użyciu metadanych, dostawców modułów weryfikacji i listy atrybutów.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Wyliczenie dostawców modułów weryfikacji.</param>
      <param name="attributes">Lista atrybutów.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Reprezentuje metodę umożliwiającą utworzenie wystąpienia klasy <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>Reprezentuje implementację klasy <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />, która udostępnia moduły weryfikacji dla atrybutów pochodzących od klasy <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />. Udostępnia ona także moduł weryfikacji dla typów implementujących interfejs <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. W celu obsługi weryfikacji po stronie klienta można zarejestrować adaptery za pomocą metod statycznych w tej klasie lub umożliwić atrybutom weryfikacji implementację interfejsu <see cref="T:System.Web.Http.Validation.IClientValidatable" />. Logika obsługująca interfejs IClientValidatable jest zaimplementowana w klasie <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera moduły weryfikacji dla modelu przy użyciu określonych metadanych, dostawców modułów weryfikacji i atrybutów.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
      <param name="attributes">Atrybuty.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Rejestruje adapter w celu udostępnienia weryfikacji po stronie klienta.</summary>
      <param name="attributeType">Typ atrybutu weryfikacji.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje fabrykę adapterów dla dostawcy weryfikacji.</summary>
      <param name="attributeType">Typ atrybutu.</param>
      <param name="factory">Fabryka, która zostanie użyta do utworzenia obiektu <see cref="T:System.Web.Http.Validation.ModelValidator" /> dla określonego atrybutu.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Rejestruje adapter domyślny.</summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje domyślną fabrykę adapterów.</summary>
      <param name="factory">Fabryka, która zostanie użyta do utworzenia obiektu <see cref="T:System.Web.Http.Validation.ModelValidator" /> dla adaptera domyślnego.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Rejestruje domyślny typ adaptera dla obiektów implementujących interfejs <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Typ adaptera musi pochodzić od klasy <see cref="T:System.Web.Http.Validation.ModelValidator" /> i musi zawierać konstruktor publiczny, co wymaga dwóch parametrów typów <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> oraz <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje domyślną fabrykę adapterów dla obiektów implementujących interfejs <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Rejestruje typ adaptera dla danego obiektu modelType, który musi zaimplementować interfejs <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Typ adaptera musi pochodzić od klasy <see cref="T:System.Web.Http.Validation.ModelValidator" /> i musi zawierać konstruktor publiczny, co wymaga dwóch parametrów typów <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> oraz <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="modelType">Typ modelu.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje fabrykę adapterów dla danego obiektu modelType, który musi zaimplementować interfejs <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="modelType">Typ modelu.</param>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Udostępnia fabrykę dla modułów weryfikacji opartych na interfejsie <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Reprezentuje dostawcę modułu weryfikacji dla wymaganego modelu elementu danych.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera moduły weryfikacji dla modelu.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Program wyliczający dostawców modułów poprawności.</param>
      <param name="attributes">Lista atrybutów.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Implementacja klasy <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> udostępniającej moduły weryfikacji, które zgłaszają wyjątki, gdy model jest nieprawidłowy.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera listę modułów weryfikacji skojarzonych z tym obiektem <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
      <returns>Lista modułów weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
      <param name="attributes">Lista atrybutów.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Reprezentuje dostawcę dla wymaganego modułu weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" />.</summary>
      <param name="requiredMemberSelector">Wymagany selektor elementów.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Pobiera moduł weryfikacji dla modelu elementu.</summary>
      <returns>Moduł weryfikacji dla modelu elementu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="validatorProviders">Dostawcy modułów weryfikacji</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Udostępnia moduł weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />.</summary>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
      <param name="attribute">Atrybut weryfikacji modelu.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Pobiera lub ustawia atrybut weryfikacji dla modułu weryfikacji modelu.</summary>
      <returns>Atrybut weryfikacji dla modułu weryfikacji modelu.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Pobiera wartość określającą, czy weryfikacja modelu jest wymagana.</summary>
      <returns>Wartość true, jeśli weryfikacja modelu jest wymagana; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Weryfikuje model i zwraca błędy weryfikacji (o ile są).</summary>
      <returns>Lista komunikatów o błędach weryfikacji dla modelu lub pusta lista, jeśli nie wystąpiły żadne błędy.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="container">Kontener dla modelu.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>Obiekt <see cref="T:System.Web.Http.Validation.ModelValidator" /> reprezentujący błąd.Ten moduł weryfikacji będzie zawsze zgłaszał wyjątek niezależnie od faktycznej wartości modelu.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" />.</summary>
      <param name="validatorProviders">Lista dostawców modułów weryfikacji modelu.</param>
      <param name="errorMessage">Komunikat o błędzie dla wyjątku.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Weryfikuje określony obiekt.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="container">Kontener.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Reprezentuje klasę <see cref="T:System.Web.Http.Validation.ModelValidator" /> dla wymaganych elementów. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" />.</summary>
      <param name="validatorProviders">Dostawcy modułów weryfikacji.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Pobiera lub ustawia wartość instruującą mechanizm serializacji, że element musi być obecny podczas sprawdzania poprawności.</summary>
      <returns>Wartość true, jeśli element jest wymagany; w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Sprawdza poprawność obiektu.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="container">Kontener.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Udostępnia adapter obiektu, który można zweryfikować.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" />.</summary>
      <param name="validatorProviders">Dostawca weryfikacji.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Weryfikuje określony obiekt.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="container">Kontener.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Reprezentuje klasę podstawową dostawców wartości, których wartości pochodzą z kolekcji implementującej interfejs <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze z określonego elementu <paramref name="prefix" />.</summary>
      <returns>Klucze z określonego elementu <paramref name="prefix" />.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IUriValueProviderFactory">
      <summary>Reprezentuje interfejs implementowany przez dowolną fabrykę <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> obsługującą tworzenie dostawcy <see cref="T:System.Web.Http.ValueProviders.IValueProvider" /> w celu uzyskania dostępu do identyfikatora <see cref="T:System.Uri" /> przychodzącego komunikatu <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>Definiuje metody wymagane dla dostawcy wartości na platformie ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza lub wartość null, jeśli nie odnaleziono klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Ten atrybut służy do określania niestandardowej klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactory">Typ integratora modelu.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactories">Tablica typów integratorów modelu.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Pobiera fabryki dostawców wartości.</summary>
      <returns>Kolekcja fabryk dostawców wartości.</returns>
      <param name="configuration">Obiekt konfiguracji.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Pobiera typy obiektu zwróconego przez fabrykę dostawców wartości.</summary>
      <returns>Kolekcja typów.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia obiektów dostawcy wartości.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="actionContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Reprezentuje wynik powiązania wartości (na przykład z publikacji formularza lub ciągu zapytania) z właściwością argumentu metody akcji lub z samym argumentem.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
      <param name="rawValue">Wartość nieprzetworzona.</param>
      <param name="attemptedValue">Wartość poddana próbie.</param>
      <param name="culture">Kultura.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest konwertowana na ciąg w celu wyświetlenia.</summary>
      <returns>Nieprzetworzona wartość konwertowana na ciąg w celu wyświetlenia.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Konwertuje wartość hermetyzowaną przez ten wynik na określony typ.</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ docelowy.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Konwertuje wartość hermetyzowaną przez ten wynik na określony typ przy użyciu określonych informacji o kulturze..</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ docelowy.</param>
      <param name="culture">Kultura, która ma być użyta w konwersji.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Pobiera lub ustawia kulturę.</summary>
      <returns>Kultura.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest dostarczana przez dostawcę wartości.</summary>
      <returns>Nieprzetworzona wartość, która jest dostarczana przez dostawcę wartości.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Reprezentuje dostawcę wartości, którego wartości pochodzą z listy dostawców wartości implementującej interfejs <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
      <param name="list">Lista dostawców wartości.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera określony element <paramref name="prefix" />.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony element <paramref name="prefix" />; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze z określonego elementu <paramref name="prefix" />.</summary>
      <returns>Klucze z określonego elementu <paramref name="prefix" />.</returns>
      <param name="prefix">Element prefix, z którego są pobierane klucze.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości przy użyciu określonego elementu <paramref name="key" />.</summary>
      <returns>Obiekt wartości dla określonego elementu <paramref name="key" />.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Wstawia element do kolekcji w określonym indeksie.</summary>
      <param name="index">Liczony od elementu zerowego indeks, w którym powinien zostać wstawiony parametr <paramref name="item" />.</param>
      <param name="item">Obiekt do wstawienia.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Zamienia element w określonym indeksie.</summary>
      <param name="index">Liczony od zera indeks elementu do zamiany.</param>
      <param name="item">Nowa wartość elementu z określonym indeksem.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia list obiektów dostawcy wartości.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" />.</summary>
      <param name="factories">Kolekcja fabryk dostawców wartości.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Pobiera listę obiektów dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Lista obiektów dostawcy wartości dla określonego kontekstu kontrolera.</returns>
      <param name="actionContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Dostawca wartości dla par nazw i wartości.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo)"></member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />.</summary>
      <param name="values">Pary nazw i wartości dla dostawcy.</param>
      <param name="culture">Kultura używana dla par nazw i wartości.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />, używając delegata funkcji do udostępniania par nazw i wartości.</summary>
      <param name="valuesFactory">Delegat funkcji zwracający kolekcję par nazw i wartości.</param>
      <param name="culture">Kultura używana dla par nazw i wartości.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze z prefiksu.</summary>
      <returns>Klucze.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Reprezentuje dostawcę wartości dla ciągów zapytania zawartych w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" />.</summary>
      <param name="actionContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości ciągu zapytania.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Pobiera obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości ciągu zapytania.</returns>
      <param name="actionContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>Reprezentuje dostawcę wartości dla danych trasy zawartych w obiekcie implementującym interfejs IDictionary(Of TKey, TValue).</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" />.</summary>
      <param name="actionContext">Obiekt zawierający informacje o żądaniu HTTP.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia obiektów dostawcy wartości danych trasy.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Pobiera obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="actionContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
  </members>
</doc>