<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Reprezentuje atrybut określający, na które polecenia HTTP będzie odpowiadać metoda akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> przy użyciu listy poleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <param name="verbs">Polecenia HTTP, na które będzie odpowiadać metoda akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="verbs" /> ma wartość null lub ma zerową długość.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> przy użyciu poleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <param name="verbs">Polecenia HTTP, na które będzie odpowiadać metoda akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy określone informacje o metodzie są prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli informacje o metodzie są prawidłowe, a w przeciwnym razie — false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext " /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Pobiera lub ustawia listę poleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <returns>Lista poleceń HTTP, na które będzie odpowiadać metoda akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Udostępnia informacje o metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Pobiera nazwę metody akcji.</summary>
      <returns>Nazwa metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje metodę akcji przy użyciu określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe podanego typu.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Wartość true, aby użyć pamięci podręcznej; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Zwraca filtry skojarzone z tą metodą akcji.</summary>
      <returns>Filtry skojarzone z tą metodą akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Zwraca parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Zwraca selektory metody akcji.</summary>
      <returns>Selektory metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Określa, czy dla elementu członkowskiego zdefiniowane jest co najmniej jedno wystąpienie podanego typu atrybutu.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano typ <paramref name="attributeType" />; w przeciwnym razie wartość false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Pobiera unikatowy identyfikator dla deskryptora akcji przy użyciu inicjowania z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Udostępnia kontekst dla metody ActionExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor metody akcji.</param>
      <param name="canceled">Wartość true, jeśli akcja została anulowana.</param>
      <param name="exception">Obiekt wyjątku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Pobiera lub ustawia wartość określającą, czy anulowano obiekt <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <returns>Wartość true, jeśli anulowano kontekst, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Pobiera lub ustawia wyjątek, który wystąpił podczas wykonywania metody akcji, jeśli to nastąpiło.</summary>
      <returns>Wyjątek, który wystąpił podczas wykonywania metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek jest obsługiwany.</summary>
      <returns>Wartość true, jeśli wyjątek jest obsługiwany, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Udostępnia kontekst dla metody ActionExecuting klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutingContext" /> przy użyciu określonego kontekstu kontrolera, deskryptora akcji i parametrów metody akcji.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="actionParameters">Parametry metody akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="ActionParameters" /> lub <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Pobiera lub ustawia parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Reprezentuje klasę podstawową dla atrybutów filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana przez platformę ASP.NET MVC po wykonaniu metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przez platformę ASP.NET MVC przed wykonaniem metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana przez platformę ASP.NET MVC po wykonaniu wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przez platformę ASP.NET MVC przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Reprezentuje atrybut używany w celu wywierania wpływu na wybór metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy wybór metody akcji jest prawidłowy w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli wybór metody akcji jest prawidłowy w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Reprezentuje atrybut używany na potrzeby nazwy akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Określa, czy nazwa akcji jest prawidłowa w danym kontekście kontrolera.</summary>
      <returns>Wartość true, jeśli nazwa akcji jest prawidłowa w określonym kontekście kontrolera, a w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Pobiera lub ustawia nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Reprezentuje atrybut wpływający na wybór metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Określa, czy nazwa akcji jest prawidłowa w danym kontekście kontrolera.</summary>
      <returns>Wartość true, jeśli nazwa akcji jest prawidłowa w określonym kontekście kontrolera, a w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Reprezentuje wynik metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Reprezentuje delegata, który zawiera logikę wybierania metody akcji.</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Udostępnia klasę, która implementuje interfejs <see cref="T:System.Web.Mvc.IMetadataAware" /> w celu obsługiwania dodatkowych metadanych. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" />.</summary>
      <param name="name">Nazwa metadanych modelu.</param>
      <param name="value">Wartość metadanych modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>Pobiera nazwę dodatkowego atrybutu metadanych.</summary>
      <returns>Nazwa dodatkowego atrybutu metadanych.</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Udostępnia metadane na potrzeby procesu tworzenia metadanych modelu.</summary>
      <param name="metadata">Metadane.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>Pobiera typ dodatkowego atrybutu metadanych.</summary>
      <returns>Typ dodatkowego atrybutu metadanych.</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>Pobiera wartość dodatkowego atrybutu metadanych.</summary>
      <returns>Wartość dodatkowego atrybutu metadanych.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Zapewnia obsługę renderowania kodu HTML w scenariuszach interfejsu AJAX w widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper" /> przy użyciu określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <exception cref="T:System.ArgumentNullException">Przynajmniej jeden z parametrów ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper" /> przy użyciu określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
      <exception cref="T:System.ArgumentNullException">Przynajmniej jeden z parametrów ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Pobiera lub ustawia ścieżkę katalogu głównego dla lokalizacji, która ma być używana na potrzeby plików skryptów globalizacji.</summary>
      <returns>Lokalizacja folderu, w którym są przechowywane pliki skryptów globalizacji.Lokalizacją domyślną jest „~/Scripts/Globalization”.</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serializuje określony komunikat i zwraca wynikowy ciąg w formacie JSON.</summary>
      <returns>Zserializowany komunikat w postaci ciągu w formacie JSON.</returns>
      <param name="message">Komunikat do serializacji.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Pobiera kolekcję tras adresów URL dla aplikacji.</summary>
      <returns>Kolekcja tras dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>Pobiera obiekt ViewBag.</summary>
      <returns>Obiekt ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Pobiera informacje o kontekście dotyczące widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Pobiera słownik danych bieżącego widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Pobiera kontener danych widoku.</summary>
      <returns>Kontener danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Zapewnia obsługę wyświetlania kodu HTML w scenariuszach interfejsu AJAX w silnie typizowanym widoku.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper`1" /> przy użyciu określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper`1" /> przy użyciu określonego kontekstu widoku, kontenera danych widoku i kolekcji tras adresów URL.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>Pobiera obiekt ViewBag.</summary>
      <returns>Obiekt ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Pobiera silnie typizowaną wersję słownika danych widoku.</summary>
      <returns>Silnie typizowany słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Reprezentuje klasę stanowiącą rozszerzenie klasy <see cref="T:System.Web.HttpRequestBase" /> o możliwość określenia, czy żądanie HTTP jest żądaniem AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>Określa, czy podane żądanie HTTP jest żądaniem AJAX.</summary>
      <returns>Wartość true, jeśli określone żądanie HTTP jest żądaniem AJAX; w przeciwnym razie wartość false.</returns>
      <param name="request">Żądanie HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="request" /> ma wartość null (w języku Visual Basic: Nothing).</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>Reprezentuje atrybut umożliwiający oznaczenie kontrolerów i akcji w celu pominięcia klasy <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> podczas autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Umożliwia zawarcie w żądaniu kodu znaczników HTML podczas wiązania modelu przez pominięcie weryfikacji żądania właściwości.Zdecydowanie zaleca się, aby aplikacja jawnie sprawdziła wszystkie modele, w których wyłączono weryfikację żądań, w celu uniknięcia luk w skryptach.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AllowHtmlAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Ta metoda obsługuje infrastrukturę weryfikacji platformy ASP.NET MVC i nie jest przeznaczona do bezpośredniego używania w kodzie.</summary>
      <param name="metadata">Metadane modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaReference">
      <summary>Kontroluje interpretację nazwy kontrolera podczas konstruowania elementu <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseCurrent">
      <summary>Znajdź kontroler w bieżącym obszarze.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseRoot">
      <summary>Znajdź kontroler w obszarze głównym.</summary>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Umożliwia zarejestrowanie jednego lub kilku obszarów w aplikacji platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Pobiera nazwę obszaru do zarejestrowania.</summary>
      <returns>Nazwa obszaru do zarejestrowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Rejestruje wszystkie obszary w aplikacji platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Rejestruje wszystkie obszary w aplikacji platformy ASP.NET MVC, korzystając z informacji zdefiniowanych przez użytkownika.</summary>
      <param name="state">Obiekt zawierający informacje zdefiniowane przez użytkownika do przekazania do obszaru.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Rejestruje obszar w aplikacji platformy ASP.NET MVC, korzystając z informacji o kontekście określonego obszaru.</summary>
      <param name="context">Hermetyzuje informacje wymagane do zarejestrowania obszaru.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Hermetyzuje informacje wymagane do zarejestrowania obszaru w aplikacji platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> przy użyciu określonej nazwy obszaru i kolekcji tras.</summary>
      <param name="areaName">Nazwa obszaru do zarejestrowania.</param>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> przy użyciu określonej nazwy obszaru, kolekcji tras i danych zdefiniowanych przez użytkownika.</summary>
      <param name="areaName">Nazwa obszaru do zarejestrowania.</param>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="state">Obiekt zawierający informacje zdefiniowane przez użytkownika do przekazania do obszaru.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Pobiera nazwę obszaru do zarejestrowania.</summary>
      <returns>Nazwa obszaru do zarejestrowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> przy użyciu określonych wartości domyślnych trasy.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> przy użyciu określonych wartości domyślnych trasy i ograniczenia.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających prawidłowe wartości parametru URL.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> przy użyciu określonych wartości domyślnych trasy, ograniczeń i przestrzeni nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających prawidłowe wartości parametru URL.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> przy użyciu określonych wartości domyślnych trasy i przestrzeni nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> przy użyciu określonych przestrzeni nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Pobiera przestrzenie nazw dla aplikacji.</summary>
      <returns>Wyliczalny zestaw przestrzeni nazw dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Pobiera kolekcję zdefiniowanych tras dla aplikacji.</summary>
      <returns>Kolekcja zdefiniowanych tras dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Pobiera obiekt zawierający informacje zdefiniowane przez użytkownika do przekazania do obszaru.</summary>
      <returns>Obiekt zawierający informacje zdefiniowane przez użytkownika do przekazania do obszaru.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Udostępnia klasę abstrakcyjną do implementowania dostawcy metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Metoda wywoływana z konstruktorów w klasie pochodnej w celu zainicjowania klasy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>W przypadku przesłonięcia w klasie pochodnej tworzy metadane modelu dla właściwości.</summary>
      <returns>Metadane modelu dla danej właściwości.</returns>
      <param name="attributes">Zestaw atrybutów.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera listę atrybutów.</summary>
      <returns>Lista atrybutów.</returns>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyDescriptor">Deskryptor właściwości.</param>
      <param name="attributes">Kontener atrybutów.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Zwraca listę właściwości modelu.</summary>
      <returns>Lista właściwości modelu.</returns>
      <param name="container">Kontener modelu.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Zwraca metadane dla określonej właściwości przy użyciu typu kontenera i deskryptora właściwości.</summary>
      <returns>Metadane dla określonej właściwości przy danym typie kontenera i deskryptorze właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyDescriptor">Deskryptor właściwości</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Zwraca metadane dla określonej właściwości przy użyciu typu kontenera i nazwy właściwości.</summary>
      <returns>Metadane dla określonej właściwości przy danym typie kontenera i nazwie właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Zwraca metadane dla określonej właściwości przy użyciu typu modelu.</summary>
      <returns>Metadane dla określonej właściwości przy danym typie modelu.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Zwraca deskryptor typu z określonego typu.</summary>
      <returns>Deskryptor typu.</returns>
      <param name="type">Typ.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Udostępnia klasę abstrakcyjną dla klas implementujących dostawcę weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Metoda wywoływana z konstruktorów w klasach pochodnych w celu zainicjowania klasy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Pobiera deskryptor typu dla określonego typu.</summary>
      <returns>Deskryptor typu dla określonego typu.</returns>
      <param name="type">Typ dostawcy weryfikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera moduły weryfikacji dla modelu przy użyciu metadanych i kontekstu kontrolera.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera moduły weryfikacji dla modelu przy użyciu metadanych, kontekstu kontrolera i listy atrybutów.</summary>
      <returns>Moduły weryfikacji dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attributes">Lista atrybutów.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Zapewnia zgodność programu ASP.NET MVC 3 z wcześniejszymi wersjami.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Reprezentuje atrybut używany do ustawiania wartości limitu czasu (w milisekundach) dla metody asynchronicznej.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">Wartość limitu czasu w milisekundach.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Pobiera wartość limitu czasu w milisekundach.</summary>
      <returns>Wartość limitu czasu w milisekundach.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przez środowisko ASP.NET przed wykonaniem asynchronicznej metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Hermetyzuje informacje wymagane do używania atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" /> przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst, w którym jest wykonywany wynik.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" /> przy użyciu określonego kontekstu kontrolera i deskryptora akcji.</summary>
      <param name="controllerContext">Kontekst, w którym jest wykonywany wynik.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="actionDescriptor">Obiekt udostępniający informacje na temat metody akcji, takie jak jej nazwę, kontroler, parametry, atrybuty i filtry.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Udostępnia informacje na temat metody akcji oznaczonej za pomocą atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, takie jak jej nazwę, kontroler, parametry, atrybuty i filtry.</summary>
      <returns>Deskryptor akcji metody akcji oznaczonej za pomocą atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Określa, że dostęp do kontrolera lub metody akcji jest ograniczony do użytkowników, którzy spełniają wymagania autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>W przypadku przesłonięcia udostępnia punkt wejścia dla sprawdzeń autoryzacji niestandardowej.</summary>
      <returns>Wartość true, jeśli użytkownik jest autoryzowany, w przeciwnym razie wartość false.</returns>
      <param name="httpContext">Kontekst HTTP, który hermetyzuje wszystkie specyficzne dla protokołu HTTP informacje o indywidualnym żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Przetwarza żądania HTTP, których autoryzacja nie powiodła się.</summary>
      <param name="filterContext">Hermetyzuje informacje w celu użycia klasy <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.Obiekt <paramref name="filterContext" /> zawiera kontroler, kontekst HTTP, kontekst żądania, wynik akcji i dane trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana, gdy proces żąda autoryzacji.</summary>
      <param name="filterContext">Kontekst filtru, który hermetyzuje informacje w celu użycia atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Metoda wywoływana, gdy moduł buforowania żąda autoryzacji.</summary>
      <returns>Odwołanie do stanu weryfikacji.</returns>
      <param name="httpContext">Kontekst HTTP, który hermetyzuje wszystkie specyficzne dla protokołu HTTP informacje o indywidualnym żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Pobiera lub określa role użytkowników, którzy mają autoryzację na dostęp do kontrolera lub metody akcji.</summary>
      <returns>Role użytkowników, którzy mają autoryzację na dostęp do kontrolera lub metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator dla tego atrybutu.</summary>
      <returns>Unikatowy identyfikator dla tego atrybutu.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Pobiera lub określa użytkowników, którzy mają autoryzację na dostęp do kontrolera lub metody akcji.</summary>
      <returns>Użytkownicy, którzy mają autoryzację na dostęp do kontrolera lub metody akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Reprezentuje atrybut, który jest używany do udostępnienia szczegółów dotyczących tego, jak powinno przebiegać wiązanie modelu z parametrem.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Pobiera lub ustawia listę rozdzielanych przecinkami nazw właściwości, dla których wiązanie jest niedozwolone.</summary>
      <returns>Lista wykluczania.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Pobiera lub ustawia listę rozdzielanych przecinkami nazw właściwości, dla których wiązanie jest dozwolone.</summary>
      <returns>Lista dołączania.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Określa, czy określona właściwość jest dozwolona.</summary>
      <returns>Wartość true, jeśli określona właściwość jest dopuszczalna, w przeciwnym razie wartość false.</returns>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Pobiera lub ustawia prefiks, który zostanie użyty podczas renderowania kodu znaczników dla wiązania z argumentem akcji lub właściwością modelu.</summary>
      <returns>Prefiks do użycia.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Reprezentuje klasę bazową widoków kompilowanych przez klasę BuildManager przed renderowaniem przez aparat widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> przy użyciu określonego kontekstu kontrolera i ścieżki widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> przy użyciu określonego kontekstu kontrolera, ścieżki widoku i aktywatora strony widoku.</summary>
      <param name="controllerContext">Informacje o kontekście dla bieżącego kontrolera.Te informacje uwzględniają między innymi kontekst HTTP, kontekst żądania, dane trasy i kontekst nadrzędnego widoku akcji.</param>
      <param name="viewPath">Ścieżka do widoku, który będzie renderowany.</param>
      <param name="viewPageActivator">Obiekt odpowiedzialny za dynamiczne budowanie strony widoku w czasie wykonywania. </param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewPath" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderuje określony kontekst widoku przy użyciu określonego obiektu zapisującego.</summary>
      <param name="viewContext">Informacje dotyczące renderowania widoku, takie jak dane widoku, dane tymczasowe i kontekst formularza.</param>
      <param name="writer">Obiekt zapisujący.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> ma wartość null.</exception>
      <exception cref="T:SInvalidOperationException">Nie można utworzyć wystąpienia typu widoku.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>W przypadku przesłonięcia w klasie pochodnej renderuje określony kontekst widoku przy użyciu określonego obiektu zapisującego i wystąpienia obiektu.</summary>
      <param name="viewContext">Informacje dotyczące renderowania widoku, takie jak dane widoku, dane tymczasowe i kontekst formularza.</param>
      <param name="writer">Obiekt zapisujący.</param>
      <param name="instance">Obiekt zawierający informacje dodatkowe, które mogą być używane w widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Pobiera lub ustawia ścieżkę widoku.</summary>
      <returns>Ścieżka widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Udostępnia klasę podstawową dla aparatów widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> przy użyciu określonego aktywatora strony widoku.</summary>
      <param name="viewPageActivator">Aktywator strony widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Pobiera wartość wskazującą, czy w określonym wirtualnym systemie plików (ścieżce) istnieje plik.</summary>
      <returns>Wartość true, jeśli plik istnieje w wirtualnym systemie plików, w przeciwnym razie — false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.IsPrecompiledNonUpdateableSite"></member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Pobiera aktywatora strony widoku.</summary>
      <returns>Aktywator strony widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>‏Mapuje żądanie przeglądarki na tablicę bajtów.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Powiązany obiekt danych.Narzędzia<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>Udostępnia klasę abstrakcyjną do implementowania dostawcy buforowanych metadanych.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>Pobiera zasady dotyczące elementu w pamięci podręcznej.</summary>
      <returns>Zasady dotyczące elementu w pamięci podręcznej.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>Pobiera prefiks klucza pamięci podręcznej.</summary>
      <returns>Prefiks klucza pamięci podręcznej.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>W przypadku przesłonięcia w klasie pochodnej tworzy buforowane metadane modelu dla właściwości.</summary>
      <returns>Buforowane metadane modelu dla właściwości.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Tworzy metadane prototypu, stosując prototyp i dostęp do modelu w celu uzyskania ostatecznych metadanych.</summary>
      <returns>Metadane prototypu.</returns>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Tworzy prototyp metadanych.</summary>
      <returns>Prototyp metadanych.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Pobiera metadane dla właściwości.</summary>
      <returns>Metadane dla właściwości.</returns>
      <param name="container">Kontener.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Zwraca metadane dla określonej właściwości.</summary>
      <returns>Metadane dla określonej właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyDescriptor">Deskryptor właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Zwraca metadane dla określonej właściwości.</summary>
      <returns>Metadane dla określonej właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Zwraca buforowane metadane dla określonej właściwości przy użyciu typu modelu.</summary>
      <returns>Buforowane metadane dla określonej właściwości przy danym typie modelu.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ kontenera.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>Pobiera pamięć podręczną prototypów.</summary>
      <returns>Pamięć podręczna prototypów.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>Udostępnia kontener służący do zapisywania atrybutów <see cref="N:System.ComponentModel.DataAnnotations" /> w pamięci podręcznej.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Atrybuty.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>Pobiera typ danych.</summary>
      <returns>Typ danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Pobiera informacje o wyświetlaniu.</summary>
      <returns>Informacje o wyświetlaniu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>Pobiera kolumnę wyświetlaną.</summary>
      <returns>Kolumna wyświetlana.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Pobiera format wyświetlania.</summary>
      <returns>Format wyświetlania.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>Pobiera nazwę wyświetlaną.</summary>
      <returns>Nazwa wyświetlana.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Wskazuje, czy pole danych można edytować.</summary>
      <returns>Wartość true, jeśli pole można edytować; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>Pobiera ukryty element wejściowy.</summary>
      <returns>Ukryty element wejściowy.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Wskazuje, czy pole danych jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli pole jest tylko do odczytu; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>Wskazuje, czy pole danych jest wymagane.</summary>
      <returns>Wartość true, jeśli pole jest wymagane; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>Wskazuje, czy pole danych jest polem szkieletowym.</summary>
      <returns>Wartość true, jeśli pole jest polem szkieletowym; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>Pobiera wskazówkę interfejsu użytkownika.</summary>
      <returns>Wskazówka interfejsu użytkownika.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>Udostępnia kontener służący do zapisywania klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" /> w pamięci podręcznej.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> przy użyciu prototypu i metody dostępu modelu.</summary>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> przy użyciu dostawcy, typu kontenera, typu modelu, nazwy właściwości i atrybutów.</summary>
      <param name="provider">Dostawca.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="attributes">Atrybuty.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Pobiera wartość wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość Nothing.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość wskazująca, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość Nothing. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>Pobiera metainformacje o typie danych.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Metainformacje o typie danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Pobiera opis modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Opis modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>Pobiera ciąg formatu wyświetlania dla modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Ciąg formatu wyświetlania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>Pobiera nazwę wyświetlaną modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Nazwa wyświetlana modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>Pobiera ciąg formatu edytowania dla modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Ciąg formatu edytowania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>Pobiera wartość wskazującą, czy model wykorzystuje inny niż domyślny format edytowania.</summary>
      <returns>Wartość wskazująca, czy stosowany jest inny niż domyślne format edytowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>Pobiera wartość wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.Pobiera wartość wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość wskazująca, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Pobiera wartość wskazującą, czy model jest tylko do odczytu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość wskazująca, czy model jest tylko do odczytu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>Pobiera wartość wskazującą, czy model jest wymagany.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość wskazująca, czy model jest wymagany.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>Pobiera ciąg wyświetlany w przypadku wartości null.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Ciąg wyświetlany w przypadku wartości null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>Pobiera wartość, która reprezentuje kolejność bieżących metadanych.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość, która reprezentuje kolejność bieżących metadanych.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>Pobiera krótką nazwę wyświetlaną.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Krótka nazwa wyświetlana.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>Pobiera wartość wskazującą, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość wskazująca, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model powinien być wyświetlany w widokach edytowalnych.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Zwraca wartość <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>Pobiera prosty ciąg wyświetlania dla modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Prosty ciąg wyświetlania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>Pobiera wskazówkę z sugestią, którego szablonu użyć dla tego modelu.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wskazówka z sugestią, którego szablonu użyć dla tego modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>Pobiera wartość, której można użyć jako znaku wodnego.Jeśli wartość znajduje się w pamięci podręcznej, jest zwracana wartość z pamięci podręcznej. W przeciwnym przypadku wartość jest pobierana z metadanych modelu i zapisywana w pamięci podręcznej.</summary>
      <returns>Wartość, której można użyć jako znaku wodnego.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>Implementuje domyślnego dostawcę buforowanych metadanych modelu dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Zwraca kontener rzeczywistych wystąpień klasy buforowanych metadanych opartych na prototypie i metodzie dostępu modelu.</summary>
      <returns>Kontener rzeczywistych wystąpień klasy buforowanych metadanych.</returns>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Zwraca wystąpienia prototypu kontenera klasy metadanych.</summary>
      <returns>Wystąpienia prototypu kontenera klasy metadanych.</returns>
      <param name="attributes">Typ atrybutów.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>Udostępnia kontener dla buforowanych metadanych.</summary>
      <typeparam name="TPrototypeCache">Typ kontenera.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Konstruktor do tworzenia rzeczywistych wystąpień klasy metadanych na podstawie prototypu.</summary>
      <param name="provider">Dostawca.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="prototypeCache">Prototyp.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Konstruktor do tworzenia wystąpień prototypu klasy metadanych.</summary>
      <param name="prototype">Prototyp.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia metainformacje o typie danych.</summary>
      <returns>Metainformacje o typie danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia ciąg formatu wyświetlania dla modelu.</summary>
      <returns>Ciąg formatu wyświetlania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia nazwę wyświetlaną modelu.</summary>
      <returns>Nazwa wyświetlana modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia ciąg formatu edytowania dla modelu.</summary>
      <returns>Ciąg formatu edytowania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.</summary>
      <returns>Wartość wskazująca, czy stosowany jest inny niż domyślny format edytowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy model jest przeznaczony tylko do odczytu.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy model jest przeznaczony tylko do odczytu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy model jest wymagany.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy model jest wymagany.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia ciąg w pamięci podręcznej wyświetlany w przypadku wartości null.</summary>
      <returns>Ciąg w pamięci podręcznej wyświetlany w przypadku wartości null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej, która reprezentuje porządek bieżących metadanych.</summary>
      <returns>Wartość w pamięci podręcznej, która reprezentuje porządek bieżących metadanych.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia krótką nazwę wyświetlaną.</summary>
      <returns>Krótka nazwa wyświetlana.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy model powinien być wyświetlany w widokach edytowalnych.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy model powinien być wyświetlany w widokach edytowalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia prosty ciąg wyświetlania w pamięci podręcznej dla modelu.</summary>
      <returns>Prosty ciąg wyświetlania w pamięci podręcznej dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wskazówkę w pamięci podręcznej z sugestią, którego szablonu użyć dla tego modelu.</summary>
      <returns>Wskazówka w pamięci podręcznej z sugestią, którego szablonu użyć dla tego modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>Ta metoda jest chroniona i nie można jej wywołać bezpośrednio.Tę metodę zaprojektowano do zastąpienia w klasach pochodnych, takich jak <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Pobiera lub ustawia wartość w pamięci podręcznej, której można użyć jako znaku wodnego.</summary>
      <returns>Wartość w pamięci podręcznej, której można użyć jako znaku wodnego.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Pobiera lub ustawia wartość w pamięci podręcznej wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null.</summary>
      <returns>Wartość w pamięci podręcznej wskazująca, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>Pobiera lub ustawia metainformacje o typie danych.</summary>
      <returns>Metainformacje o typie danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>Pobiera lub ustawia ciąg formatu wyświetlania dla modelu.</summary>
      <returns>Ciąg formatu wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>Pobiera lub ustawia nazwę wyświetlaną modelu.</summary>
      <returns>Nazwa wyświetlana modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>Pobiera lub ustawia ciąg formatu edytowania dla modelu.</summary>
      <returns>Ciąg formatu edytowania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>Pobiera lub ustawia prosty ciąg wyświetlania dla modelu.</summary>
      <returns>Prosty ciąg wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</summary>
      <returns>Wartość wskazująca, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>Wartość wskazująca, czy model jest tylko do odczytu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest wymagany.</summary>
      <returns>Wartość wskazująca, czy model jest wymagany.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>Pobiera lub ustawia ciąg wyświetlany w przypadku wartości null.</summary>
      <returns>Ciąg wyświetlany w przypadku wartości null.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>Pobiera lub ustawia wartość, która reprezentuje porządek bieżących metadanych.</summary>
      <returns>Wartość porządku bieżących metadanych.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>Pobiera lub ustawia pamięć podręczną prototypów.</summary>
      <returns>Pamięć podręczna prototypów.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>Pobiera lub ustawia krótką nazwę wyświetlaną.</summary>
      <returns>Krótka nazwa wyświetlana.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>Pobiera lub ustawia wartość wskazującą, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.</summary>
      <returns>Wartość true, jeśli model powinien być wyświetlany w widokach tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model powinien być wyświetlany w widokach edytowalnych.</summary>
      <returns>Wartość true, jeśli model powinien być wyświetlany w widokach edytowalnych, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>Pobiera lub ustawia prosty ciąg wyświetlania dla modelu.</summary>
      <returns>Prosty ciąg wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>Pobiera lub ustawia wskazówkę z sugestią, którego szablonu użyć dla tego modelu.</summary>
      <returns>Wskazówka z sugestią, którego szablonu użyć dla tego modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>Pobiera lub ustawia wartość, której można użyć jako znaku wodnego.</summary>
      <returns>Wartość, której można użyć jako znaku wodnego.</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>Udostępnia mechanizm propagujący powiadomienie o konieczności anulowania operacji integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca domyślny token anulowania.</summary>
      <returns>Domyślny token anulowania.Narzędzia<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Reprezentuje atrybut używany do określenia, że metoda akcji powinna być wywoływana wyłącznie jako akcja podrzędna.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wywoływane, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Obiekt, który hermetyzuje informacje wymagane do autoryzowania dostępu do akcji podrzędnej.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Reprezentuje dostawcę wartości akcji podrzędnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia obiektów dostawcy wartości akcji podrzędnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Zwraca moduły weryfikacji modelu typu danych klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca moduły weryfikacji modelu typu danych klienta.</summary>
      <returns>Moduły weryfikacji modelu typu danych klienta.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>Pobiera klucz klasy zasobu.</summary>
      <returns>Klucz klasy zasobu.</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Udostępnia atrybut umożliwiający porównanie dwóch właściwości modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Właściwość do porównania z bieżącą właściwością.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Stosuje formatowanie do komunikatu o błędzie na podstawie pola danych, w którym wystąpił błąd porównania.</summary>
      <returns>Sformatowany komunikat o błędzie.</returns>
      <param name="name">Nazwa pola, które spowodowało niepowodzenie weryfikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatuje właściwość dla weryfikacji klienta przez poprzedzenie jej znakiem gwiazdki (*) i kropką.</summary>
      <returns>Ciąg „*.” jest dołączany na początku właściwości.</returns>
      <param name="property">Właściwość.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę reguł weryfikacji klienta dotyczących porównywania wartości dla właściwości, korzystając z określonych metadanych modelu i kontekstu kontrolera.</summary>
      <returns>Lista reguł weryfikacji klienta dotyczących porównywania wartości.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Określa, czy dany obiekt jest taki sam, jak porównywany obiekt.</summary>
      <returns>Wartość null, jeśli wartość porównywanej właściwości jest równa parametrowi wartości, a w przeciwnym razie wynik weryfikacji zawierający komunikat o błędzie informujący o tym, że porównanie nie powiodło się.</returns>
      <param name="value">Wartość obiektu do porównania.</param>
      <param name="validationContext">Kontekst weryfikacji.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Pobiera właściwość do porównania z bieżącą właściwością.</summary>
      <returns>Właściwość do porównania z bieżącą właściwością.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>Pobiera inne właściwości nazwy wyświetlanej.</summary>
      <returns>Inne właściwości nazwy wyświetlanej.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Reprezentuje typ zawartości zdefiniowany przez użytkownika będący wynikiem metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Pobiera lub ustawia zawartość.</summary>
      <returns>Zawartość.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Pobiera lub ustawia kodowanie zawartości.</summary>
      <returns>Kodowanie zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Pobiera lub ustawia typ zawartości.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Udostępnia metody odpowiedzi na żądania HTTP kierowane do witryny sieci Web zbudowanej na platformie ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Pobiera element wywołujący akcji dla kontrolera.</summary>
      <returns>Element wywołujący akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>Udostępnia operacje asynchroniczne.</summary>
      <returns>Zwraca wartość <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Rozpoczyna wykonanie określonego kontekstu żądania.</summary>
      <returns>Zwraca wystąpienie klasy IAsyncController.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczne wywołanie zwrotne.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Rozpoczyna wywołanie akcji w bieżącym kontekście kontrolera.</summary>
      <returns>Zwraca wystąpienie klasy IAsyncController.</returns>
      <param name="callback">Wywołanie zwrotne.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Pobiera lub ustawia obiekt wiążący.</summary>
      <returns>Obiekt wiążący.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Tworzy obiekt wyniku zawartości przy użyciu ciągu.</summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość do zapisania w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Tworzy obiekt wyniku zawartości przy użyciu ciągu i typu zawartości.</summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość do zapisania w odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Tworzy obiekt wyniku zawartości przy użyciu ciągu, typu zawartości i kodowania zawartości.</summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość do zapisania w odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Tworzy element wywołujący.</summary>
      <returns>Element wywołujący akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Tworzy dostawcę danych tymczasowych.</summary>
      <returns>Dostawca danych tymczasowych.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>Pobiera informacje o tym, czy wyłączyć asynchroniczną obsługę kontrolera.</summary>
      <returns>Wartość true, aby wyłączyć asynchroniczną obsługę dla kontrolera, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane, a opcjonalnie także zarządzane.</summary>
      <param name="disposing">Wartość true, aby zwolnić zasoby zarządzane i niezarządzane, a wartość false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>Kończy wywołanie akcji w bieżącym kontekście kontrolera.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>Kończy wykonywanie akcji.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Wywołuje akcję w bieżącym kontekście kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Tworzy obiekt FileContentResult przy użyciu zawartości pliku i typu pliku.</summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileContents">Zawartość binarna do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Tworzy obiekt FileContentResult przy użyciu zawartości pliku, typu pliku i nazwy pliku docelowego.</summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileContents">Zawartość binarna do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku używana w oknie dialogowym pobierania pliku wyświetlanym w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Tworzy obiekt FileStreamResult przy użyciu obiektu strumienia i typu zawartości.</summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileStream">Strumień do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Tworzy obiekt FileStreamResult przy użyciu obiektu strumienia, typu zawartości i nazwy pliku docelowego.</summary>
      <returns>Obiekt wyniku strumienia pliku.</returns>
      <param name="fileStream">Strumień do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku używana w oknie dialogowym pobierania pliku wyświetlanym w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Tworzy obiekt FilePathResult przy użyciu nazwy pliku i typu zawartości.</summary>
      <returns>Obiekt wyniku strumienia pliku.</returns>
      <param name="fileName">Ścieżka pliku do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Tworzy obiekt FilePathResult przy użyciu nazwy pliku, typu zawartości i nazwy pliku do pobrania.</summary>
      <returns>Obiekt wyniku strumienia pliku.</returns>
      <param name="fileName">Ścieżka pliku do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku używana w oknie dialogowym pobierania pliku wyświetlanym w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Metoda wywoływana, gdy żądanie pasuje do tego kontrolera, ale w kontrolerze nie znaleziono metody z podaną nazwą akcji.</summary>
      <param name="actionName">Nazwa akcji, którą próbowano wykonać.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Pobiera informacje właściwe dla protokołu HTTP dotyczące indywidualnego żądania HTTP.</summary>
      <returns>Kontekst HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicjuje dane, które mogą być niedostępne podczas wywołania konstruktora.</summary>
      <param name="requestContext">Kontekst HTTP i dane trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.JavaScriptResult" />, który zapisuje skrypt do odpowiedzi.</returns>
      <param name="script">Kod JavaScript do uruchomienia na kliencie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wynikowy JSON, który serializuje określony obiekt do formatu JSON.Podczas wykonywania obiekt wyniku przygotowany przez tę metodę jest zapisywany do odpowiedzi przez platformę ASP.NET MVC.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wynikowy JSON, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wynikowy JSON, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając typu zawartości, kodowania zawartości i zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
      <param name="behavior">Zachowanie żądania JSON.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając określonego typu zawartości i zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="behavior">Zachowanie żądania JSON.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt JsonResult, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając określonego zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Graf obiektów JavaScript, który ma zostać zserializowany.</param>
      <param name="behavior">Zachowanie żądania JSON.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Pobiera obiekt słownika stanów modelu, który zawiera stan modelu i stan sprawdzenia poprawności powiązania modelu.</summary>
      <returns>Słownik stanów modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana po wywołaniu metody akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Wywoływane przed wywołaniem metody akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Metoda wywoływana podczas autoryzacji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Metoda wywoływana podczas żądania autoryzacji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana podczas autoryzacji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana w przypadku wystąpienia w akcji nieobsługiwanego wyjątku.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu wyniku akcji zwróconego przez metodę akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i wyniku akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji zwróconego przez metodę akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i wyniku akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy.</summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy przy użyciu określonego modelu.</summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="model">Model renderowany przez widok częściowy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy przy użyciu określonej nazwy widoku.</summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="viewName">Nazwa widoku, który jest renderowany do odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy przy użyciu określonej nazwy widoku i modelu.</summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="viewName">Nazwa widoku, który jest renderowany do odpowiedzi.</param>
      <param name="model">Model renderowany przez widok częściowy.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>Pobiera profil kontekstu HTTP.</summary>
      <returns>Profil kontekstu HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.RedirectResult" />, który przekierowuje pod określony adres URL.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="url">Adres URL, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością Permanent o wartości true.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością Permanent o wartości true.</returns>
      <param name="url">Adres URL, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i nazwy kontrolera.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji, nazwy kontrolera i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji, nazwy kontrolera i wartości trasy.</returns>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji oraz wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji oraz wartości trasy.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji i nazwy kontrolera.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji i nazwy kontrolera.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji, nazwy kontrolera i wartości trasy.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji, nazwy kontrolera i wartości trasy.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji oraz wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością parametru o wartości true, używające określonej nazwy akcji oraz wartości trasy.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Przekierowuje do określonej trasy, używając określonych wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej trasy, używając słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonych wartości trasy.</summary>
      <returns>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true.</returns>
      <param name="routeValues">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonej nazwy trasy.</summary>
      <returns>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonej nazwy trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonej nazwy trasy oraz wartości trasy.</summary>
      <returns>Wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonej nazwy trasy oraz wartości trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonej nazwy trasy oraz wartości trasy.</summary>
      <returns>Wystąpienie klasy RedirectResult z właściwością parametru o wartości true.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonych wartości trasy.</summary>
      <returns>Wystąpienie klasy RedirectResult z właściwością parametru o wartości true, używające określonych wartości trasy.</returns>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Pobiera obiekt HttpRequestBase dla bieżącego żądania HTTP.</summary>
      <returns>Obiekt żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Resolver">
      <summary>Reprezentuje zastępowalny mechanizm rozpoznawania zależności zapewniający usługi.Domyślnie korzysta z elementu <see cref="P:System.Web.Mvc.DependencyResolver.CurrentCache" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Pobiera obiekt HttpResponseBase dla bieżącej odpowiedzi HTTP.</summary>
      <returns>Obiekt HttpResponseBase dla bieżącej odpowiedzi HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Pobiera dane trasy dla bieżącego żądania.</summary>
      <returns>Dane trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Pobiera obiekt HttpServerUtilityBase, który udostępnia metody używane podczas przetwarzania żądania sieci Web.</summary>
      <returns>Obiekt serwera HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Pobiera obiekt HttpSessionStateBase dla bieżącego żądania HTTP.</summary>
      <returns>Obiekt stanu sesji HTTP dla bieżącego żądania HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Ta metoda wywołuje metodę BeginExecute.</summary>
      <returns>Wyniki operacji.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczne wywołanie zwrotne.</param>
      <param name="state">Stan obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Ta metoda wywołuje metodę EndExecute.</summary>
      <param name="asyncResult">Asynchroniczny wyniki operacji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Ta metoda wywołuje metodę OnAuthentication.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Ta metoda wywołuje metodę OnAuthenticationChallenge.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Ta metoda wywołuje metodę OnActionExecuted.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Ta metoda wywołuje metodę OnActionExecuting.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Ta metoda wywołuje metodę OnAuthorization.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Ta metoda wywołuje metodę OnException.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Ta metoda wywołuje metodę OnResultExecuted.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Ta metoda wywołuje metodę OnResultExecuting.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Pobiera obiekt dostawcy danych tymczasowych używany do przechowywania danych dla następnego żądania.</summary>
      <returns>Dostawca danych tymczasowych.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość ValueProvider ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i prefiksu.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość ValueProvider ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu i właściwości włączonych.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość ValueProvider ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu, listy właściwości do wykluczenia i listy właściwości do włączenia.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="excludeProperties">Lista właściwości, które mają zostać jawnie wykluczone z aktualizacji.Te właściwości zostaną wykluczone nawet wtedy, gdy znajdują się na liście parametrów includeProperties.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość ValueProvider ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu, listy właściwości do wykluczenia i listy właściwości do włączenia.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="excludeProperties">Lista właściwości, które mają zostać jawnie wykluczone z aktualizacji.Te właściwości zostaną wykluczone nawet wtedy, gdy znajdują się na liście parametrów includeProperties.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i właściwości włączonych.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości i listy właściwości do włączenia.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i właściwości włączonych.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości i listy właściwości do włączenia.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości.</summary>
      <returns>Wartość true, jeśli aktualizacja powiodła się; w przeciwnym razie wartość false.</returns>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu.</summary>
      <returns>Wartość true, jeśli sprawdzenie poprawności modelu powiodło się; w przeciwnym razie wartośćfalse.</returns>
      <param name="model">Model do sprawdzenia poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu z użyciem prefiksu HTML.</summary>
      <returns>Wartość true, jeśli sprawdzenie poprawności modelu powiodło się; w przeciwnym razie wartośćfalse.</returns>
      <param name="model">Model do sprawdzenia poprawności.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i prefiksu.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu i właściwości włączonych.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu, listy właściwości do wykluczenia i listy właściwości do włączenia.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="excludeProperties">Lista właściwości, które mają zostać jawnie wykluczone z aktualizacji.Te właściwości zostaną wykluczone nawet wtedy, gdy znajdują się na liście includeProperties.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu, listy właściwości do wykluczenia i listy właściwości do włączenia.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="excludeProperties">Lista właściwości, które mają zostać jawnie wykluczone z aktualizacji.Te właściwości zostaną wykluczone nawet wtedy, gdy znajdują się na liście parametrów includeProperties.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i listy właściwości do włączenia.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i listy właściwości do włączenia.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="prefix">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości obiektu kontrolera.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i listy właściwości do włączenia.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="includeProperties">Lista właściwości modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości.</summary>
      <param name="model">Wystąpienie modelu do aktualizacji.</param>
      <param name="valueProvider">Słownik wartości używany do aktualizacji modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Pobiera obiekt pomocnika adresu URL, który służy do generowania adresów URL przy użyciu routingu.</summary>
      <returns>Obiekt pomocnika adresu URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Pobiera informacje o zabezpieczeniach użytkownika dla bieżącego żądania HTTP.</summary>
      <returns>Informacje o zabezpieczeniach użytkownika dla bieżącego żądania HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu.</summary>
      <param name="model">Model do sprawdzenia poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu z użyciem prefiksu HTML.</summary>
      <param name="model">Model do sprawdzenia poprawności.</param>
      <param name="prefix">Prefiks, który ma być używany podczas wyszukiwania wartości w dostawcy modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok do odpowiedzi.</summary>
      <returns>Wynik widoku <see cref="M:System.Web.Mvc.Controller.View" />, który renderuje widok do odpowiedzi.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" /> przy użyciu modelu, który renderuje widok do odpowiedzi.</summary>
      <returns>Wynik widoku.</returns>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok, używając nazwy widoku.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku, który jest renderowany do odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje określony obiekt IView.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Widok, który jest renderowany do odpowiedzi.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok do odpowiedzi, używając nazwy widoku i nazwy strony głównej.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku, który jest renderowany do odpowiedzi.</param>
      <param name="masterName">Nazwa strony głównej lub szablonu, który ma zostać użyty podczas renderowania widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok, używając nazwy widoku, nazwy strony głównej i modelu.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku, który jest renderowany do odpowiedzi.</param>
      <param name="masterName">Nazwa strony głównej lub szablonu, który ma zostać użyty podczas renderowania widoku.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje określony obiekt IView.</summary>
      <returns>Wynik widoku.</returns>
      <param name="view">Widok, który jest renderowany do odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje określony obiekt <see cref="T:System.Web.Mvc.IView" />.</summary>
      <returns>Wynik widoku.</returns>
      <param name="view">Widok, który jest renderowany do odpowiedzi.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>Pobiera kolekcję aparatu widoku.</summary>
      <returns>Kolekcja aparatu widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Reprezentuje klasę, która odpowiada za wywołanie metod akcji kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Pobiera lub ustawia integratory modeli skojarzone z akcją.</summary>
      <returns>Integratory modeli skojarzone z akcją.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Tworzy wynik akcji.</summary>
      <returns>Obiekt wyniku akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="actionReturnValue">Wartość zwracana akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Odnajduje informacje o metodzie akcji.</summary>
      <returns>Informacje o metodzie akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera informacje o kontrolerze przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Informacje o kontrolerze.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera informacje o filtrach akcji.</summary>
      <returns>Informacje o filtrach akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Pobiera wartość określonego parametru metody akcji.</summary>
      <returns>Wartość parametru metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameterDescriptor">Deskryptor parametru.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera wartości parametrów metody akcji.</summary>
      <returns>Wartości parametrów metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Wywołuje określoną akcję przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Wynik wykonania akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji do wywołania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Wątek został przerwany podczas wywoływania akcji.</exception>
      <exception cref="T:System.Exception">Wystąpił nieokreślony błąd podczas wywoływania akcji.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wywołuje określoną metodę akcji przy użyciu określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wywołuje określoną metodę akcji przy użyciu określonych parametrów, kontekstu kontrolera i filtrów akcji.</summary>
      <returns>Kontekst metody ActionExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry akcji.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Wywołuje określony wynik akcji przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Wywołuje określony wynik akcji przy użyciu określonych filtrów akcji i kontekstu kontrolera.</summary>
      <returns>Kontekst metody ResultExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry akcji.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Wywołuje określone filtry autoryzacji przy użyciu określonego deskryptora akcji i kontekstu kontrolera.</summary>
      <returns>Kontekst obiektu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry autoryzacji.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Wywołuje określone filtry wyjątków przy użyciu określonego wyjątku i kontekstu kontrolera.</summary>
      <returns>Kontekst obiektu <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry wyjątków.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Reprezentuje klasę podstawową dla wszystkich kontrolerów MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Pobiera lub ustawia kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Wykonuje żądanie.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicjuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Pobiera lub ustawia słownik danych tymczasowych.</summary>
      <returns>Słownik danych tymczasowych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Pobiera lub ustawia wartość wskazującą, czy weryfikacja żądania jest włączona dla tego żądania.</summary>
      <returns>Wartość true, jeśli weryfikacja żądania jest włączona, a w przeciwnym razie wartość false.Wartością domyślną jest true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Pobiera lub ustawia dostawcę wartości dla kontrolera.</summary>
      <returns>Dostawca wartości dla kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>Pobiera słownik danych widoku dynamicznego.</summary>
      <returns>Słownik danych widoku dynamicznego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Reprezentuje klasę odpowiedzialną za dynamiczne tworzenie kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Pobiera bieżący obiekt konstruktora kontrolerów.</summary>
      <returns>Bieżący konstruktor kontrolerów.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Pobiera domyślne obszary nazw.</summary>
      <returns>Domyślne obszary nazw.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Pobiera skojarzoną fabrykę kontrolerów.</summary>
      <returns>Fabryka kontrolerów.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Ustawia fabrykę kontrolerów przy użyciu określonego typu.</summary>
      <param name="controllerFactoryType">Typ fabryki kontrolerów.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactoryType" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Nie można przypisać fabryki kontrolerów z typu w parametrze <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas ustawiania fabryki kontrolerów.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Ustawia określoną fabrykę kontrolerów.</summary>
      <param name="controllerFactory">Fabryka kontrolerów.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactory" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Hermetyzuje informacje o żądaniu HTTP, które jest zgodne z określonymi wystąpieniami klas <see cref="T:System.Web.Routing.RouteBase" /> i <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" /> przy użyciu określonego kontekstu HTTP, danych trasy adresu URL i kontrolera.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="routeData">Dane trasy.</param>
      <param name="controller">Kontroler.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" /> przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" /> przy użyciu określonego kontekstu żądania i kontrolera.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controller">Kontroler.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub oba parametry mają wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Pobiera lub ustawia kontroler.</summary>
      <returns>Kontroler.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>Pobiera tryb wyświetlania.</summary>
      <returns>Tryb wyświetlania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Pobiera lub ustawia kontekst HTTP.</summary>
      <returns>Kontekst HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Pobiera wartość wskazującą, czy skojarzona metoda akcji jest akcją podrzędną.</summary>
      <returns>Wartość true, jeśli skojarzona metoda akcji jest akcją podrzędną; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Pobiera obiekt, który zawiera informacje o kontekście widoku dla nadrzędnej metody akcji.</summary>
      <returns>Obiekt, który zawiera informacje o kontekście widoku dla nadrzędnej metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Pobiera lub ustawia kontekst żądania.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Pobiera lub ustawia dane trasy adresu URL.</summary>
      <returns>Dane trasy adresu URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Hermetyzuje informacje z opisem kontrolera, takie jak jego nazwa, typ i akcje.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Pobiera nazwę kontrolera.</summary>
      <returns>Nazwa kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje metodę akcji przy użyciu podanej nazwy i kontekstu kontrolera.</summary>
      <returns>Informacje dotyczące metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Pobiera listę deskryptorów metod akcji zawartych w kontrolerze.</summary>
      <returns>Lista deskryptorów metod akcji zawartych w kontrolerze.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Pobiera atrybuty niestandardowe zdefiniowane dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Pobiera atrybuty niestandardowe określonego typu zdefiniowane dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null (w języku Visual Basic: Nothing).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Wartość true, jeśli ma być używana pamięć podręczna; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla tego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień określonego atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano parametr <paramref name="attributeType" />, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null (w języku Visual Basic: Nothing).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>W przypadku zaimplementowania w klasie pochodnej pobiera unikatowy identyfikator deskryptora kontrolera, stosując inicjowanie z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Dodaje kontroler do wystąpienia klasy <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca kolekcję filtrów wystąpienia kontrolera.</summary>
      <returns>Kolekcja filtrów wystąpienia kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Reprezentuje atrybut wywołujący niestandardowego integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Pobiera skojarzonego integratora modelu.</summary>
      <returns>Odwołanie do obiektu zawierającego implementację interfejsu <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Udostępnia kontener dla wspólnych metadanych, dla klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> oraz klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> na potrzeby modelu danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">Dostawca metadanych modelu adnotacji danych.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="displayColumnAttribute">Atrybut wyświetlania kolumny.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Zwraca prosty tekst dla danych modelu.</summary>
      <returns>Prosty tekst dla danych modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementuje domyślnego dostawcę metadanych modelu dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Pobiera metadane dla określonej właściwości.</summary>
      <returns>Metadane właściwości.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Reprezentuje metodę umożliwiającą utworzenie wystąpienia klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Udostępnia moduł weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadane dla modelu.</param>
      <param name="context">Kontekst kontrolera dla modelu.</param>
      <param name="attribute">Atrybut weryfikacji modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Pobiera atrybut weryfikacji dla modułu weryfikacji modelu.</summary>
      <returns>Atrybut weryfikacji dla modułu weryfikacji modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Pobiera komunikat o błędzie dotyczący niepowodzenia weryfikacji.</summary>
      <returns>Komunikat o błędzie dotyczący niepowodzenia weryfikacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Pobiera kolekcję reguł weryfikacji klienta.</summary>
      <returns>Kolekcja reguł weryfikacji klienta.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Pobiera wartość określającą, czy weryfikacja modelu jest wymagana.</summary>
      <returns>Wartość true, jeśli weryfikacja modelu jest wymagana; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Zwraca listę komunikatów o błędach weryfikacji dla modelu.</summary>
      <returns>Lista komunikatów o błędach weryfikacji dla modelu lub pusta lista, jeśli nie wystąpiły żadne błędy.</returns>
      <param name="container">Kontener dla modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Udostępnia moduł weryfikacji modelu dla określonego typu weryfikacji.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadane dla modelu.</param>
      <param name="context">Kontekst kontrolera dla modelu.</param>
      <param name="attribute">Atrybut weryfikacji modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Pobiera atrybut weryfikacji z modułu weryfikacji modelu.</summary>
      <returns>Atrybut weryfikacji z modułu weryfikacji modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementuje domyślnego dostawcę weryfikacji dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Pobiera lub ustawia wartość określającą, czy są wymagane typy wartości nieprzyjmujące wartości null.</summary>
      <returns>Wartość true, jeśli są wymagane typy wartości nie przyjmujące wartości null; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera listę modułów weryfikacji.</summary>
      <returns>Lista modułów weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
      <param name="attributes">Lista atrybutów weryfikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Rejestruje adapter w celu udostępnienia weryfikacji po stronie klienta.</summary>
      <param name="attributeType">Typ atrybutu weryfikacji.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje fabrykę adapterów dla dostawcy weryfikacji.</summary>
      <param name="attributeType">Typ atrybutu.</param>
      <param name="factory">Fabryka, która zostanie użyta do utworzenia obiektu <see cref="T:System.Web.Mvc.ModelValidator" /> dla określonego atrybutu.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Rejestruje adapter domyślny.</summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje domyślną fabrykę adapterów.</summary>
      <param name="factory">Fabryka, która zostanie użyta do utworzenia obiektu <see cref="T:System.Web.Mvc.ModelValidator" /> dla adaptera domyślnego.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Rejestruje adapter w celu udostępnienia domyślnej weryfikacji obiektu.</summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje fabrykę adapterów dla domyślnego dostawcy weryfikacji obiektów.</summary>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Rejestruje adapter w celu udostępnienia weryfikacji obiektów.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje fabrykę adapterów dla dostawcy weryfikacji obiektów.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Udostępnia fabrykę dla modułów weryfikacji opartych na interfejsie <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Udostępnia kontener modułu weryfikacji modelu informacji o błędach.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów weryfikacji modelu informacji o błędach.</summary>
      <returns>Lista modułów weryfikacji modelu informacji o błędach.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Reprezentuje fabrykę kontrolerów, która jest zarejestrowana domyślnie.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> przy użyciu aktywatora kontrolera.</summary>
      <param name="controllerActivator">Obiekt implementujący interfejs aktywatora kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Tworzy określony kontroler przy użyciu określonego kontekstu żądania.</summary>
      <returns>Kontroler.</returns>
      <param name="requestContext">Kontekst żądania HTTP obejmujący kontekst HTTP i dane trasy.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Pobiera wystąpienie kontrolera dla określonego kontekstu żądania i typu kontrolera.</summary>
      <returns>Wystąpienie kontrolera.</returns>
      <param name="requestContext">Kontekst żądania HTTP obejmujący kontekst HTTP i dane trasy.</param>
      <param name="controllerType">Typ kontrolera.</param>
      <exception cref="T:System.Web.HttpException">Parametr <paramref name="controllerType" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Nie można przypisać typu <paramref name="controllerType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można utworzyć wystąpienia typu <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Zwraca zachowanie sesji kontrolera.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Pobiera typ kontrolera dla określonej nazwy i kontekstu żądania.</summary>
      <returns>Typ kontrolera.</returns>
      <param name="requestContext">Kontekst żądania HTTP obejmujący kontekst HTTP i dane trasy.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Zwalnia określony kontroler.</summary>
      <param name="controller">Kontroler do zwolnienia.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>‏Mapuje żądanie przeglądarki na obiekt danych.Ta klasa udostępnia konkretną implementację integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Pobiera lub ustawia integratorów modeli aplikacji.</summary>
      <returns>Integratorzy modeli aplikacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Powiązany obiekt.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Wiąże określoną właściwość przy użyciu określonego kontekstu kontrolera, kontekstu powiązania i określonego deskryptora właściwości.</summary>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość, która ma zostać powiązana.Deskryptor udostępnia takie informacje jak typ składnika, typ właściwości i wartość właściwości.Udostępnia również metody służące do pobierania lub ustawiania wartości właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Tworzy określony typ modelu przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Obiekt danych określonego typu.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="modelType">Typ obiektu modelu, który ma zostać zwrócony.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Tworzy indeks (podindeks) na podstawie kategorii składników większego indeksu, gdzie określona wartość indeksu jest liczbą całkowitą.</summary>
      <returns>Nazwa podindeksu.</returns>
      <param name="prefix">Prefiks podindeksu.</param>
      <param name="index">Wartość indeksu.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Tworzy indeks (podindeks) na podstawie kategorii składników większego indeksu, gdzie określona wartość indeksu jest ciągiem.</summary>
      <returns>Nazwa podindeksu.</returns>
      <param name="prefix">Prefiks podindeksu.</param>
      <param name="index">Wartość indeksu.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Tworzy nazwę podwłaściwości przy użyciu określonej nazwy prefiksu i właściwości.</summary>
      <returns>Nazwa podwłaściwości.</returns>
      <param name="prefix">Prefiks podwłaściwości.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca zestaw właściwości spełniających ograniczenia filtru właściwości zdefiniowane przez określony parametr <paramref name="binding context" />.</summary>
      <returns>Wyliczalny zestaw deskryptorów właściwości.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca właściwości modelu przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Kolekcja deskryptorów właściwości.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Zwraca wartość właściwości przy użyciu określonego kontekstu kontrolera, kontekstu powiązania, deskryptora właściwości i integratora właściwości.</summary>
      <returns>Obiekt reprezentujący wartość właściwości.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Deskryptor właściwości, do której ma zostać uzyskany dostęp.Deskryptor udostępnia takie informacje jak typ składnika, typ właściwości i wartość właściwości.Udostępnia również metody służące do pobierania lub ustawiania wartości właściwości.</param>
      <param name="propertyBinder">Obiekt umożliwiający powiązanie właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca obiekt deskryptora typu określonego przez kontekst kontrolera i kontekst powiązania.</summary>
      <returns>Niestandardowy obiekt deskryptora typu.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Określa, czy model danych jest prawidłowy dla danego kontekstu powiązania.</summary>
      <returns>Wartość true, jeśli model jest prawidłowy, a w przeciwnym razie — false.</returns>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Metoda wywoływana w przypadku zaktualizowania modelu.</summary>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Metoda wywoływana podczas aktualizowania modelu.</summary>
      <returns>Wartość true, jeśli model jest aktualizowany, a w przeciwnym razie — false.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Metoda wywoływana w przypadku zweryfikowania określonej właściwości.</summary>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość, która ma zostać zweryfikowana.Deskryptor udostępnia takie informacje jak typ składnika, typ właściwości i wartość właściwości.Udostępnia również metody służące do pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość która ma zostać ustawiona dla właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Metoda wywoływana podczas weryfikowania określonej właściwości.</summary>
      <returns>Wartość true, jeśli właściwość jest weryfikowana, a w przeciwnym razie — false.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje weryfikowaną właściwość.Deskryptor udostępnia takie informacje jak typ składnika, typ właściwości i wartość właściwości.Udostępnia również metody służące do pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość która ma zostać ustawiona dla właściwości.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Pobiera lub ustawia nazwę pliku zasobu (klucza klasy) zawierającego wartości ciągu zlokalizowanego.</summary>
      <returns>Nazwa pliku zasobu (klucza klasy).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Ustawia określoną właściwość przy użyciu określonego kontekstu kontrolera i kontekstu powiązania oraz określonej wartości właściwości.</summary>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość, która ma zostać ustawiona.Deskryptor udostępnia takie informacje jak typ składnika, typ właściwości i wartość właściwości.Udostępnia również metody służące do pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość która ma zostać ustawiona dla właściwości.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Reprezentuje pamięć podręczną lokalizacji widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> przy użyciu określonej wartości czasu pamięci podręcznej.</summary>
      <param name="timeSpan">Czas pamięci podręcznej.</param>
      <exception cref="T:System.InvalidOperationException">Wartość atrybutu Ticks parametru <paramref name="timeSpan" /> jest liczbą ujemną.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Pobiera domyślną lokalizację widoku przy użyciu określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <returns>Domyślna lokalizacja widoku.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Wstawia widok w określonej ścieżce wirtualnej przy użyciu określonego kontekstu HTTP i klucza pamięci podręcznej oraz określonej ścieżki wirtualnej.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Tworzy pustą pamięć podręczną lokalizacji widoku.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Pobiera lub ustawia wartość czasu pamięci podręcznej.</summary>
      <returns>Czas pamięci podręcznej.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Udostępnia punkt rejestracji dla mechanizmów rozpoznawania zależności, w których zaimplementowano interfejs <see cref="T:System.Web.Mvc.IDependencyResolver" /> lub interfejs IServiceLocator wspólnego lokalizatora usług.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Pobiera implementację mechanizmu rozpoznawania zależności.</summary>
      <returns>Implementacja mechanizmu rozpoznawania zależności.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.</summary>
      <returns>Implementacja mechanizmu rozpoznawania zależności.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.</summary>
      <param name="getService">Funkcja udostępniająca usługę.</param>
      <param name="getServices">Funkcja udostępniająca usługi.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.</summary>
      <param name="commonServiceLocator">Wspólny lokalizator usług.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.</summary>
      <param name="resolver">Obiekt, w którym zaimplementowano mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Udostępnia punkt rejestracji dla mechanizmów rozpoznawania zależności za pomocą określonego delegata usługi i określonych delegatów kolekcji usług.</summary>
      <param name="getService">Delegat usługi.</param>
      <param name="getServices">Delegaci usług.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Udostępnia punkt rejestracji dla mechanizmów rozpoznawania zależności za pomocą udostępnionego wspólnego lokalizatora usług podczas korzystania z interfejsu lokalizatora usług.</summary>
      <param name="commonServiceLocator">Wspólny lokalizator usług.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Udostępnia punkt rejestracji dla mechanizmów rozpoznawania zależności za pomocą określonego interfejsu mechanizmu rozpoznawania zależności.</summary>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Udostępnia bezpieczną implementację metod <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> i <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Rozpoznaje pojedynczo zarejestrowane usługi obsługujące dowolne tworzenie obiektów.</summary>
      <returns>Żądana usługa lub obiekt.</returns>
      <param name="resolver">Wystąpienie mechanizmu rozpoznawania zależności, którego ta metoda jest rozszerzeniem.</param>
      <typeparam name="TService">Typ żądanej usługi lub obiektu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Rozpoznaje masowo zarejestrowane usługi.</summary>
      <returns>Żądane usługi.</returns>
      <param name="resolver">Wystąpienie mechanizmu rozpoznawania zależności, którego ta metoda jest rozszerzeniem.</param>
      <typeparam name="TService">Typ żądanych usług.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Reprezentuje klasę podstawową dostawców wartości, których wartości pochodzą z kolekcji implementującej interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Pary nazw i wartości używane do zainicjowania dostawcy wartości.</param>
      <param name="culture">Informacje o określonej kulturze, na przykład nazwy kultury, system pisma i używany kalendarz.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze z prefiksu.</summary>
      <returns>Klucze z prefiksu.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza i kontekstu kontrolera.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Udostępnia pustego dostawcę metadanych dla modeli danych, które nie wymagają metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Udostępnia pustego dostawcę weryfikacji dla modeli, które nie wymagają modułu weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera pusty moduł weryfikacji modelu.</summary>
      <returns>Pusty moduł weryfikacji modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Reprezentuje wynik, który nie powoduje wykonania żadnego działania, taki jak metoda akcji kontrolera, które nie zwraca żadnego wyniku.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Wykonuje określony kontekst wyniku.</summary>
      <param name="context">Kontekst wyniku.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Udostępnia kontekst umożliwiający używanie klasy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ExceptionContext" /> dla określonego wyjątku przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="exception">Wyjątek.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość określającą, czy wyjątek został obsłużony.</summary>
      <returns>Wartość true, jeśli wyjątek został obsłużony, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Udostępnia klasę pomocy umożliwiającą pobranie nazwy modelu z wyrażenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Pobiera nazwę modelu z wyrażenia lambda.</summary>
      <returns>Nazwa modelu.</returns>
      <param name="expression">Wyrażenie.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Pobiera nazwę modelu z wyrażenia ciągu.</summary>
      <returns>Nazwa modelu.</returns>
      <param name="expression">Wyrażenie.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Udostępnia kontener dla metadanych weryfikacji pola po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Pobiera lub ustawia nazwę pola danych.</summary>
      <returns>Nazwa pola danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Pobiera lub ustawia wartość określającą, czy treść komunikatu weryfikacji ma być zastąpiona przez błąd weryfikacji klienta.</summary>
      <returns>Wartość true, jeśli treść komunikatu weryfikacji ma być zastąpiona przez błąd weryfikacji klienta, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Pobiera lub ustawia identyfikator komunikatu modułu weryfikacji.</summary>
      <returns>Identyfikator komunikatu modułu weryfikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Pobiera reguły weryfikacji klienta.</summary>
      <returns>Reguły weryfikacji klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Wysyła zawartość pliku binarnego do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileContentResult" /> przy użyciu określonej zawartości pliku i typu zawartości.</summary>
      <param name="fileContents">Tablica bajtów do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości do użycia dla odpowiedzi.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileContents" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Zawartość binarna do wysłania do odpowiedzi.</summary>
      <returns>Zawartość pliku.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje zawartość pliku w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Wysyła zawartość pliku do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilePathResult" /> przy użyciu określonej nazwy pliku i typu zawartości.</summary>
      <param name="fileName">Nazwa pliku do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości odpowiedzi.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fileName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Pobiera lub ustawia ścieżkę pliku wysyłaną do odpowiedzi.</summary>
      <returns>Ścieżka pliku wysyłana do odpowiedzi.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Reprezentuje klasę podstawową używaną do wysyłania zawartości pliku binarnego do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Typ zawartości.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="contentType" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Pobiera typ zawartości do użycia dla odpowiedzi.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Pobiera lub ustawia nagłówek dyspozycji zawartości, tak aby w przeglądarce było wyświetlane okno dialogowe pobierania pliku o określonej nazwie.</summary>
      <returns>Nazwa pliku.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Wysyła zawartość binarną do odpowiedzi przy użyciu wystąpienia klasy <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Strumień do wysłania do odpowiedzi.</param>
      <param name="contentType">Typ zawartości do użycia dla odpowiedzi.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileStream" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Pobiera strumień, który zostanie wysłany do odpowiedzi.</summary>
      <returns>Strumień pliku.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Reprezentuje klasę metadanych zawierającą odwołanie do implementacji co najmniej jednego interfejsu filtru, kolejności filtru i zakresu filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Wystąpienie.</param>
      <param name="scope">Zakres.</param>
      <param name="order">Kolejność.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Reprezentuje stałą używaną do określania domyślnej kolejności filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Pobiera wystąpienie tej klasy.</summary>
      <returns>Wystąpienie tej klasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Pobiera kolejność, według której jest stosowany filtr.</summary>
      <returns>Kolejność, według której jest stosowany filtr.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Pobiera kolejność zakresów filtru.</summary>
      <returns>Kolejność zakresów filtru.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Reprezentuje klasę bazową dla akcji i atrybutów filtru wyniku.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Pobiera lub ustawia wartość, która wskazuje, czy można określić więcej niż jedno wystąpienie atrybutu filtru.</summary>
      <returns>Wartość true, jeśli można określić więcej niż jedno wystąpienie atrybutu filtru; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Pobiera lub ustawia kolejność wykonywania filtrów akcji.</summary>
      <returns>Kolejność wykonywania filtrów akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Definiuje dostawcę filtru dla atrybutów filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> i opcjonalnie zapisuje wystąpienia atrybutów w pamięci podręcznej.</summary>
      <param name="cacheAttributeInstances">Wartość true w celu zapisania wystąpień atrybutów w pamięci podręcznej, a w przeciwnym razie — false.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera kolekcję niestandardowych atrybutów akcji.</summary>
      <returns>Kolekcja niestandardowych atrybutów akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera kolekcję atrybutów kontrolera.</summary>
      <returns>Kolekcja atrybutów kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Agreguje filtry wszystkich dostawców filtrów w jednej kolekcji.</summary>
      <returns>Filtry kolekcji wszystkich dostawców filtrów.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Hermetyzuje informacje o dostępnych filtrach akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterInfo" /> przy użyciu określonej kolekcji filtrów.</summary>
      <param name="filters">Kolekcja filtrów.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Pobiera wszystkie filtry akcji w aplikacji.</summary>
      <returns>Filtry akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>Pobiera wszystkie filtry uwierzytelniania w aplikacji.</summary>
      <returns>Lista filtrów uwierzytelniania.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Pobiera wszystkie filtry autoryzacji w aplikacji.</summary>
      <returns>Filtry autoryzacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Pobiera wszystkie filtry wyjątków w aplikacji.</summary>
      <returns>Filtry wyjątków.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Pobiera wszystkie filtry wyników w aplikacji.</summary>
      <returns>Filtry wyników.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Reprezentuje kolekcję dostawców filtrów aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterProviderCollection" /> przy użyciu określonej listy dostawcy filtrów.</summary>
      <param name="providers">Lista dostawców filtrów.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca kolekcję dostawców filtrów.</summary>
      <returns>Kolekcja dostawców filtrów.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Wstawia element do kolekcji w określonym indeksie.</summary>
      <param name="index">Liczony od elementu zerowego indeks, w którym powinien zostać wstawiony element.</param>
      <param name="item">Obiekt do wstawienia.Wartość może być null dla typów odniesienia.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>Usuwa element w określonym indeksie kolekcji.</summary>
      <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Zamienia element w określonym indeksie.</summary>
      <param name="index">Liczony od zera indeks elementu do zamiany.</param>
      <param name="item">Nowa wartość elementu z określonym indeksem.Wartość może być null dla typów odniesienia.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Udostępnia punkt rejestracji filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Udostępnia punkt rejestracji filtrów.</summary>
      <returns>Kolekcja filtrów.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Definiuje wartości określające kolejność uruchamiania filtrów programu ASP.NET MVC w obrębie tego samego typu filtru i tej samej kolejności filtrowania.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Last" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Action" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Określa pierwszą pozycję.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Controller" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Określa ostatnią pozycję.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Zawiera dostawców wartości formularza dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">Kolekcja.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Pobiera określonego dostawcę wartości.</summary>
      <returns>Dostawca wartości.</returns>
      <param name="name">Nazwa dostawcy wartości do pobrania.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Pobiera wartość wskazującą, czy dostawca wartości zawiera wpis o określonym prefiksie.</summary>
      <returns>Wartość true, jeśli dostawca wartości zawiera wpis o określonym prefiksie; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Pobiera wartość z dostawcy wartości przy użyciu określonego klucza.</summary>
      <returns>Wartość z dostawcy wartości.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Zwraca słownik zawierający dostawców wartości.</summary>
      <returns>Słownik dostawców wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Hermetyzuje informacje wymagane do weryfikacji i przetwarzania danych wejściowych z formularza HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Pobiera moduły weryfikacji pól dla formularza.</summary>
      <returns>Słownik modułów weryfikacji pól dla formularza</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Pobiera lub ustawia identyfikator formularza.</summary>
      <returns>Identyfikator formularza.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Zwraca zserializowany obiekt, który zawiera identyfikator formularza i wartości weryfikacji pól formularza.</summary>
      <returns>Zserializowany obiekt, który zawiera identyfikator formularza i wartości weryfikacji pól formularza.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Zwraca wartość weryfikacji określonego pola wejściowego.</summary>
      <returns>Wartość, z którą ma nastąpić weryfikacja danych wejściowych w polu.</returns>
      <param name="fieldName">Nazwa pola, dla którego ma zostać pobrana wartość weryfikacji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Zwraca wartość weryfikacji określonego pola wejściowego oraz wartość wskazującą, co ma nastąpić, jeżeli wartość weryfikacji nie zostanie znaleziona.</summary>
      <returns>Wartość, z którą ma nastąpić weryfikacja danych wejściowych w polu.</returns>
      <param name="fieldName">Nazwa pola, dla którego ma zostać pobrana wartość weryfikacji.</param>
      <param name="createIfNotFound">Wartość true, aby wartość weryfikacji została utworzona, jeśli nie zostanie znaleziona, a w przeciwnym razie wartość false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Zwraca wartość wskazującą, czy określone pole zostało wyrenderowane w formularzu.</summary>
      <returns>Wartość true, jeśli pole zostało wyrenderowane, a w przeciwnym razie wartość false.</returns>
      <param name="fieldName">Nazwa pola.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Ustawia wartość wskazującą, czy określone pole zostało wyrenderowane w formularzu.</summary>
      <param name="fieldName">Nazwa pola.</param>
      <param name="value">Wartość true, aby określić, że pole zostało wyrenderowane, a w przeciwnym razie wartość false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Określa, czy błędy weryfikacji klienta mają być dynamicznie dodawane do podsumowania weryfikacji.</summary>
      <returns>Wartość true , jeśli błędy weryfikacji mają być dodawane do podsumowania, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Pobiera lub ustawia identyfikator dla podsumowania weryfikacji.</summary>
      <returns>Identyfikator dla podsumowania weryfikacji.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Wylicza typy żądań HTTP dla formularza.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Określa żądanie GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Określa żądanie POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Reprezentuje dostawcę wartości dla wartości formularza zawartych w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości formularza.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości formularza dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości formularza.</returns>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Reprezentuje klasę, która zawiera wszystkie filtry globalne.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Dodaje określony filtr do kolekcji filtrów globalnych.</summary>
      <param name="filter">Filtr.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Dodaje określony filtr do kolekcji filtrów globalnych z użyciem określonej kolejności uruchamiania filtrów.</summary>
      <param name="filter">Filtr.</param>
      <param name="order">Kolejność uruchamiania filtrów.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Usuwa wszystkie filtry z kolekcji filtrów globalnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Określa, czy filtr znajduje się w kolekcji filtrów globalnych.</summary>
      <returns>Wartość true, jeśli znaleziono element <paramref name="filter" /> w kolekcji filtrów globalnych; w przeciwnym razie wartość false.</returns>
      <param name="filter">Filtr.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Pobiera liczbę filtrów w kolekcji filtrów globalnych.</summary>
      <returns>Liczba filtrów w kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Zwraca moduł wyliczający, który iteruje po kolekcji filtrów globalnych.</summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Usuwa wszystkie filtry zgodne z określonym filtrem.</summary>
      <param name="filter">Filtr do usunięcia.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie. </summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie jest przeznaczony do bezpośredniego używania w kodzie.</summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji filtrów globalnych.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Reprezentuje kolekcję filtrów globalnych.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Pobiera lub ustawia kolekcję filtrów globalnych.</summary>
      <returns>Kolekcja filtrów globalnych.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Reprezentuje atrybut używany do obsługi wyjątku zgłoszonego przez metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Pobiera lub ustawia typ wyjątku.</summary>
      <returns>Typ wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Pobiera lub ustawia widok główny, w którym mają być wyświetlane informacje o wyjątku.</summary>
      <returns>Widok główny.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana w przypadku wystąpienia wyjątku.</summary>
      <param name="filterContext">Kontekst filtru akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator dla tego atrybutu.</summary>
      <returns>Unikatowy identyfikator dla tego atrybutu.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Pobiera lub ustawia widok strony, w którym mają być wyświetlane informacje o wyjątku.</summary>
      <returns>Widok strony.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Hermetyzuje informacje dotyczące przetwarzania błędu zgłoszonego przez metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Wyjątek.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> lub <paramref name="actionName" /> jest pusty lub ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Pobiera lub ustawia nazwę akcji wykonywanej w czasie zgłoszenia wyjątku.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Pobiera lub ustawia nazwę kontrolera zawierającą metodę akcji, która zgłosiła wyjątek.</summary>
      <returns>Nazwa kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Reprezentuje atrybut służący do wskazywania, czy wartość właściwości lub pola powinna być renderowana jako ukryty element input.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Pobiera lub ustawia wartość wskazującą, czy wartość ukrytego elementu input ma być wyświetlana.</summary>
      <returns>Wartość true, jeśli wartość powinna być wyświetlana; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>Wylicza tryb renderowania daty dla HTML5.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>Formatowanie bieżącej kultury.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>Formatowanie zgodnie ze standardem RFC 3339.</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Obsługuje renderowanie kontrolek HTML w widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper" /> przy użyciu określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <see cref="T:System.Web.Mvc.ViewContext" /> lub viewDataContainer ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper" /> przy użyciu określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja trasy.</param>
      <exception cref="T:System.ArgumentNullException">Co najmniej jeden parametr ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>W określonych atrybutach HTML zastępuje znaki podkreślenia (_) łącznikami (-).</summary>
      <returns>Atrybuty HTML ze znakami podkreślenia zastąpionymi przez łączniki.</returns>
      <param name="htmlAttributes">Atrybuty HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Generuje ukryte pole formularza (token zabezpieczający przed sfałszowaniem), którego poprawność jest sprawdzana podczas przesyłania formularza.</summary>
      <returns>Wygenerowane pole formularza (token zabezpieczający przed sfałszowaniem).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Generuje ukryte pole formularza (token zabezpieczający przed sfałszowaniem), którego poprawność jest sprawdzana podczas przesyłania formularza.Wartość pola jest generowana z użyciem podanej wartości zaburzającej.</summary>
      <returns>Wygenerowane pole formularza (token zabezpieczający przed sfałszowaniem).</returns>
      <param name="salt">Wartość zaburzająca, która może być dowolnym niepustym ciągiem.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Generuje ukryte pole formularza (token zabezpieczający przed sfałszowaniem), którego poprawność jest sprawdzana podczas przesyłania formularza.Wartość w polu jest generowana z użyciem podanej wartości zaburzającej, domeny i ścieżki.</summary>
      <returns>Wygenerowane pole formularza (token zabezpieczający przed sfałszowaniem).</returns>
      <param name="salt">Wartość zaburzająca, która może być dowolnym niepustym ciągiem.</param>
      <param name="domain">Domena aplikacji.</param>
      <param name="path">Ścieżka wirtualna.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Konwertuje określoną wartość atrybutu na ciąg kodowany w formacie HTML.</summary>
      <returns>Ciąg kodowany w formacie HTML.Jeśli parametr wartości ma wartość null lub jest pusty, ta metoda zwraca pusty ciąg.</returns>
      <param name="value">Obiekt do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Konwertuje określoną wartość atrybutu na ciąg kodowany w formacie HTML.</summary>
      <returns>Ciąg kodowany w formacie HTML.Jeśli parametr wartości ma wartość null lub jest pusty, ta metoda zwraca pusty ciąg.</returns>
      <param name="value">Ciąg do zakodowania.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy sprawdzanie poprawności klienta jest włączone.</summary>
      <returns>Wartość true, jeśli sprawdzanie poprawności klienta jest włączone; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Umożliwia sprawdzenie poprawności danych wejściowych wykonywane przy użyciu skryptu klienta w przeglądarce.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>Włącza lub wyłącza sprawdzanie poprawności klienta.</summary>
      <param name="enabled">Wartość true, jeśli sprawdzanie poprawności klienta ma zostać włączone; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Włącza lub wyłącza dyskretny kod JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>Włącza lub wyłącza dyskretny kod JavaScript.</summary>
      <param name="enabled">Wartość true, jeśli dyskretny kod JavaScript ma zostać włączony; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Konwertuje wartość określonego obiektu na ciąg kodowany w formacie HTML.</summary>
      <returns>Ciąg kodowany w formacie HTML.</returns>
      <param name="value">Obiekt do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Konwertuje określony ciąg na ciąg kodowany w formacie HTML.</summary>
      <returns>Ciąg kodowany w formacie HTML.</returns>
      <param name="value">Ciąg do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>Formatuje wartość.</summary>
      <returns>Sformatowana wartość.</returns>
      <param name="value">Wartość.</param>
      <param name="format">Ciąg formatu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Tworzy identyfikator elementu HTML przy użyciu określonej nazwy elementu.</summary>
      <returns>Identyfikator elementu HTML.</returns>
      <param name="name">Nazwa elementu HTML.</param>
      <exception cref="T:System.ArgumentNullException">Parametr name ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Tworzy identyfikator elementu HTML przy użyciu określonej nazwy elementu i ciągu, który zastępuje kropki w nazwie.</summary>
      <returns>Identyfikator elementu HTML.</returns>
      <param name="name">Nazwa elementu HTML.</param>
      <param name="idAttributeDotReplacement">Ciąg, który zastępuje kropki (.) w nazwie parametru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr name lub parametr idAtributeDotReplacement ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a), który stanowi łącze do określonej metody akcji i umożliwia użytkownikowi określenie protokołu komunikacyjnego, nazwy hosta i fragmentu adresu URL.</summary>
      <returns>Element HTML, który stanowi łącze do określonej metody akcji.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
      <param name="linkText">Podpis tekstowy wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół komunikacyjny, na przykład HTTP lub HTTPS.Jeśli ten parametr ma wartość null, domyślnie przyjmowany jest protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Identyfikator fragmentu.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a), który stanowi łącze do określonej metody akcji.</summary>
      <returns>Element HTML, który stanowi łącze do określonej metody akcji.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
      <param name="linkText">Podpis tekstowy wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a), który stanowi łącze do określonej trasy adresu URL i umożliwia użytkownikowi określenie protokołu komunikacyjnego, nazwy hosta i fragmentu adresu URL.</summary>
      <returns>Element HTML, który stanowi łącze do określonej trasy adresu URL.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
      <param name="linkText">Podpis tekstowy wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="protocol">Protokół komunikacyjny, na przykład HTTP lub HTTPS.Jeśli ten parametr ma wartość null, domyślnie przyjmowany jest protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Identyfikator fragmentu.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a), który stanowi łącze do określonej trasy adresu URL.</summary>
      <returns>Element HTML, który stanowi łącze do określonej trasy adresu URL.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras adresów URL.</param>
      <param name="linkText">Podpis tekstowy wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Zwraca metodę HTTP, która obsługuje dane wejściowe formularza (GET lub POST) jako ciąg.</summary>
      <returns>Ciąg metody formularza, „get” albo „post”.</returns>
      <param name="method">Metoda HTTP, która obsługuje formularz.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Zwraca typ wejściowej kontrolki HTML jako ciąg.</summary>
      <returns>Ciąg typu wejścia („checkbox”, „hidden”, „password”, „radio” lub „text”).</returns>
      <param name="inputType">Wyliczany typ wejścia.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Pobiera kolekcję atrybutów sprawdzania poprawności dyskretnego kodu JavaScript przy użyciu określonego atrybutu nazwy HTML.</summary>
      <returns>Kolekcja atrybutów sprawdzania poprawności dyskretnego kodu JavaScript.</returns>
      <param name="name">Atrybut nazwy HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Pobiera kolekcję atrybutów sprawdzania poprawności dyskretnego kodu JavaScript przy użyciu określonego atrybutu nazwy HTML i metadanych modelu.</summary>
      <returns>Kolekcja atrybutów sprawdzania poprawności dyskretnego kodu JavaScript.</returns>
      <param name="name">Atrybut nazwy HTML.</param>
      <param name="metadata">Metadane modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>Pobiera lub ustawia tryb renderowania danych HTML5.</summary>
      <returns>Tryb renderowania danych HTML5.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Zwraca ukryty element input, który identyfikuje metodę przesłaniającą dla określonej metody transferu danych HTTP użytej przez klienta.</summary>
      <returns>Metoda przesłaniająca używająca metody transferu danych HTTP użytej przez klienta.</returns>
      <param name="httpMethod">Metoda transferu danych HTTP, która została użyta przez klienta (DELETE, HEAD lub PUT).</param>
      <exception cref="T:System.ArgumentNullException">Parametr httpVerb nie ma wartości „PUT”, „DELETE” ani „HEAD”.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Zwraca ukryty element input, który identyfikuje metodę przesłaniającą dla określonego czasownika reprezentującego metodę transferu danych HTTP użytą przez klienta.</summary>
      <returns>Metoda przesłaniająca używająca czasownika, który reprezentuje metodę transferu danych HTTP użytą przez klienta.</returns>
      <param name="httpVerb">Czasownik reprezentujący metodę transferu danych HTTP użytą przez klienta.</param>
      <exception cref="T:System.ArgumentNullException">Parametr httpVerb nie ma wartości „PUT”, „DELETE” ani „HEAD”.</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Pobiera lub ustawia znak zastępujący kropki w atrybucie ID elementu.</summary>
      <returns>Znak zastępujący kropki w atrybucie ID elementu.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Tworzy słownik na podstawie obiektu, dodając do niego wszystkie właściwości publiczne wystąpienia jako klucze z powiązanymi wartościami.Powoduje to udostępnienie również właściwości publicznych z typów pochodnych.Funkcja ta jest stosowana zazwyczaj z obiektami typu anonimowego.</summary>
      <returns>Utworzony słownik nazw i wartości właściwości.</returns>
      <param name="value">Obiekt do skonwertowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>Zwraca kod znaczników, który nie ma kodowania HTML.</summary>
      <returns>Kod znaczników HTML bez kodowania.</returns>
      <param name="value">Kod znaczników HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>Zwraca kod znaczników, który nie ma kodowania HTML.</summary>
      <returns>Kod znaczników HTML bez kodowania.</returns>
      <param name="value">Kod znaczników HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Pobiera lub ustawia kolekcję tras dla aplikacji.</summary>
      <returns>Kolekcja tras dla aplikacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationMessageElement(System.String)">
      <summary>Ustaw nazwę elementu stosowanego do opakowywania komunikatu weryfikacji wygenerowanego przez <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> i inne przeciążenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationSummaryMessageElement(System.String)">
      <summary>Ustaw nazwę elementu stosowanego do opakowywania komunikatu najwyższego poziomu w <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> i innych przeciążeniach.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy włączony jest dyskretny kod JavaScript.</summary>
      <returns>Wartość true, jeśli dyskretny kod JavaScript jest włączony; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Nazwa klasy CSS używanej do określania stylu pola wejściowego w razie wystąpienia błędu sprawdzania poprawności.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Nazwa klasy CSS używanej do określania stylu pola wejściowego, gdy dane wejściowe są poprawne.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Nazwa klasy CSS do określania stylu komunikatu o błędzie w razie wystąpienia błędu sprawdzania poprawności.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationMessageElement">
      <summary>Nazwa elementu stosowanego do opakowywania komunikatu weryfikacji wygenerowanego przez <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> i inne przeciążenia.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Nazwa klasy CSS używanej do określania stylu komunikatu sprawdzania poprawności, gdy dane wejściowe są poprawne.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Nazwa klasy CSS używanej do określania stylu komunikatów o błędach w podsumowaniu sprawdzania poprawności.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationSummaryMessageElement">
      <summary>Nazwa elementu stosowanego do opakowywania komunikatu najwyższego poziomu w <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> i innych przeciążeniach.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Nazwa klasy CSS używanej do określania stylu podsumowania sprawdzania poprawności, gdy dane wejściowe są poprawne.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Pobiera lub ustawia informacje kontekstu dotyczące widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Pobiera słownik danych bieżącego widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Pobiera lub ustawia kontener danych widoku.</summary>
      <returns>Kontener danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Reprezentuje obsługę renderowania kontrolek HTML w silnie typizowanym widoku.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper`1" /> przy użyciu określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper`1" /> przy użyciu określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Pobiera słownik danych silnie typizowanego widoku.</summary>
      <returns>Słownik danych silnie typizowanego widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji w taki sposób, aby obsługiwała tylko żądania HTTP DELETE.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie usunięcia metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Reprezentuje dostawcę wartości używanego w przypadku wartości pochodzących z kolekcji plików HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości kolekcji plików HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Dostawca wartości kolekcji plików HTTP.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje o żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji w taki sposób, aby obsługiwała tylko żądania HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie GET metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>Określa, że żądanie HTTP musi być metodą HTTP HEAD.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpHeadAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Definiuje obiekt służący do wskazywania, że nie odnaleziono żądanego zasobu.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> przy użyciu opisu stanu.</summary>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji tak, aby obsługiwała tylko żądania HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji tak, aby obsługiwała tylko żądania HTTP PATCH.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPatchAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji w taki sposób, aby obsługiwała tylko żądania HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy wybór żądanie POST akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Wiąże model z opublikowanym plikiem.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model.</summary>
      <returns>Wiązana wartość.Narzędzia<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub oba parametry mają wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Reprezentuje atrybut używany do ograniczania metody akcji tak, aby obsługiwała tylko żądania HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy żądanie PUT metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli żądanie metody akcji jest prawidłowe w przypadku danego kontekstu kontrolera; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Rozszerza klasę <see cref="T:System.Web.HttpRequestBase" /> zawierającą wartości HTTP, które zostały wysłane przez klienta w trakcie żądania sieci Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Pobiera metodę przesłaniającą transferu danych HTTP używaną przez klienta.</summary>
      <returns>Metoda przesłaniająca transferu danych HTTP używana przez klienta.</returns>
      <param name="request">Obiekt zawierający wartości HTTP, które zostały wysłane przez klienta w trakcie żądania sieci Web.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="request" /> ma wartość null.</exception>
      <exception cref="T:System.NotImplementedException">Metoda przesłaniająca transferu danych HTTP, która nie została zaimplementowana.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Udostępnia sposób zwrócenia wyniku akcji z konkretnym kodem i opisem stanu odpowiedzi HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> przy użyciu kodu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> przy użyciu kodu stanu i opisu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> przy użyciu kodu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> przy użyciu kodu stanu i opisu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Pobiera kod stanu HTTP.</summary>
      <returns>Kod stanu HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Pobiera opis stanu HTTP.</summary>
      <returns>Opis stanu HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Reprezentuje wynik nieautoryzowanego żądania HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> przy użyciu opisu stanu.</summary>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Wylicza polecenia HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Wysyła żądanie usunięcia określonego identyfikatora URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Pobiera jednostkę lub informacje identyfikowane przez identyfikator URI żądania.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Pobiera nagłówki komunikatów jednostki lub informacji identyfikowanych przez identyfikator URI żądania.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>Reprezentuje żądanie informacji dotyczące dostępnych opcji komunikacji w łańcuchu żądanie/odpowiedź wskazywanym przez identyfikator URI żądania.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>Żąda, aby zestaw zmian opisanych w jednostce żądania został zastosowany do zasobu wskazywanego przez identyfikator URI żądania.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Ogłasza nową jednostkę jako dodatek do identyfikatora URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Zamienia jednostkę identyfikowaną przez identyfikator URI.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Definiuje metody używane w filtrze akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Definiuje kontrakt dla elementu wywołującego akcji, który służy do wywoływania akcji w odpowiedzi na żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Wywołuje określoną akcję przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli znaleziono akcję, a w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvokerFactory">
      <summary>Służy do tworzenia wystąpienia elementu <see cref="T:System.Web.Mvc.IActionInvoker" /> dla bieżącego żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvokerFactory.CreateInstance">
      <summary>Tworzy wystąpienie elementu wywołującego akcję dla bieżącego żądania.</summary>
      <returns>Utworzony element <see cref="T:System.Web.Mvc.IActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Definiuje metody wymagane na potrzeby filtru autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wywoływane, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Umożliwia strukturze weryfikacji platformy ASP.NET MVC wykrywanie w czasie wykonywania, czy moduł weryfikacji obsługuje weryfikację klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Po zaimplementowaniu w klasie zwraca reguły weryfikacji klienta dla tej klasy.</summary>
      <returns>Reguły weryfikacji klienta dla tego modułu weryfikacji.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Definiuje metody wymagane dla kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Zapewnia dokładną kontrolę sposobu tworzenia wystąpień kontrolerów przez dodanie zależności. </summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>Po zaimplementowaniu w klasie tworzy kontroler.</summary>
      <returns>Utworzony kontroler.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Definiuje metody wymagane dla fabryki kontrolerów.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Tworzy określony kontroler przy użyciu określonego kontekstu żądania.</summary>
      <returns>Kontroler.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Pobiera zachowanie sesji kontrolera.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera, którego zachowanie sesji ma zostać pobrane.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Zwalnia określony kontroler.</summary>
      <param name="controller">Kontroler.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Definiuje metody upraszczające lokalizację usługi oraz rozwiązywanie zależności.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Rozpoznaje pojedynczo zarejestrowane usługi obsługujące dowolne tworzenie obiektów.</summary>
      <returns>Żądana usługa lub obiekt.</returns>
      <param name="serviceType">Typ żądanej usługi lub obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Rozpoznaje masowo zarejestrowane usługi.</summary>
      <returns>Żądane usługi.</returns>
      <param name="serviceType">Typ żądanych usług.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>Reprezentuje specjalny interfejs <see cref="T:System.Web.Mvc.IValueProvider" />, który może być wyliczalny.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze z prefiksu.</summary>
      <returns>Klucze.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Definiuje metody wymagane dla filtru wyjątku.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana w przypadku wystąpienia wyjątku.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Udostępnia interfejs do znajdowania filtrów.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca moduł wyliczający, który zawiera wszystkie wystąpienia interfejsu <see cref="T:System.Web.Mvc.IFilterProvider" /> we wspólnym lokalizatorze usług.</summary>
      <returns>Moduł wyliczający, który zawiera wszystkie wystąpienia interfejsu <see cref="T:System.Web.Mvc.IFilterProvider" /> we wspólnym lokalizatorze usług.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Udostępnia interfejs służący do uwidaczniania atrybutów klasie <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Po zaimplementowaniu w klasie dostarcza metadanych do procesu tworzenia metadanych modelu.</summary>
      <param name="metadata">Metadane modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.IMethodInfoActionDescriptor">
      <summary>Opcjonalny interfejs dla typów <see cref="T:System.Web.Mvc.ActionDescriptor" />, zapewniający element <see cref="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo">
      <summary>Pobiera element MethodInfo.</summary>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Definiuje metody wymagane dla integratora modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model z wartością przy użyciu określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Wiązana wartość.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Definiuje metodę umożliwiającą dynamiczne implementacje wiązania modelu dla klas, w których zaimplementowano interfejs <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Zwraca integratora modelu dla określonego typu.</summary>
      <returns>Integrator modelu dla określonego typu.</returns>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Definiuje składowe określające kolejność filtrów oraz wskazujące, czy można używać wielu filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>W przypadku zaimplementowania w klasie pobiera lub ustawia wartość wskazującą, czy można używać wielu filtrów.</summary>
      <returns>true, jeśli można używać wielu filtrów, a w przeciwnym wypadku — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>W przypadku zaimplementowania w klasie pobiera kolejność filtrowania.</summary>
      <returns>Kolejność filtrowania.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Wylicza typy kontrolek wejściowych.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Pole wyboru.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Ukryte pole.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Pole hasła.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Przycisk radiowy.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Pole tekstowe.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Definiuje metody wymagane na potrzeby filtru wyników.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Kojarzy trasę z obszarem w aplikacji platformy ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Pobiera nazwę obszaru do skojarzenia z trasą.</summary>
      <returns>Nazwa obszaru do skojarzenia z trasą.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Definiuje kontrakt dla dostawców danych tymczasowych przechowujących dane wyświetlane w następnym żądaniu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Ładuje dane tymczasowe.</summary>
      <returns>Dane tymczasowe.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje dane tymczasowe.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="values">Wartości.</param>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProviderFactory">
      <summary>Służy do tworzenia wystąpienia elementu <see cref="T:System.Web.Mvc.ITempDataProvider" /> dla kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProviderFactory.CreateInstance">
      <summary>Tworzy wystąpienie elementu <see cref="T:System.Web.Mvc.ITempDataProvider" /> dla kontrolera.</summary>
      <returns>Utworzony element <see cref="T:System.Web.Mvc.ITempDataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Reprezentuje interfejs <see cref="T:System.Web.Mvc.IValueProvider" /> umożliwiający pominięcie weryfikacji żądań.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Pobiera wartość obiektu skojarzoną z określonym kluczem.</summary>
      <returns>Wartość obiektu określonego klucza.</returns>
      <param name="key">Klucz.</param>
      <param name="skipValidation">Wartość true, jeśli weryfikacja ma być pomijana, a w przeciwnym razie — false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Definiuje metody wymagane dla dostawcy wartości na platformie ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza lub wartość null, jeśli nie odnaleziono klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Definiuje metody wymagane na potrzeby widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderuje określony kontekst widoku przy użyciu określonego obiektu zapisującego.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="writer">Obiekt zapisujący.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Definiuje metody wymagane dla słownika danych widoku.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Definiuje metody wymagane dla aparatu widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Znajduje określony widok częściowy przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="useCache">Wartość true w celu określenia, że aparat widoku zwraca widok buforowany, o ile taki widok istnieje; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Znajduje określony widok przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Widok strony.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa elementu wzorcowego.</param>
      <param name="useCache">Wartość true w celu określenia, że aparat widoku zwraca widok buforowany, o ile taki widok istnieje; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Zwalnia określony widok przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="view">Widok.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Definiuje metody wymagane do zapisywania lokalizacji widoków w pamięci podręcznej.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Pobiera lokalizację widoku przy użyciu określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <returns>Lokalizacja widoku.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Wstawia określoną lokalizację widoku do pamięci podręcznej przy użyciu określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Zapewnia precyzyjną kontrolę nad procesem tworzenia stron widoków z użyciem iniekcji zależności.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>Zapewnia precyzyjną kontrolę nad procesem tworzenia stron widoków z użyciem iniekcji zależności.</summary>
      <returns>Utworzona strona widoku.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="type">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Wysyła zawartość JavaScript do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Pobiera lub ustawia skrypt.</summary>
      <returns>Skrypt.</returns>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProvider">
      <summary>Dostawca wartości formularza JQuery służy do obsługi danych w formacie JQuery w formularzach żądań.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Tworzy nowe wystąpienie elementu ValueProvider formularza JQuery</summary>
      <param name="controllerContext">Kontekst, w którym operuje element ValueProvider.</param>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProviderFactory">
      <summary>Udostępnia element ValueProvider wymagany do obsługi danych formularza JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.#ctor">
      <summary>Tworzy nowe wystąpienie fabryki udostępniającej elementy ValueProvider formularza JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca odpowiedni element ValueProvider.</summary>
      <param name="controllerContext">Kontekst, w którym powinien operować element ValueProvider.</param>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Określa, czy żądania HTTP GET klienta są dozwolone.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Żądania HTTP GET klienta są dozwolone.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>Żądania HTTP GET klienta nie są dozwolone.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Reprezentuje klasę używaną do wysyłania zawartości w formacie JSON na potrzeby odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Pobiera lub ustawia kodowanie zawartości.</summary>
      <returns>Kodowanie zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Pobiera lub ustawia typ zawartości.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Pobiera lub ustawia dane.</summary>
      <returns>Dane.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Pobiera lub ustawia wartość wskazującą, czy są dozwolone żądania HTTP GET od klienta.</summary>
      <returns>Wartość wskazująca, czy są dozwolone żądania HTTP GET od klienta.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>Pobiera lub ustawia maksymalną długość danych.</summary>
      <returns>Maksymalna długość danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>Pobiera lub ustawia limit rekursji.</summary>
      <returns>Limit rekursji.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Umożliwia wysyłanie i odbieranie przez metody akcji tekstu w formacie JSON oraz wiązanie modeli tekstu w formacie JSON z parametrami metod akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości JSON dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości JSON dla określonego kontekstu kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Odwzorowuje żądanie przeglądarki na obiekt LINQ <see cref="T:System.Data.Linq.Binary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model przy użyciu określonego kontekstu kontrolera i kontekstu powiązania.</summary>
      <returns>Powiązany obiekt danych.Jeśli nie można powiązać modelu, ta metoda zwraca wartość null.Narzędzia<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">Kontekst, w którym działa kontroler.Kontekst obejmuje informacje dotyczące kontrolera, zawartości HTTP, kontekstu żądania i danych trasy.</param>
      <param name="bindingContext">Kontekst, w którym jest tworzone powiązanie modelu.Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu MaxLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy MaxLengthAttribute.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut MaxLength.</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji klienta dotyczących sprawdzania maksymalnej długości.</summary>
      <returns>Lista reguł zdalnej weryfikacji klienta dla długości.</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu MinLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy MinLenghtAttribute.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut długości minimalnej.</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji klienta dotyczących sprawdzania długości minimalnej.</summary>
      <returns>Lista reguł weryfikacji klienta dotyczących sprawdzania długości.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Reprezentuje atrybut służący do kojarzenia typu modelu z typem producenta modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Typ integratora.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="binderType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Pobiera lub ustawia typ integratora.</summary>
      <returns>Typ integratora.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Pobiera wystąpienie integratora modelu.</summary>
      <returns>Odwołanie do obiektu zawierającego implementację interfejsu <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas tworzenia wystąpienia integratora modelu.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Reprezentuje klasę zawierającą wszystkich integratorów modeli danej aplikacji wymienionych według ich typów.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Dodaje określony element do słownika integratorów modeli.</summary>
      <param name="item">Obiekt do dodania do wystąpienia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Dodaje określony element do słownika integratorów modeli przy użyciu określonego klucza.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">W obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" /> istnieje już element z takim samym kluczem.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Usuwa wszystkie elementy ze słownika integratorów modeli.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Sprawdza, czy słownik integratorów modeli zawiera określoną wartość.</summary>
      <returns>Wartość true, jeśli parametr <paramref name="item" /> zostanie znaleziony w słowniku integratorów modeli, a w przeciwnym razie — false.</returns>
      <param name="item">Obiekt do zlokalizowania w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Sprawdza, czy słownik integratorów modeli zawiera element z określonym kluczem.</summary>
      <returns>Wartość true, jeśli słownik integratorów modeli zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz do zlokalizowania w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Kopiuje elementy ze słownika integratorów modeli do tablicy od określonego indeksu.</summary>
      <param name="array">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.Indeksowanie tablicy musi rozpoczynać się od zera.</param>
      <param name="arrayIndex">Liczony od elementu zerowego indeks parametru <paramref name="array" />, od którego rozpocznie się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> ma wartość mniejszą niż 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.— lub — Parametr <paramref name="arrayIndex" /> ma wartość większą lub równą długości tablicy <paramref name="array" />.— lub — Liczba elementów w obiekcie źródłowym <see cref="T:System.Collections.Generic.ICollection`1" /> jest większa niż dostępna ilość miejsca od parametru <paramref name="arrayIndex" /> do końca tablicy docelowej. — lub — Typu <paramref name="T" /> nie można automatycznie rzutować na typ tablicy docelowej.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Pobiera liczbę elementów w słowniku integratorów modeli.</summary>
      <returns>Liczba elementów w słowniku integratorów modeli.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Pobiera lub ustawia domyślnego integratora modelu.</summary>
      <returns>Domyślny integrator modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Pobiera integratora modelu dla określonego typu.</summary>
      <returns>Integrator modelu.</returns>
      <param name="modelType">Typ modelu do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Pobiera integratora modelu dla określonego typu lub pobiera domyślnego integratora modelu.</summary>
      <returns>Integrator modelu.</returns>
      <param name="modelType">Typ modelu do pobrania.</param>
      <param name="fallbackToDefault">Wartość true, aby pobrać domyślnego integratora modelu.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy słownik integratorów modeli jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli słownik integratorów modeli jest tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Pobiera lub ustawia określony klucz w obiekcie z zaimplementowanym interfejsem <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Klucz określonego elementu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze ze słownika integratorów modeli.</summary>
      <returns>Kolekcja zawierająca klucze ze słownika integratorów modeli.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Usuwa pierwsze wystąpienie określonego elementu ze słownika integratorów modeli.</summary>
      <returns>Wartość true, jeśli parametr <paramref name="item" /> zostanie pomyślnie usunięty ze słownika integratorów modeli, a w przeciwnym razie — false.Ta metoda zwraca też wartość false, jeśli parametr <paramref name="item" /> nie zostanie znaleziony w słowniku integratorów modeli.</returns>
      <param name="item">Obiekt, który ma zostać usunięty z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Usuwa element o określonym kluczu ze słownika integratorów modeli.</summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — false.Ta metoda zwraca też wartość false, jeśli parametr <paramref name="key" /> nie zostanie znaleziony w słowniku integratorów modeli.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający służący do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Pobiera wartość skojarzoną z określonym kluczem.</summary>
      <returns>Wartość true, jeśli obiekt z zaimplementowanym interfejsem <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Ta metoda zwraca wartość skojarzoną z określonym kluczem, jeśli klucz został znaleziony, a w przeciwnym przypadku — wartość domyślną typu parametru <paramref name="value" />.Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości ze słownika integratorów modeli.</summary>
      <returns>Kolekcja zawierająca wartości ze słownika integratorów modeli.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Reprezentuje kolekcję dostawcy integratorów modeli.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> przy użyciu listy dostawców integratorów modeli.</summary>
      <param name="list">Lista dostawców integratorów modeli.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Zwraca integratora modelu określonego typu.</summary>
      <returns>Integrator modelu określonego typu.</returns>
      <param name="modelType">Typ integratora modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Wstawia dostawcę integratorów modeli do klasy ModelBinderProviderCollection w określonym indeksie.</summary>
      <param name="index">Indeks.</param>
      <param name="item">Dostawca integratorów modeli.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>Usuwa element w określonym indeksie kolekcji.</summary>
      <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Zamienia element dostawcy integratorów modeli w określonym indeksie.</summary>
      <param name="index">Indeks.</param>
      <param name="item">Dostawca integratorów modeli.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Udostępnia kontener dla dostawców integratorów modelu.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Udostępnia punkt rejestracji dla dostawców integratorów modeli na potrzeby aplikacji niekorzystających z iniekcji zależności.</summary>
      <returns>Kolekcja dostawców integratorów modeli.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Umożliwia globalny dostęp do integratorów modeli aplikacji.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Pobiera integratorów modeli aplikacji.</summary>
      <returns>Integratorzy modeli aplikacji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Udostępnia kontekst, w którym działa integrator modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBindingContext" /> przy użyciu kontekstu powiązania.</summary>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Pobiera lub ustawia wartość wskazującą, czy integrator powinien używać pustego prefiksu.</summary>
      <returns>Wartość true, jeśli integrator powinien używać pustego prefiksu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Pobiera lub ustawia model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Pobiera lub ustawia metadane modelu.</summary>
      <returns>Metadane modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Pobiera lub ustawia nazwę modelu.</summary>
      <returns>Nazwa modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Pobiera lub ustawia stan modelu.</summary>
      <returns>Stan modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Pobiera lub ustawia typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Pobiera lub ustawia filtr właściwości.</summary>
      <returns>Filtr właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Pobiera metadane właściwości.</summary>
      <returns>Metadane właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Pobiera lub ustawia dostawcę wartości.</summary>
      <returns>Dostawca wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Reprezentuje błąd występujący podczas wiązania modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" /> przy użyciu określonego wyjątku.</summary>
      <param name="exception">Wyjątek.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" /> przy użyciu określonego wyjątku i komunikatu o błędzie.</summary>
      <param name="exception">Wyjątek.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" /> przy użyciu określonego komunikatu o błędzie.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Pobiera lub ustawia komunikat o błędzie.</summary>
      <returns>Komunikat o błędzie.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Kolekcja wystąpień klasy <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Dodaje określony obiekt <see cref="T:System.Exception" /> do kolekcji błędów modelu.</summary>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów modelu.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Udostępnia kontener dla wspólnych metadanych, dla klasy <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> oraz klasy <see cref="T:System.Web.Mvc.ModelValidator" /> na potrzeby modelu danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">Dostawca.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Pobiera słownik zawierający dodatkowe metadane na temat modelu.</summary>
      <returns>Słownik zawierający dodatkowe metadane na temat modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Container">
      <summary>Odwołanie do obiektu kontenera modelu.Będzie miało wartość inną niż null, jeśli model reprezentuje właściwość.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Pobiera lub ustawia typ kontenera dla modelu.</summary>
      <returns>Typ kontenera dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Pobiera lub ustawia wartość wskazującą, czy puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null.</summary>
      <returns>Wartość true, jeśli puste ciągi ogłaszane zwrotnie w formularzach powinny być konwertowane na wartość null, a w przeciwnym razie wartość false.Wartością domyślną jest true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Pobiera lub ustawia metainformacje o typie danych. </summary>
      <returns>Metainformacje o typie danych. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>Wartość domyślna kolejności, wynosząca 10000.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu.Wartością domyślną jest null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Pobiera lub ustawia ciąg formatu wyświetlania dla modelu.</summary>
      <returns>Ciąg formatu wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Pobiera lub ustawia nazwę wyświetlaną modelu.</summary>
      <returns>Nazwa wyświetlana modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Pobiera lub ustawia ciąg formatu edytowania dla modelu.</summary>
      <returns>Ciąg formatu edytowania dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>Zwraca metadane z parametru <see cref="T:System.Linq.Expressions.Expression" /> dla modelu.</summary>
      <returns>Metadane.</returns>
      <param name="expression">Wyrażenie identyfikujące model.</param>
      <param name="viewData">Słownik danych widoku.</param>
      <typeparam name="TParameter">Typ parametru.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Pobiera metadane z parametru wyrażenia dla modelu.</summary>
      <returns>Metadane dla modelu.</returns>
      <param name="expression">Wyrażenie identyfikujące model.</param>
      <param name="viewData">Słownik danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Pobiera nazwę wyświetlaną dla modelu.</summary>
      <returns>Nazwa wyświetlana dla modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Zwraca prosty opis modelu.</summary>
      <returns>Prosty opis modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów weryfikacji dla modelu.</summary>
      <returns>Lista modułów weryfikacji dla modelu.</returns>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</summary>
      <returns>Wartość true, jeśli skojarzone elementy HTML zawierające ten obiekt modelu powinny być dołączone do obiektu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest typem złożonym.</summary>
      <returns>Wartość wskazująca, czy w ramach platformy MVC model jest uznawany za typ złożony.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Pobiera wartość wskazującą, czy dany typ może przyjmować wartość null.</summary>
      <returns>Wartość true, jeśli dany typ może przyjmować wartość null, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli model jest przeznaczony tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest wymagany.</summary>
      <returns>Wartość true, jeśli model jest wymagany, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Pobiera wartość modelu.</summary>
      <returns>Wartość modelu.Aby uzyskać więcej informacji o klasie <see cref="T:System.Web.Mvc.ModelMetadata" />, zobacz wpis ASP.NET MVC 2 Templates, Part 2: ModelMetadata w blogu Brada Wilsona.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Pobiera typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Pobiera lub ustawia ciąg wyświetlany w przypadku wartości null.</summary>
      <returns>Ciąg wyświetlany w przypadku wartości null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Pobiera lub ustawia wartość, która reprezentuje porządek bieżących metadanych.</summary>
      <returns>Wartość porządku bieżących metadanych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Pobiera kolekcję obiektów metadanych modelu opisujących właściwości modelu.</summary>
      <returns>Kolekcja obiektów metadanych modelu opisujących właściwości modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Pobiera nazwę właściwości.</summary>
      <returns>Nazwa właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Pobiera lub ustawia dostawcę.</summary>
      <returns>Dostawca.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy weryfikacja żądania jest włączona.</summary>
      <returns>Wartość true, jeśli weryfikacja żądania jest włączona, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Pobiera lub ustawia krótką nazwę wyświetlaną.</summary>
      <returns>Krótka nazwa wyświetlana.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Pobiera lub ustawia wartość wskazującą, czy właściwość powinna być wyświetlana w widokach tylko do odczytu, takich jak widoki list i szczegółów.</summary>
      <returns>Wartość true, jeśli model powinien być wyświetlany w widokach tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model powinien być wyświetlany w widokach edytowalnych.</summary>
      <returns>Wartość true, jeśli model powinien być wyświetlany w widokach edytowalnych, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Pobiera lub ustawia prosty ciąg wyświetlania dla modelu.</summary>
      <returns>Prosty ciąg wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Pobiera lub ustawia wskazówkę z sugestią, którego szablonu użyć dla tego modelu.</summary>
      <returns>Wskazówka z sugestią, którego szablonu użyć dla tego modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Pobiera lub ustawia wartość, której można użyć jako znaku wodnego.</summary>
      <returns>Znak wodny.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Udostępnia abstrakcyjną klasę podstawową dla niestandardowego dostawcy metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>W przypadku zastąpienia w klasie pochodnej inicjuje nowe wystąpienie obiektu pochodzącego od klasy <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Pobiera obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla każdej właściwości modelu.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla każdej właściwości modelu.</returns>
      <param name="container">Kontener.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Pobiera metadane dla określonej właściwości.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla właściwości.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyName">Właściwość, dla której ma zostać pobrany model metadanych.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Pobiera metadane dla określonej metody dostępu modelu i typu modelu.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla określonej metody dostępu modelu i typu modelu.</returns>
      <param name="modelAccessor">Metoda dostępu modelu.</param>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Udostępnia kontener dla bieżącego wystąpienia obiektu <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Pobiera lub ustawia bieżący obiekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
      <returns>Bieżący obiekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Hermetyzuje stan wiązania modelu we właściwości argumentu metody akcji lub samym argumencie.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ModelErrorCollection" /> zawierający wszystkie błędy, które wystąpiły podczas tworzenia powiązania modelu.</summary>
      <returns>Błędy.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" /> hermetyzujący wartość powiązaną podczas tworzenia powiązania modelu.</summary>
      <returns>Wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Reprezentuje stan próby powiązania przesłanego formularza z metodą akcji, który obejmuje informacje dotyczące weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelStateDictionary" /> przy użyciu wartości skopiowanych z określonego słownika stanu modelu.</summary>
      <param name="dictionary">Słownik stanu modelu.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Dodaje określony element do słownika stanu modelu.</summary>
      <param name="item">Obiekt, który ma zostać dodany do słownika stanu modelu.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Dodaje element o określonym kluczu i wartości do słownika stanu modelu.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element z określonym kluczem już istnieje w słowniku stanu modelu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Dodaje określony błąd modelu do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Usuwa wszystkie elementy ze słownika stanu modelu.</summary>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Sprawdza, czy słownik stanu modelu zawiera określoną wartość.</summary>
      <returns>Wartość true, jeśli parametr <paramref name="item" /> zostanie znaleziony w słowniku stanu modelu, a w przeciwnym razie — false.</returns>
      <param name="item">Obiekt, który ma zostać zlokalizowany w słowniku stanu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Sprawdza, czy słownik stanu modelu zawiera określony klucz.</summary>
      <returns>Wartość true, jeśli słownik stanu modelu zawiera określony klucz, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz, który ma zostać zlokalizowany w słowniku stanu modelu. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Kopiuje elementy ze słownika stanu modelu do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Jednowymiarowa tablica, która jest lokalizacją docelową elementów skopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.Indeksowanie tablicy musi rozpoczynać się od zera.</param>
      <param name="arrayIndex">Liczony od elementu zerowego indeks parametru <paramref name="array" />, od którego rozpocznie się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> ma wartość mniejszą niż 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.— lub — Parametr <paramref name="arrayIndex" /> ma wartość większą lub równą długości tablicy <paramref name="array" />.— lub — Liczba elementów w kolekcji źródłowej jest większa niż dostępna ilość miejsca od parametru <paramref name="arrayIndex" /> do końca docelowej tablicy <paramref name="array" />.— lub — Typ <paramref name="T" /> nie może być automatycznie rzutowany na typ docelowej tablicy <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Pobiera liczbę par klucz/wartość zawartych w kolekcji.</summary>
      <returns>Liczba par klucz/wartość w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest przeznaczona tylko do odczytu.</summary>
      <returns>Wartość true, jeśli kolekcja jest przeznaczona tylko do odczytu; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Pobiera wartość wskazującą, czy to wystąpienie słownika stanu modelu jest prawidłowe.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest prawidłowe, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Sprawdza, czy istnieją obiekty <see cref="T:System.Web.Mvc.ModelError" /> skojarzone z określonym kluczem bądź używające go jako prefiksu.</summary>
      <returns>Wartość true, jeśli słownik stanu modelu zawiera wartość skojarzoną z określonym kluczem, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</summary>
      <returns>Element stanu modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze ze słownika.</summary>
      <returns>Kolekcja zawierająca klucze słownika stanu modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Kopiuje wartość z określonego obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> do tego słownika, zastępując istniejące wartości w przypadku takich samych kluczy.</summary>
      <param name="dictionary">Słownik.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Usuwa pierwsze wystąpienie określonego obiektu ze słownika stanu modelu.</summary>
      <returns>Wartość true, jeśli parametr <paramref name="item" /> zostanie pomyślnie usunięty ze słownika stanu modelu, a w przeciwnym razie — false.Ta metoda zwraca też wartość false, jeśli parametr <paramref name="item" /> nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="item">Obiekt, który ma zostać usunięty ze słownika stanu modelu.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Usuwa element o określonym kluczu ze słownika stanu modelu.</summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — false.Ta metoda zwraca też wartość false, jeśli parametr <paramref name="key" /> nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Ustawia wartość dla określonego klucza przy użyciu podanego słownika dostawcy wartości.</summary>
      <param name="key">Klucz.</param>
      <param name="value">Wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Próbuje pobrać wartość skojarzoną z określonym kluczem.</summary>
      <returns>Wartość true, jeśli obiekt z zaimplementowanym interfejsem <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Ta metoda zwraca wartość skojarzoną z określonym kluczem, jeśli klucz został znaleziony, a w przeciwnym przypadku — wartość domyślną typu parametru <paramref name="value" />.Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości ze słownika.</summary>
      <returns>Kolekcja zawierająca wartości słownika stanu modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Udostępnia kontener dla wyniku weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Pobiera lub ustawia nazwę elementu członkowskiego.</summary>
      <returns>Nazwa elementu członkowskiego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Pobiera lub ustawia komunikat o wyniku weryfikacji.</summary>
      <returns>Komunikat o wyniku weryfikacji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Udostępnia klasę podstawową dla implementacji logiki weryfikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Metoda wywoływana z konstruktorów w klasach pochodnych w celu zainicjowania klasy <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Metadane.</param>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Pobiera kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>Po zaimplementowaniu w klasie pochodnej zwraca metadane dla weryfikacji klienta.</summary>
      <returns>Metadane dla weryfikacji klienta.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca złożony moduł weryfikacji modelu dla danego modelu.</summary>
      <returns>Złożony moduł weryfikacji modelu dla danego modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Pobiera lub ustawia wartość określającą, czy właściwość modelu jest wymagana.</summary>
      <returns>Wartość true, jeśli właściwość modelu jest wymagana, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Pobiera metadane modułu weryfikacji modelu.</summary>
      <returns>Metadane dla modułu weryfikacji modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>Po zaimplementowaniu w klasie pochodnej weryfikuje dany obiekt.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="container">Kontener.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Udostępnia listę modułów weryfikacji modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów weryfikacji.</summary>
      <returns>Lista modułów weryfikacji.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Reprezentuje kolekcję dostawcy modułów weryfikacji modeli.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> przy użyciu listy dostawców weryfikacji modelu.</summary>
      <param name="list">Lista dostawców weryfikacji modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca listę modułów weryfikacji modelu.</summary>
      <returns>Lista modułów weryfikacji modelu.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Wstawia dostawcę modułów weryfikacji modelu do kolekcji.</summary>
      <param name="index">Liczony od elementu zerowego indeks, w którym powinien zostać wstawiony element.</param>
      <param name="item">Obiekt dostawcy modułów weryfikacji modelu do wstawienia.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>Usuwa element w określonym indeksie kolekcji.</summary>
      <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Zamienia element dostawcy modułów weryfikacji modelu w określonym indeksie.</summary>
      <param name="index">Liczony od elementu zerowego indeks elementu dostawcy modułów weryfikacji modelu do zamiany.</param>
      <param name="item">Nowa wartość elementu dostawcy modułów weryfikacji modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Udostępnia kontener dla bieżącego dostawcy weryfikacji.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Pobiera kolekcję dostawców weryfikacji modelu.</summary>
      <returns>Kolekcja dostawców weryfikacji modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Reprezentuje listę, z której użytkownicy mogą wybrać więcej niż jeden element.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" /> przy użyciu określonych elementów do dołączenia do listy.</summary>
      <param name="items">Elementy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" /> przy użyciu określonych elementów do dołączenia do listy i wybranych wartości.</summary>
      <param name="items">Elementy.</param>
      <param name="selectedValues">Wybrane wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelect przy użyciu elementów do dołączenia do listy, wybranych wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="selectedValues">Pole wybranych wartości.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" /> przy użyciu elementów do dołączenia do listy, pola wartości danych i pola tekstu danych.</summary>
      <param name="items">Elementy.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" /> przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych i wybranych wartości.</summary>
      <param name="items">Elementy.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <param name="selectedValues">Wybrane wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelectList przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych, wybranych wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Pole wybranych wartości.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelectList przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych i pola grupy danych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelectList przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych, pola grupy danych i wybranych wartości.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Pole wybranych wartości.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelectList przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych, pola grupy danych, wybranych wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Pole wybranych wartości.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy MultiSelectList przy użyciu elementów do dołączenia do listy, pola wartości danych, pola tekstu danych, pola grupy danych, wybranych wartości, wartości wyłączonych i wyłączonych grup.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Pole wybranych wartości.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Grupy wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataGroupField">
      <summary>Pobiera pole grupy danych.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Pobiera lub ustawia pole tekstowe danych.</summary>
      <returns>Pole tekstowe danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Pobiera lub ustawia pole wartości danych.</summary>
      <returns>Pole wartości danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledGroups">
      <summary>Pobiera grupy wyłączone.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledValues">
      <summary>Pobiera wartości wyłączone.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Pobiera lub ustawia elementy listy.</summary>
      <returns>Elementy listy.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Pobiera lub ustawia wybrane wartości.</summary>
      <returns>Wybrane wartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający służący do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>W przypadku zaimplementowania w klasie pochodnej udostępnia klasę metadanych zawierającą odwołanie do implementacji co najmniej jednego interfejsu filtru, kolejności filtrowania i zakresu filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Inicjuje wystąpienie klasy <see cref="T:System.Web.Mvc.MvcFilter" />, określa kolejność filtrów oraz określa, czy można używać wielu filtrów.</summary>
      <param name="allowMultiple">Wartość true, jeśli można używać wielu filtrów tego samego typu, a w przeciwnym razie — false.</param>
      <param name="order">Kolejność filtrowania.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Pobiera wartość wskazującą, czy można określić więcej niż jedno wystąpienie atrybutu filtru.</summary>
      <returns>Wartość true, jeśli jest dozwolone więcej niż jedno wystąpienie atrybutu filtru, a w przeciwnym razie — false.Narzędzia<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Pobiera wartość wskazującą kolejność stosowania filtru.</summary>
      <returns>Wartość wskazująca kolejność stosowania filtru.Narzędzia<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Wybiera kontrolera, który przetworzy żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Dodaje nagłówek wersji, używając określonego kontekstu HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan obiektu asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania przy użyciu kontekstu podstawowego HTTP.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan obiektu asynchronicznego.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Pobiera lub ustawia wartość wskazującą, czy nagłówek odpowiedzi MVC jest wyłączony.</summary>
      <returns>Wartość true, jeśli nagłówek odpowiedzi MVC jest wyłączony, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez platformę ASP.NET po zakończeniu asynchronicznego przetwarzania żądania.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Pobiera wartość określającą, czy inne żądanie może używać wystąpienia <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>Wartość true, jeśli wystąpienie <see cref="T:System.Web.IHttpHandler" /> może być ponownie używane, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Zawiera nazwę nagłówka wersji platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Przetwarza żądanie, używając określonego kontekstu żądania HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Przetwarza żądanie, używając określonego kontekstu podstawowego żądania HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Pobiera kontekst żądania.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania przy użyciu kontekstu podstawowego HTTP.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="context">Kontekst HTTP.</param>
      <param name="cb">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="extraData">Dane.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez platformę ASP.NET po zakończeniu asynchronicznego przetwarzania żądania.</summary>
      <param name="result">Wynik asynchroniczny.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Pobiera wartość określającą, czy inne żądanie może używać wystąpienia <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>Wartość true, jeśli wystąpienie <see cref="T:System.Web.IHttpHandler" /> może być ponownie używane, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Umożliwia przetwarzanie żądań sieci Web HTTP przez niestandardowy program obsługi HTTP, w którym zaimplementowano interfejs <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Obiekt <see cref="T:System.Web.HttpContext" /> udostępniający odwołania do wewnętrznych obiektów serwera (na przykład Request, Response, Session oraz Server), używane do obsługi żądań HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Reprezentuje ciąg kodowany w formacie HTML, który nie powinien zostać ponownie zakodowany.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Ciąg do utworzenia.Jeśli nie zostanie przypisana żadna wartość, obiekt zostanie utworzony przy użyciu pustego ciągu.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Tworzy ciąg kodowany w formacie HTML przy użyciu określonej wartości tekstowej.</summary>
      <returns>Ciąg kodowany w formacie HTML.</returns>
      <param name="value">Wartość ciągu do utworzenia.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Zawiera pusty ciąg HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Określa, czy dany ciąg ma zawartość, czy jest pusty lub ma wartość null.</summary>
      <returns>Wartość true, jeśli ciąg jest pusty lub ma wartość null, a w przeciwnym razie — false.</returns>
      <param name="value">Ciąg.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Weryfikuje i przetwarza żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Podstawowy kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez platformę ASP.NET po zakończeniu asynchronicznego przetwarzania żądania.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez platformę ASP.NET w celu rozpoczęcia asynchronicznego przetwarzania żądania.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="context">Kontekst.</param>
      <param name="cb">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="extraData">Obiekt zawierający dane.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez platformę ASP.NET po zakończeniu asynchronicznego przetwarzania żądania.</summary>
      <param name="result">Stan operacji asynchronicznych.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Weryfikuje i przetwarza żądanie HTTP.</summary>
      <param name="httpHandler">Program obsługi HTTP.</param>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Tworzy obiekt zawierający implementację interfejsu IHttpHandler i przekazuje do niego kontekst żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcRouteHandler" /> przy użyciu określonego obiektu kontrolera fabryki.</summary>
      <param name="controllerFactory">Fabryka kontrolerów.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Zwraca program obsługi HTTP, używając określonego kontekstu HTTP.</summary>
      <returns>Program obsługi HTTP.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Zwraca zachowanie sesji.</summary>
      <returns>Zachowanie sesji.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Zwraca program obsługi HTTP, używając określonego kontekstu żądania.</summary>
      <returns>Program obsługi HTTP.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Tworzy wystąpienia plików <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Tworzy hosta aparatu Razor.</summary>
      <returns>Host aparatu Razor.</returns>
      <param name="virtualPath">Ścieżka wirtualna do pliku docelowego.</param>
      <param name="physicalPath">Ścieżka fizyczna do pliku docelowego.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Rozszerza obiekt NameValueCollection, tak aby można było skopiować kolekcję do określonego katalogu.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Kopiuje określoną kolekcję do określonej lokalizacji docelowej.</summary>
      <param name="collection">Kolekcja.</param>
      <param name="destination">Lokalizacja docelowa.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Kopiuje określoną kolekcję do określonej lokalizacji docelowej i opcjonalnie zamienia wcześniejsze wpisy.</summary>
      <param name="collection">Kolekcja.</param>
      <param name="destination">Lokalizacja docelowa.</param>
      <param name="replaceEntries">Wartość true, jeśli wcześniejsze wpisy mają zostać zamienione, a w przeciwnym razie — false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Reprezentuje klasę podstawową dla dostawców wartości, których wartości pochodzą z obiektu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> przy użyciu określonej kolekcji, która nie została zweryfikowana.</summary>
      <param name="collection">Kolekcja zawierająca wartości używane do inicjowania dostawcy.</param>
      <param name="unvalidatedCollection">Kolekcja zawierająca wartości używane do inicjowania dostawcy.Ta kolekcja nie zostanie zweryfikowana.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Inicjuje dostawcę kolekcji wartości nazw.</summary>
      <param name="collection">Kolekcja wartości kluczy z żądania.</param>
      <param name="unvalidatedCollection">Niezweryfikowana kolekcja wartości kluczy z żądania.</param>
      <param name="culture">Kultura, z którą mają zostać użyte wartości.</param>
      <param name="jQueryToMvcRequestNormalizationRequired">Żądanie POST jQuery podczas przesyłania złożonych obiektów Javascript do serwera nie przeprowadza kodowania w sposób zrozumiały dla platformy MVC.Ta flaga powinna być ustawiona, jeśli żądanie należy znormalizować do formularza MVC: https://aspnetwebstack.codeplex.com/workitem/1564.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Kolekcja zawierająca wartości używane do inicjowania dostawcy.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze, używając określonego prefiksu.</summary>
      <returns>Klucze.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza i dyrektywy weryfikacji.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz.</param>
      <param name="skipValidation">Wartość true, jeśli weryfikacja ma być pomijana, a w przeciwnym razie — false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Udostępnia otokę udogadniającą dla atrybutu <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Reprezentuje atrybut używany do określania, że metoda kontrolera nie jest metodą akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Określa, czy atrybut oznacza metodę, która nie jest metodą akcji, używając określonego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli atrybut oznacza poprawną metodę, która nie jest metodą akcji; w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Reprezentuje atrybut używany do oznaczenia metody akcji, której dane wyjściowe będą buforowane.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Pobiera lub ustawia nazwę profilu pamięci podręcznej.</summary>
      <returns>Nazwa profilu pamięci podręcznej.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Pobiera lub ustawia pamięć podręczną akcji podrzędnej.</summary>
      <returns>Pamięć podręczna akcji podrzędnej.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Pobiera lub ustawia czas buforowania (w sekundach).</summary>
      <returns>Czas buforowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca wartość wskazującą, czy aktywna jest pamięć podręczna akcji podrzędnej.</summary>
      <returns>Wartość true, jeśli pamięć podręczna akcji podrzędnej jest aktywna, w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Pobiera lub ustawia lokalizację.</summary>
      <returns>Lokalizacja.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ma być przechowywana pamięć podręczna.</summary>
      <returns>Wartość true, jeśli ma być zapisana pamięć podręczna, w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> i obsługuje infrastrukturę ASP.NET MVC.Metoda nie jest przeznaczona do bezpośredniego użycia z poziomu kodu.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> i obsługuje infrastrukturę ASP.NET MVC.Metoda nie jest przeznaczona do bezpośredniego użycia z poziomu kodu.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> i obsługuje infrastrukturę ASP.NET MVC.Metoda nie jest przeznaczona do bezpośredniego użycia z poziomu kodu.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> i obsługuje infrastrukturę ASP.NET MVC.Metoda nie jest przeznaczona do bezpośredniego użycia z poziomu kodu.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru, który hermetyzuje informacje w celu użycia atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Pobiera lub ustawia zależność SQL.</summary>
      <returns>Zależność SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Pobiera lub ustawia kodowanie zależne od zawartości.</summary>
      <returns>Kodowanie zależne od zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Pobiera lub ustawia wartość atrybutu VaryByCustom.</summary>
      <returns>Wartość atrybutu VaryByCustom.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Pobiera lub ustawia wartość atrybutu VaryByHeader.</summary>
      <returns>Wartość atrybutu VaryByHeader.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Pobiera lub ustawia wartość atrybutu VaryByParam.</summary>
      <returns>Wartość atrybutu VaryByParam.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>Reprezentuje atrybuty skojarzone z filtrem zastępowania.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Pobiera filtry do zastąpienia tego wystąpienia.</summary>
      <returns>Filtry do zastąpienia tego wystąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>Reprezentuje atrybuty skojarzone z uwierzytelnianiem.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>Pobiera filtry do zastąpienia tego wystąpienia.</summary>
      <returns>Filtry do zastąpienia tego wystąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>Reprezentuje atrybuty skojarzone z autoryzacją.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Pobiera filtry do zastąpienia tego wystąpienia.</summary>
      <returns>Filtry do zastąpienia tego wystąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>Reprezentuje atrybuty skojarzone z filtrem wyjątku.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>Pobiera filtry do zastąpienia tego wystąpienia.</summary>
      <returns>Filtry do zastąpienia tego wystąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>Reprezentuje atrybuty skojarzone z filtrem wyniku.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>Pobiera filtry do zastąpienia tego wystąpienia.</summary>
      <returns>Filtry do zastąpienia tego wystąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Hermetyzuje informacje na potrzeby wiązania parametrów metod akcji z modelem danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Pobiera integrator modelu.</summary>
      <returns>Integrator modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Pobiera listę rozdzielonych przecinkami nazw właściwości, dla których wyłączono wiązania.</summary>
      <returns>Lista wykluczania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Pobiera listę rozdzielonych przecinkami nazw właściwości, dla których włączono wiązania.</summary>
      <returns>Lista dołączania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Pobiera prefiks używany, gdy platforma MVC wiąże wartość z parametrem akcji lub właściwością modelu.</summary>
      <returns>Prefiks.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Zawiera informacje opisujące parametr.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Pobiera deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Pobiera informacje o wiązaniu.</summary>
      <returns>Informacje o wiązaniu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną parametru.</summary>
      <returns>Wartość domyślna parametru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Wskazuje, czy dla tego elementu członkowskiego zdefiniowano co najmniej jedno wystąpienie typu atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano typ atrybutu niestandardowego, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Reprezentuje klasę podstawową używaną do wysyłania widoku częściowego na potrzeby odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ViewEngineResult" /> używany do renderowania widoku.</summary>
      <returns>Wynik aparatu widoku.</returns>
      <param name="context">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Podczas próby znalezienia widoku podjętej przez metodę wystąpił błąd.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Udostępnia punkt rejestracji dla kodu uruchomienia wstępnej aplikacji ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Rejestruje kod uruchomienia wstępnej aplikacji Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Reprezentuje dostawcę wartości dla ciągów zapytania zawartych w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości ciągu zapytania.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości ciągu zapytania.</returns>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut zakresu.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji klienta dotyczących sprawdzania zakresu.</summary>
      <returns>Lista reguł weryfikacji klienta dotyczących sprawdzania zakresu.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Reprezentuje klasę używaną do tworzenia widoków o składni Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="layoutPath">Układ strony wzorcowej.</param>
      <param name="runViewStartPages">Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</param>
      <param name="viewStartFileExtensions">Zestaw rozszerzeń, które będą używane podczas wyszukiwania plików początkowych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorView" /> przy użyciu aktywatora strony widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="layoutPath">Układ strony wzorcowej.</param>
      <param name="runViewStartPages">Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</param>
      <param name="viewStartFileExtensions">Zestaw rozszerzeń, które będą używane podczas wyszukiwania plików początkowych widoku.</param>
      <param name="viewPageActivator">Aktywator strony widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Pobiera układ strony wzorcowej.</summary>
      <returns>Układ strony wzorcowej.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Renderuje określony kontekst widoku przy użyciu określonego składnika zapisywania i wystąpienia <see cref="T:System.Web.Mvc.WebViewPage" />.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="writer">Składnik zapisywania używany do renderowania widoku na potrzeby odpowiedzi.</param>
      <param name="instance">Wystąpienie elementu <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Pobiera wartość wskazującą, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</summary>
      <returns>Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Pobiera lub ustawia zestaw rozszerzeń plików, które będą używane podczas wyszukiwania plików początkowych widoku.</summary>
      <returns>Zestaw rozszerzeń plików, które będą używane podczas wyszukiwania plików początkowych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Reprezentuje aparat widoku umożliwiający renderowanie strony sieci Web używającej składni ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorViewEngine" /> przy użyciu aktywatora strony widoku.</summary>
      <param name="viewPageActivator">Aktywator strony widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy widok częściowy przy użyciu określonego kontekstu kontrolera i określonej ścieżki częściowej.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy widok przy użyciu określonego kontekstu kontrolera i ścieżek widoku oraz widoku głównego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka widoku głównego.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Kontroluje przetwarzanie akcji aplikacji przez przekierowywanie do określonego adresu URL.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">Docelowy adres URL.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> przy użyciu określonego adresu URL i flagi stale przekierowującej.</summary>
      <param name="url">Adres URL.</param>
      <param name="permanent">Wartość wskazująca, czy przekierowanie powinno być stałe.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Pobiera wartość wskazującą, czy przekierowanie powinno być stałe.</summary>
      <returns>Wartość true, jeśli przekierowanie powinno być stałe; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Pobiera lub ustawia docelowy adres URL.</summary>
      <returns>Docelowy adres URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Reprezentuje wynik wykonujący przekierowanie przy użyciu określonego słownika wartości trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> przy użyciu określonej nazwy trasy i wartości trasy.</summary>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> przy użyciu określonej nazwy trasy, wartości trasy i flagi stale przekierowującej.</summary>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="permanent">Wartość wskazująca, czy przekierowanie powinno być stałe.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> przy użyciu określonych wartości trasy.</summary>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy dziedziczący po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Pobiera wartość wskazującą, czy przekierowanie powinno być stałe.</summary>
      <returns>Wartość true, jeśli przekierowanie powinno być stałe; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Pobiera lub ustawia wartości trasy.</summary>
      <returns>Wartości trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Zawiera informacje opisujące odzwierciedlaną metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Informacje dotyczące metody akcji.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="methodInfo" /> lub <paramref name="controllerDescriptor" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Pobiera nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje określony kontekst kontrolera przy użyciu określonych parametrów metody akcji.</summary>
      <returns>Wartość zwracana akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameters" /> lub <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę z atrybutami niestandardowymi zdefiniowanymi dla tego elementu członkowskiego z wyjątkiem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę z identyfikowanymi według typu atrybutami niestandardowymi zdefiniowanymi dla tego elementu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Wartość true, aby użyć pamięci podręcznej; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Pobiera parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Pobiera selektory akcji.</summary>
      <returns>Selektory akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Wskazuje, czy dla tego elementu członkowskiego zdefiniowano co najmniej jedno wystąpienie typu atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano typ atrybutu niestandardowego, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Pobiera lub ustawia informacje dotyczące metody akcji.</summary>
      <returns>Informacje dotyczące metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Pobiera unikatowy identyfikator dla odzwierciedlanego deskryptora akcji przy użyciu inicjowania z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Zawiera informacje opisujące odzwierciedlany kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Odnajduje określoną akcję dla określonego kontekstu kontrolera.</summary>
      <returns>Informacje o akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Zwraca listę akcji kontrolera.</summary>
      <returns>Lista deskryptorów akcji kontrolera</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Wartość true, aby użyć pamięci podręcznej; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla tego elementu członkowskiego zdefiniowano co najmniej jedno wystąpienie typu atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano typ atrybutu niestandardowego, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Zawiera informacje opisujące odzwierciedlany parametr metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Informacje o parametrze.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameterInfo" /> lub <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Pobiera deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Pobiera informacje o wiązaniu.</summary>
      <returns>Informacje o wiązaniu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną odzwierciedlanego parametru.</summary>
      <returns>Wartość domyślna odzwierciedlanego parametru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutu niestandardowego.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla tego elementu członkowskiego zdefiniowano co najmniej jedno wystąpienie typu atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowano typ atrybutu niestandardowego, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Pobiera lub ustawia informacje o parametrze.</summary>
      <returns>Informacje o parametrze.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut wyrażenia regularnego.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji klienta wyrażenia regularnego.</summary>
      <returns>Lista reguł weryfikacji klienta wyrażenia regularnego.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Udostępnia atrybut używający zdalnego modułu weryfikacji dodatku weryfikacji biblioteki jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy trasy.</summary>
      <param name="routeName">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy metody akcji i nazwy kontrolera.</summary>
      <param name="action">Nazwa metody akcji.</param>
      <param name="controller">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy metody akcji, nazwy kontrolera i nazwy obszaru.</summary>
      <param name="action">Nazwa metody akcji.</param>
      <param name="controller">Nazwa kontrolera.</param>
      <param name="areaName">Nazwa obszaru.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.Web.Mvc.AreaReference)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
      <param name="action">Nazwa trasy.</param>
      <param name="controller">Nazwa kontrolera.</param>
      <param name="areaReference">Znajdź kontroler w elemencie głównym, jeśli <see cref="F:System.Web.Mvc.AreaReference.UseRoot" />.W przeciwnym razie szukaj go w bieżącym obszarze.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Pobiera lub ustawia dodatkowe pola wymagane do weryfikacji.</summary>
      <returns>Dodatkowe pola wymagane do weryfikacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Zwraca ciąg nazw pól weryfikacji rozdzielanych przecinkami.</summary>
      <returns>Ciąg nazw pól weryfikacji rozdzielanych przecinkami.</returns>
      <param name="property">Nazwa właściwości weryfikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Formatuje komunikat o błędzie wyświetlany w przypadku niepowodzenia weryfikacji.</summary>
      <returns>Sformatowany komunikat o błędzie.</returns>
      <param name="name">Nazwa wyświetlana razem z komunikatem o błędzie.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatuje właściwość dla weryfikacji klienta przez poprzedzenie jej znakiem gwiazdki (*) i kropką.</summary>
      <returns>Ciąg.„*.” jest dołączony na początku do właściwości.</returns>
      <param name="property">Właściwość.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę reguł weryfikacji klienta dla właściwości.</summary>
      <returns>Lista reguł zdalnej weryfikacji klienta dla właściwości.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera adres URL wywołania zdalnej weryfikacji.</summary>
      <returns>Adres URL wywołania zdalnej weryfikacji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Pobiera lub ustawia metodę HTTP używaną do zdalnej weryfikacji.</summary>
      <returns>Metoda HTTP używana do zdalnej weryfikacji.Wartość domyślna to „Get”.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Ta metoda zawsze zwraca wartość true.</summary>
      <returns>true</returns>
      <param name="value">Cel weryfikacji.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Pobiera słownik danych trasy.</summary>
      <returns>Słownik danych trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Pobiera kolekcję tras z tabeli tras.</summary>
      <returns>Kolekcja tras z tabeli tras.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Wymagany atrybut.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji klienta wartości wymaganej.</summary>
      <returns>Lista reguł weryfikacji klienta wartości wymaganej.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Reprezentuje atrybut wymuszający ponowne przesłanie niezabezpieczonego żądania HTTP za pomocą protokołu HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Obsługuje niezabezpieczone żądania HTTP wysyłane do metody akcji.</summary>
      <param name="filterContext">Obiekt hermetyzujący informacje wymagane do używania atrybutu <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">Żądanie HTTP zawiera nieprawidłowe zastąpienie metody transferu.Wszystkie żądania GET są uznawane za nieprawidłowe.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Określa, czy żądanie jest zabezpieczone (protokół HTTPS), a jeśli tak nie jest, wywołuje metodę <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Obiekt hermetyzujący informacje wymagane do używania atrybutu <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Udostępnia kontekst dla metody <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="result">Obiekt wyniku.</param>
      <param name="canceled">Wartość true w celu anulowania wykonywania, a w przeciwnym razie wartość false.</param>
      <param name="exception">Obiekt wyjątku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Pobiera lub ustawia wartość określającą, czy anulowano to wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <returns>Wartość true, jeśli anulowano wystąpienie, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość określającą, czy wyjątek został obsłużony.</summary>
      <returns>Wartość true, jeśli wyjątek został obsłużony, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Udostępnia kontekst dla metody <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutingContext" /> przy użyciu określonego kontekstu kontrolera i wyniku akcji.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="result">Wynik akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ta klasa <see cref="T:System.Web.Mvc.ResultExecutingContext" /> ma wartość „cancel”.</summary>
      <returns>Wartość true, jeśli wartość to „cancel”, a w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>Definiuje obszar do ustawienia dla wszystkich tras określonych w tym kontrolerze.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
      <param name="areaName">Nazwa obszaru.Jeśli wartość jest równa null, zostanie podjęta próba wywnioskowania nazwy obszaru na podstawie docelowego obszaru nazw kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>Pobiera nazwę obszaru do ustawienia dla wszystkich tras określonych w kontrolerze.Jeśli wartość jest równa null, zostanie podjęta próba wywnioskowania nazwy obszaru na podstawie docelowego obszaru nazw kontrolera.</summary>
      <returns>Nazwa obszaru do ustawienia dla wszystkich tras określonych w kontrolerze.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>Pobiera prefiks adresu URL do zastosowania do tras w tym obszarze.Domyślnie przyjmowana nazwa obszaru.</summary>
      <returns>Prefiks adresu URL do zastosowania do tras w tym obszarze.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>Miejsce w kontrolerze lub akcji do bezpośredniego ujawnienia za pomocą trasy.W przypadku umieszczenia w kontrolerze dotyczy to akcji, które nie mają żadnego związanego atrybutu System.Web.Mvc.RouteAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteAttribute" /> z określonym szablonem.</summary>
      <param name="template">Wzorzec trasy do dopasowania.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>Pobiera kolejność, według której jest stosowana trasa.</summary>
      <returns>Kolejność, według której jest stosowana trasa.</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Tworzy bezpośrednie wejście dla trasy.</summary>
      <returns>Bezpośrednie wejście dla trasy.</returns>
      <param name="context">Kontekst do użycia podczas generowania trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>Pobiera wzorzec trasy do dopasowania.</summary>
      <returns>Wzorzec do dopasowania.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>Udostępnia rozszerzenia trasowania dla atrybutu kolekcji tras.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="routes">Kolekcja tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="directRouteProvider">Interfejs <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> do użycia na potrzeby mapowania tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="routes">Kolekcja tras.</param>
      <param name="constraintResolver">Element <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> do użycia w celu rozpoznawania ograniczeń w tekście w szablonach tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy zdefiniowane przez atrybuty dla aplikacji.</summary>
      <param name="constraintResolver">Element <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> do użycia w celu rozpoznawania ograniczeń w tekście w szablonach tras.</param>
      <param name="directRouteProvider">Interfejs <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> do użycia na potrzeby mapowania tras.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Rozszerza obiekt <see cref="T:System.Web.Routing.RouteCollection" /> na potrzeby routingu MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca obiekt zawierający informacje o trasie i ścieżce wirtualnej będące wynikiem wygenerowania adresu URL w bieżącym obszarze.</summary>
      <returns>Obiekt zawierający informacje o trasie i ścieżce wirtualnej będące wynikiem wygenerowania adresu URL w bieżącym obszarze.</returns>
      <param name="routes">Obiekt zawierający trasy dla aplikacji.</param>
      <param name="requestContext">Obiekt hermetyzujący informacje o żądanej trasie.</param>
      <param name="name">Nazwa trasy do użycia podczas pobierania informacji o ścieżce URL.</param>
      <param name="values">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca obiekt zawierający informacje o trasie i ścieżce wirtualnej będące wynikiem wygenerowania adresu URL w bieżącym obszarze.</summary>
      <returns>Obiekt zawierający informacje o trasie i ścieżce wirtualnej będące wynikiem wygenerowania adresu URL w bieżącym obszarze.</returns>
      <param name="routes">Obiekt zawierający trasy dla aplikacji.</param>
      <param name="requestContext">Obiekt hermetyzujący informacje o żądanej trasie.</param>
      <param name="values">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignoruje określoną trasę URL dla danej listy dostępnych tras.</summary>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="url">Wzorzec URL trasy do ignorowania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignoruje określoną trasę URL dla danej listy dostępnych tras i listy ograniczeń.</summary>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="url">Wzorzec URL trasy do ignorowania.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mapuje określoną trasę URL.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy i ograniczenia.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy, ograniczenia i przestrzenie nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy i przestrzenie nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia przestrzenie nazw.</summary>
      <returns>Odwołanie do mapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL trasy.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Reprezentuje dostawcę wartości dla danych trasy w obiekcie z implementacją interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Obiekt zawierający informacje o żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia obiektów dostawcy wartości danych trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>Oznacza kontroler prefiksem trasy stosowanym do wszystkich akcji w ramach kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> z określonym prefiksem.</summary>
      <param name="prefix">Prefiks trasy dla kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>Pobiera prefiks trasy.</summary>
      <returns>Prefiks trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Reprezentuje listę, która umożliwia użytkownikom wybór tylko jednego elementu.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" /> przy użyciu elementów określonych dla listy.</summary>
      <param name="items">Elementy.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" /> przy użyciu elementów określonych dla listy i wybranej wartości.</summary>
      <param name="items">Elementy.</param>
      <param name="selectedValue">Wybrana wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy SelectList przy użyciu elementów określonych dla listy, wybranej wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="selectedValue">Wybrana wartość.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" /> przy użyciu elementów określonych dla listy, pola wartości danych i pola tekstowego danych.</summary>
      <param name="items">Elementy.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" /> przy użyciu elementów określonych dla listy, pola wartości danych, pola tekstowego danych i wybranej wartości.</summary>
      <param name="items">Elementy.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <param name="selectedValue">Wybrana wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy SelectList przy użyciu elementów określonych dla listy, pola wartości danych, pola tekstowego danych, wybranej wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Wybrana wartość.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy SelectList przy użyciu elementów określonych dla listy, pola wartości danych, pola tekstowego danych, pola grupy danych i wybranej wartości.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Wybrana wartość.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy SelectList przy użyciu elementów określonych dla listy, pola wartości danych, pola tekstowego danych, pola grupy danych, wybranej wartości i wartości wyłączonych.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Wybrana wartość.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy SelectList przy użyciu elementów określonych dla listy, pola wartości danych, pola tekstowego danych i pola grupy danych.Wybrana wartość, wartości wyłączone i grupy wyłączone.</summary>
      <param name="items">Elementy stosowane do tworzenia poszczególnych elementów <see cref="T:System.Web.Mvc.SelectListItem" /> listy.</param>
      <param name="dataValueField">Pole wartości danych.Służy do dopasowania właściwości Value odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole tekstowe danych.Służy do dopasowania właściwości Text odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole grupy danych.Służy do dopasowania właściwości Group odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Wybrana wartość.Służy do dopasowania właściwości Selected odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Wartości wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Grupy wyłączone.Służy do dopasowania właściwości Disabled odpowiadającego elementu <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Pobiera wartość listy wybraną przez użytkownika.</summary>
      <returns>Wybrana wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListGroup">
      <summary>Reprezentuje element HTML optgroup i jego atrybuty.Lista select obsługuje wiele grup o tej samej nazwie.Są one porównywane pod kątem równości odwołań.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListGroup.#ctor"></member>
    <member name="P:System.Web.Mvc.SelectListGroup.Disabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ten element <see cref="T:System.Web.Mvc.SelectListGroup" /> jest wyłączony.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListGroup.Name">
      <summary>Reprezentuje wartość etykiety elementu optgroup.</summary>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Reprezentuje wybrany element w wystąpieniu klasy <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Disabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ten element <see cref="T:System.Web.Mvc.SelectListItem" /> jest wyłączony.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Group">
      <summary>Reprezentuje element HTML optgroup, w który opakowany jest dany element.Lista select obsługuje wiele grup o tej samej nazwie.Są one porównywane pod kątem równości odwołań.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ten element <see cref="T:System.Web.Mvc.SelectListItem" /> jest wybrany.</summary>
      <returns>Wartość true, jeśli element jest wybrany; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Pobiera lub ustawia tekst wybranego elementu.</summary>
      <returns>Tekst.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Pobiera lub ustawia wartość wybranego elementu.</summary>
      <returns>Wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Określa stan sesji kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SessionStateAttribute" /></summary>
      <param name="behavior">Typ stanu sesji.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Pobieranie zachowania stanu sesji kontrolera.</summary>
      <returns>Zachowanie stanu sesji kontrolera.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Udostępnia dane stanu sesji bieżącemu obiektowi <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Ładuje dane tymczasowe, używając określonego kontekstu kontrolera.</summary>
      <returns>Dane tymczasowe.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas pobierania kontekstu sesji.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje określone wartości w słowniku danych tymczasowych, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="values">Wartości.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas pobierania kontekstu sesji.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Udostępnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut długości ciągu.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł weryfikacji długości ciągu po stronie klienta.</summary>
      <returns>Lista reguł weryfikacji długości ciągu po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Reprezentuje zestaw danych utrwalany tylko między żądaniami.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element z określonym kluczem i określoną wartością do obiektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">W obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" /> istnieje już element z takim samym kluczem.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Usuwa wszystkie elementy z wystąpienia interfejsu <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Określa, czy wystąpienie interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element z danym kluczem.</summary>
      <returns>Wartość true, jeśli wystąpienie interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element z określonym kluczem, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz do zlokalizowania w wystąpieniu interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Określa, czy słownik zawiera daną wartość.</summary>
      <returns>Wartość true, jeśli słownik zawiera określoną wartość, a w przeciwnym razie — false.</returns>
      <param name="value">Wartość.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Pobiera liczbę elementów w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Liczba elementów w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Pobiera moduł wyliczający.</summary>
      <returns>Moduł wyliczający.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia obiekt z określonym kluczem.</summary>
      <returns>Obiekt z określonym kluczem.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Oznacza wszystkie klucze w słowniku do przechowywania.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Oznacza określony klucz w słowniku do przechowywania.</summary>
      <param name="key">Klucz do przechowania w słowniku.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Pobiera obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> zawierający klucze elementów w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Klucze elementów w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Ładuje określony kontekst kontrolera przy użyciu określonego dostawcy danych.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="tempDataProvider">Dostawca danych tymczasowych.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Zwraca obiekt, który zawiera element skojarzony z określonym kluczem, bez oznaczania klucza do usunięcia.</summary>
      <returns>Obiekt, który zawiera element skojarzony z określonym kluczem.</returns>
      <param name="key">Klucz elementu do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Usuwa element o określonym kluczu z obiektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Wartość true, jeśli element został pomyślnie usunięty, a w przeciwnym razie — false.Ta metoda także zwraca wartość false, jeśli klucz <paramref name="key" /> nie zostanie znaleziony w elemencie <see cref="T:System.Collections.Generic.IDictionary`2" />.Wystąpienie.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Zapisuje określony kontekst kontrolera przy użyciu określonego dostawcy danych.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="tempDataProvider">Dostawca danych tymczasowych.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Dodaje określoną parę klucza i wartości do słownika.</summary>
      <param name="keyValuePair">Para klucza i wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Określa, czy sekwencja zawiera określony element, przy użyciu domyślnego modułu porównywania pod kątem równości.</summary>
      <returns>Wartość true, jeśli słownik zawiera określoną parę klucza i wartości, a w przeciwnym razie — false.</returns>
      <param name="keyValuePair">Para klucza i wartości do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiuje parę klucza i wartości do określonej tablicy w określonym indeksie.</summary>
      <param name="array">Tablica docelowa.</param>
      <param name="index">Indeks.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy słownik jest tylko do odczytu.</summary>
      <returns>Wartość true, jeśli słownik jest tylko do odczytu, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Usuwa określoną parę klucza i wartości ze słownika.</summary>
      <returns>Wartość true, jeśli para klucza i wartości została pomyślnie usunięta, a w przeciwnym razie — false.</returns>
      <param name="keyValuePair">Para klucza i wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający służący do iterowania po kolekcji.</summary>
      <returns>Obiekt <see cref="T:System.Collections.IEnumerator" />, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Pobiera wartość elementu z określonym kluczem.</summary>
      <returns>Wartość true, jeśli obiekt z zaimplementowanym interfejsem <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Gdy ta metoda zwróci wartość, w przypadku odnalezienia klucza będzie to wartość skojarzona z określonym kluczem. W przeciwnym razie będzie to wartość domyślna typu parametru <paramref name="value" />.Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Pobiera obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> zawierający wartości w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Wartości elementów w obiekcie z implementacją interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Hermetyzuje informacje dotyczące bieżącego kontekstu szablonu.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Pobiera lub ustawia sformatowaną wartość modelu.</summary>
      <returns>Sformatowana wartość modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Pobiera pełny identyfikator DOM pola, używając określonego atrybutu name HTML.</summary>
      <returns>Pełny identyfikator DOM.</returns>
      <param name="partialFieldName">Wartość atrybutu name HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Pobiera w pełni kwalifikowaną nazwę (łącznie z prefiksem) dla pola przy użyciu określonego atrybutu name HTML.</summary>
      <returns>Nazwa pola z prefiksem.</returns>
      <param name="partialFieldName">Wartość atrybutu name HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Pobiera lub ustawia prefiks pola HTML.</summary>
      <returns>Prefiks pola HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Zawiera liczbę obiektów odwiedzonych przez użytkownika.</summary>
      <returns>Liczba obiektów.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Określa, czy szablon został odwiedzony przez użytkownika.</summary>
      <returns>Wartość true, jeśli szablon został odwiedzony przez użytkownika, a w przeciwnym razie wartość false.</returns>
      <param name="metadata">Obiekt hermetyzujący informacje z opisem modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Zawiera metody do tworzenia w ramach aplikacji adresów URL dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.UrlHelper" /> przy użyciu określonego kontekstu żądania.</summary>
      <param name="requestContext">Obiekt zawierający informacje o bieżącym żądaniu i zgodnej trasie.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.UrlHelper" /> przy użyciu określonego kontekstu żądania i kolekcji tras.</summary>
      <param name="requestContext">Obiekt zawierający informacje o bieżącym żądaniu i zgodnej trasie.</param>
      <param name="routeCollection">Kolekcja tras.</param>
      <exception cref="ArgumentNullException">Parametr <paramref name="requestContext" /> lub <paramref name="routeCollection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>Generuje ciąg do w pełni kwalifikowanego adres URL do metody akcji.</summary>
      <returns>Ciąg do w pełni kwalifikowanego adres URL do metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji i nazwy kontrolera.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji, nazwy kontrolera, wartości trasy i używanego protokołu.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji, używając określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla metody akcji, używając określonej nazwy akcji, nazwy kontrolera, wartości trasy i używanego protokołu.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla metody akcji, używając określonej nazwy akcji, nazwy kontrolera, wartości trasy, używanego protokołu i nazwy hosta.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL do metody akcji dla określonej nazwy akcji i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL do metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Konwertuje wirtualną (względną) ścieżkę na bezwzględną ścieżkę aplikacji.</summary>
      <returns>Ścieżka bezwzględna aplikacji.</returns>
      <param name="contentPath">Ścieżka wirtualna zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Koduje znaki specjalne zawarte w ciągu adresu URL na równoważne encje znaków.</summary>
      <returns>Zakodowany ciąg adresu URL.</returns>
      <param name="url">Tekst do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Zwraca ciąg znaków zawierający adres URL zawartości.</summary>
      <returns>Ciąg znaków zawierający adres URL zawartości.</returns>
      <param name="contentPath">Ścieżka zawartości.</param>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Zwraca ciąg znaków zawierający adres URL.</summary>
      <returns>Ciąg znaków zawierający adres URL.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Fragment.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="routeCollection">Kolekcja trasy.</param>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="includeImplicitMvcValues">Wartość true, jeśli niejawne wartości MVC mają zostać uwzględnione; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Zwraca ciąg znaków zawierający adres URL.</summary>
      <returns>Ciąg znaków zawierający adres URL.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="routeCollection">Kolekcja trasy.</param>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="includeImplicitMvcValues">Wartość true, jeśli niejawne wartości MVC mają zostać uwzględnione; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL dla określonych wartości trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL dla określonych wartości trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>Zwraca wartość wskazującą, czy adres URL jest lokalny.</summary>
      <returns>Wartość true, jeśli adres URL jest lokalny; w przeciwnym razie wartość false.</returns>
      <param name="url">Adres URL.</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Pobiera informacje o żądaniu HTTP zgodnym ze zdefiniowaną trasą.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Pobiera kolekcję zawierającą trasy zarejestrowane dla aplikacji.</summary>
      <returns>Kolekcja trasy.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonej nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używana do generowania adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy przy użyciu nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używana do generowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy przy użyciu nazwy trasy i używanego protokołu.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używana do generowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy przy użyciu nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używana do generowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy przy użyciu określonej nazwy trasy, używanego protokołu i nazwy hosta.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używana do generowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Reprezentuje parametr opcjonalny używany przez klasę <see cref="T:System.Web.Mvc.MvcHandler" /> podczas routingu.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Zawiera wartość tylko do odczytu parametru opcjonalnego.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Zwraca pusty ciąg.Ta metoda jest elementem pomocniczym infrastruktury platformy ASP.NET MVC i nie jest przeznaczona do stosowania bezpośrednio w kodzie.</summary>
      <returns>Pusty ciąg.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Udostępnia adapter obiektu, który można zweryfikować.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Weryfikuje określony obiekt.</summary>
      <returns>Lista wyników weryfikacji.</returns>
      <param name="container">Kontener.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Reprezentuje atrybut używany w celu zapobiegania fałszowaniu żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wywoływane, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Pobiera lub ustawia ciąg zaburzający.</summary>
      <returns>Ciąg zaburzający.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Reprezentuje atrybut używany do oznaczania metod akcji, których dane wejściowe muszą być weryfikowane.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">Wartość true w celu włączenia weryfikacji.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Pobiera lub ustawia wartość określającą, czy ma być włączona weryfikacja.</summary>
      <returns>Wartość true, jeśli jest włączona weryfikacja, a w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wywoływane, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Reprezentuje kolekcję obiektów dostawców wartości dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderCollection" /> i rejestruje określonych dostawców wartości.</summary>
      <param name="list">Lista dostawców wartości do zarejestrowania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>Pobiera klucze, używając określonego prefiksu.</summary>
      <returns>Klucze.</returns>
      <param name="prefix">Prefiks.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza i parametru pominięcia weryfikacji.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <param name="skipValidation">Wartość true, jeśli weryfikacja ma zostać pominięta; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Wstawia określony obiekt dostawcy wartości do kolekcji w określonej lokalizacji indeksu.</summary>
      <param name="index">Liczona od zera lokalizacja indeksu, w której dostawca wartości ma zostać wstawiony do kolekcji.</param>
      <param name="item">Obiekt dostawcy wartości do wstawienia.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Zamienia dostawcę wartości w określonej lokalizacji indeksu na nowego dostawcę wartości.</summary>
      <param name="index">Liczony od zera indeks elementu do zamiany.</param>
      <param name="item">Nowa wartość elementu z określonym indeksem.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Uwaga: Ten interfejs API jest teraz nieaktualny.Reprezentuje słownik dostawców wartości dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Dodaje określony element do kolekcji dostawców wartości.</summary>
      <param name="item">Obiekt do dodania do obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element z określonym kluczem i wartością do kolekcji dostawców wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element, który ma określony klucz, już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Dodaje element z określonym kluczem i wartością do kolekcji dostawców wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element, który ma określony klucz, już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Usuwa wszystkie elementy z kolekcji dostawców wartości.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Określa, czy kolekcja dostawców wartości zawiera określony element.</summary>
      <returns>Wartość true, jeśli element <paramref name="item" /> został znaleziony w kolekcji dostawców wartości; w przeciwnym razie wartość false.</returns>
      <param name="item">Obiekt do zlokalizowania w wystąpieniu klasy <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Określa, czy kolekcja dostawców wartości zawiera element, który ma określony klucz.</summary>
      <returns>Wartość true, jeśli kolekcja dostawców wartości zawiera element, który ma określony klucz; w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz elementu, który ma zostać znaleziony w wystąpieniu klasy <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Pobiera lub ustawia kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Kopiuje elementy kolekcji do tablicy, zaczynając od określonego indeksu.</summary>
      <param name="array">Jednowymiarowa tablica, która jest lokalizacją docelową elementów skopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.Indeksowanie tablicy musi rozpoczynać się od zera.</param>
      <param name="arrayIndex">Liczony od elementu zerowego indeks parametru <paramref name="array" />, od którego rozpocznie się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> ma wartość mniejszą niż 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.— lub —Parametr <paramref name="arrayIndex" /> ma wartość większą lub równą długości tablicy <paramref name="array" />.— lub —Liczba elementów w kolekcji źródłowej jest większa niż dostępna ilość miejsca od parametru <paramref name="arrayIndex" /> do końca docelowej tablicy <paramref name="array" />.— lub —Typu <paramref name="T" /> nie można automatycznie rzutować na typ tablicy docelowej.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest przeznaczona tylko do odczytu.</summary>
      <returns>Wartość true, jeśli kolekcja jest przeznaczona tylko do odczytu; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" />, który ma określony klucz.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Pobiera kolekcję, która zawiera klucze wystąpienia klasy <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekcja, która zawiera klucze obiektu implementującego interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Usuwa pierwsze wystąpienie określonego elementu z kolekcji dostawców wartości.</summary>
      <returns>Wartość true, jeśli element <paramref name="item" /> został pomyślnie usunięty z kolekcji; w przeciwnym razie wartość false.Ta metoda zwraca również wartość false, jeśli parametru <paramref name="item" /> nie odnaleziono w kolekcji.</returns>
      <param name="item">Obiekt, który ma zostać usunięty z wystąpienia klasy <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Usuwa element z określonym kluczem z kolekcji dostawców wartości.</summary>
      <returns>Wartość true, jeśli element został pomyślnie usunięty; w przeciwnym razie wartość false.Ta metoda zwraca także wartość false, jeśli klucz <paramref name="key" /> nie zostanie znaleziony w kolekcji.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający służący do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Określa, czy kolekcja zawiera podany prefiks.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera określony prefiks; w przeciwnym razie wartość false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Zwraca obiekt wartości przy użyciu określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Pobiera wartość elementu z określonym kluczem.</summary>
      <returns>Wartość true, jeśli obiekt z zaimplementowanym interfejsem <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o określonym kluczu, a w przeciwnym razie — false.</returns>
      <param name="key">Klucz elementu do pobrania.</param>
      <param name="value">Gdy ta metoda zwróci wartość, w przypadku odnalezienia klucza będzie to wartość skojarzona z określonym kluczem. W przeciwnym razie będzie to wartość domyślna typu parametru <paramref name="value" />.Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Pobiera kolekcję, która zawiera wartości w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekcja wartości w obiekcie implementującym interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Reprezentuje kontener obiektów fabryki dostawcy wartości.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Pobiera kolekcję fabryk dostawców wartości aplikacji.</summary>
      <returns>Kolekcja obiektów fabryki dostawcy wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Reprezentuje fabrykę do tworzenia obiektów dostawcy wartości.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Reprezentuje kolekcję fabryk dostawców wartości aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> przy użyciu określonej listy fabryk dostawców wartości.</summary>
      <param name="list">Lista fabryk dostawców wartości do zainicjowania dla kolekcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca fabrykę dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt fabryki dostawcy wartości dla określonego kontekstu kontrolera.</returns>
      <param name="controllerContext">Obiekt, który hermetyzuje informacje o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Wstawia określony obiekt fabryki dostawcy wartości w określonej lokalizacji indeksu.</summary>
      <param name="index">Liczona od zera lokalizacja indeksu, w której dostawca wartości ma zostać wstawiony do kolekcji.</param>
      <param name="item">Obiekt fabryki dostawcy wartości do wstawienia.</param>
      <exception cref="[ArgumentNullException]">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>Usuwa element w określonym indeksie obiektu <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="Index" /> ma wartość niższą niż zero.— lub —<paramref name="Index" /> ma wartość równą lub większą niż <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Ustawia określony obiekt fabryki dostawcy wartości w danej lokalizacji indeksu.</summary>
      <param name="index">Liczona od zera lokalizacja indeksu, w której dostawca wartości ma zostać wstawiony do kolekcji.</param>
      <param name="item">Obiekt fabryki dostawcy wartości do ustawienia.</param>
      <exception cref="[ArgumentNullException]">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Reprezentuje wynik powiązania wartości (na przykład z publikacji formularza lub ciągu zapytania) z właściwością argumentu metody akcji lub z samym argumentem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderResult" /> przy użyciu określonej wartości nieprzetworzonej, wartości poddanej próbie i informacji o kulturze.</summary>
      <param name="rawValue">Wartość nieprzetworzona.</param>
      <param name="attemptedValue">Wartość poddana próbie.</param>
      <param name="culture">Kultura.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest konwertowana na ciąg w celu wyświetlenia.</summary>
      <returns>Wartość nieprzetworzona.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Konwertuje wartość hermetyzowaną przez ten wynik na określony typ.</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ docelowy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Konwertuje wartość hermetyzowaną przez ten wynik na określony typ przy użyciu określonych informacji o kulturze..</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ docelowy.</param>
      <param name="culture">Kultura, która ma być użyta w konwersji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Pobiera lub ustawia kulturę.</summary>
      <returns>Kultura.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest dostarczana przez dostawcę wartości.</summary>
      <returns>Wartość nieprzetworzona.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Hermetyzuje informacje dotyczące renderowania widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewContext" /> przy użyciu określonego kontekstu kontrolera, widoku, słownika danych widoku, słownika danych tymczasowych i składnika zapisywania tekstu.</summary>
      <param name="controllerContext">Hermetyzuje informacje dotyczące żądania HTTP.</param>
      <param name="view">Widok do renderowania.</param>
      <param name="viewData">Słownik zawierający dane wymagane do renderowania widoku.</param>
      <param name="tempData">Słownik zawierający dane tymczasowe na potrzeby widoku.</param>
      <param name="writer">Obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</param>
      <exception cref="T:System.ArgumentNullException">Jeden z parametrów ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy włączona jest weryfikacja po stronie klienta.</summary>
      <returns>Wartość true, jeśli weryfikacja po stronie klienta jest włączona; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Pobiera lub ustawia obiekt hermetyzujący informacje wymagane do weryfikacji i przetwarzania danych wejściowych z formularza HTML.</summary>
      <returns>Obiekt hermetyzujący informacje wymagane do weryfikacji i przetwarzania danych wejściowych z formularza HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Zapisuje informacje o weryfikacji klienta w odpowiedzi HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Pobiera dane skojarzone z tym żądaniem, które są dostępne tylko dla jednego żądania.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy włączony jest dyskretny kod JavaScript.</summary>
      <returns>Wartość true, jeśli dyskretny kod JavaScript jest włączony; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationMessageElement">
      <summary>Nazwa elementu stosowanego do opakowywania komunikatu najwyższego poziomu wygenerowanego przez <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> i inne przeciążenia.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationSummaryMessageElement">
      <summary>Nazwa elementu stosowanego do opakowywania komunikatu najwyższego poziomu wygenerowanego przez <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> i inne przeciążenia.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Pobiera obiekt implementujący interfejs <see cref="T:System.Web.Mvc.IView" /> do renderowania w przeglądarce.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>Pobiera słownik danych widoku dynamicznego.</summary>
      <returns>Słownik danych widoku dynamicznego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Pobiera dane widoku przekazywane do widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Pobiera lub ustawia obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</summary>
      <returns>Obiekt używany do zapisywania danych wyjściowych HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Reprezentuje kontener używany do przekazywania danych między kontrolerem i widokiem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" /> przy użyciu określonego modelu.</summary>
      <param name="model">Model.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" /> przy użyciu określonego słownika.</summary>
      <param name="dictionary">Słownik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Dodaje określony element do kolekcji.</summary>
      <param name="item">Obiekt, który zostanie dodany do kolekcji.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element do kolekcji przy użyciu określonego klucza i wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o tym samym kluczu istnieje już w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Usuwa wszystkie elementy z kolekcji.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Określa, czy kolekcja zawiera określony element.</summary>
      <returns>Wartość true, jeśli obiekt <paramref name="item" /> zostanie znaleziony w kolekcji; w przeciwnym razie wartość false.</returns>
      <param name="item">Obiekt do zlokalizowania w kolekcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Określa, czy kolekcja zawiera element z określonym kluczem.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera element o określonym kluczu, w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz elementu do zlokalizowania w kolekcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiuje elementy kolekcji do tablicy, zaczynając od określonego indeksu.</summary>
      <param name="array">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z kolekcji.Indeksowanie tablicy musi rozpoczynać się od zera.</param>
      <param name="arrayIndex">Numerowany od zera indeks w tablicy <paramref name="array" />, od którego rozpoczyna się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> ma wartość mniejszą niż 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.— lub — Parametr <paramref name="arrayIndex" /> ma wartość większą lub równą długości tablicy <paramref name="array" />.— lub — Liczba elementów w kolekcji źródłowej jest większa niż dostępna ilość miejsca od parametru <paramref name="arrayIndex" /> do końca docelowej tablicy <paramref name="array" />.— lub — Typ <paramref name="T" /> nie może być automatycznie rzutowany na typ docelowej tablicy <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Oblicza określone wyrażenie.</summary>
      <returns>Wyniki obliczeń.</returns>
      <param name="expression">Wyrażenie.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Oblicza określone wyrażenie przy użyciu określonego formatu.</summary>
      <returns>Wyniki obliczeń.</returns>
      <param name="expression">Wyrażenie.</param>
      <param name="format">Format.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Zwraca informacje o danych widoku zdefiniowane przez parametr <paramref name="expression" />.</summary>
      <returns>Obiekt zawierający informacje o danych widoku zdefiniowane przez parametr <paramref name="expression" />.</returns>
      <param name="expression">Zestaw par klucz/wartość, które definiują informacje o danych widoku do zwrócenia.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest przeznaczona tylko do odczytu.</summary>
      <returns>Wartość true, jeśli kolekcja jest przeznaczona tylko do odczytu; w przeciwnym razie — false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia element skojarzony z określonym kluczem.</summary>
      <returns>Wartość wybranego elementu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze tego słownika.</summary>
      <returns>Kolekcja zawierająca klucze obiektu implementującego obiekt <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Pobiera lub ustawia model skojarzony z danymi widoku.</summary>
      <returns>Model skojarzony z danymi widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Pobiera lub ustawia informacje o modelu.</summary>
      <returns>Informacje o modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Pobiera stan modelu.</summary>
      <returns>Stan modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Usuwa pierwsze wystąpienie określonego obiektu z kolekcji.</summary>
      <returns>Wartość true, jeśli element <paramref name="item" /> został pomyślnie usunięty z kolekcji; w przeciwnym razie wartość false.Ta metoda zwraca również wartość false, jeśli parametru <paramref name="item" /> nie odnaleziono w kolekcji.</returns>
      <param name="item">Obiekt do usunięcia z kolekcji.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Usuwa element z kolekcji przy użyciu określonego klucza.</summary>
      <returns>Wartość true, jeśli element zostanie pomyślnie usunięty; w przeciwnym razie — false.Ta metoda zwraca również wartość false, jeśli parametru <paramref name="key" /> nie odnaleziono w oryginalnej kolekcji.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Ustawia model danych do użycia dla widoku.</summary>
      <param name="value">Model danych do użycia dla widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do iterowania po kolekcji.</summary>
      <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Pobiera lub ustawia obiekt, który hermetyzuje informacje o kontekście bieżącego szablonu.</summary>
      <returns>Obiekt zawierający informacje o bieżącym szablonie.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Próbuje pobrać wartość skojarzoną z określonym kluczem.</summary>
      <returns>Wartość true, jeśli kolekcja zawiera element z określonym kluczem, w przeciwnym razie wartość false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Gdy ta metoda zwróci wartość, w przypadku odnalezienia klucza będzie to wartość skojarzona z określonym kluczem. W przeciwnym razie będzie to wartość domyślna typu parametru <paramref name="value" />.Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości w tym słowniku.</summary>
      <returns>Kolekcja zawierająca wartości obiektu implementującego obiekt <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Reprezentuje kontener używany do przekazywania silnie typizowanych danych między kontrolerem i widokiem.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> przy użyciu określonego słownika danych widoku.</summary>
      <param name="viewDataDictionary">Istniejący słownik danych widoku, który zostanie skopiowany do tego wystąpienia.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> przy użyciu określonego modelu.</summary>
      <param name="model">Model danych do użycia dla widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Pobiera lub ustawia model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Pobiera lub ustawia informacje o modelu.</summary>
      <returns>Informacje o modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Ustawia model danych do użycia dla widoku.</summary>
      <param name="value">Model danych do użycia dla widoku.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas ustawiania modelu.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Hermetyzuje informacje o bieżącej treści szablonu używanej do projektowania szablonów oraz o pomocnikach HTML wchodzących w interakcję z szablonami.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy T:System.Web.Mvc.ViewDataInfo oraz powoduje skojarzenie delegata na potrzeby uzyskiwania dostępu do informacji o danych widoku.</summary>
      <param name="valueAccessor">Delegat definiujący sposób uzyskiwania dostępu do informacji o danych widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Pobiera lub ustawia obiekt zawierający wartości wyświetlane przez szablon.</summary>
      <returns>Obiekt zawierający wartości wyświetlane przez szablon.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Pobiera lub ustawia opis właściwości wyświetlany przez szablon.</summary>
      <returns>Opis właściwości wyświetlany przez szablon.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Pobiera lub ustawia bieżącą wartość wyświetlaną przez szablon.</summary>
      <returns>Bieżąca wartość wyświetlana przez szablon.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Reprezentuje kolekcję aparatów widoku dostępnych dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineCollection" /> przy użyciu określonej listy aparatów widoku.</summary>
      <param name="list">Lista opatrzona nową kolekcją.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="list" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>Usuwa wszystkie elementy z obiektu <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje określony widok częściowy przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Znajduje określony widok przy użyciu określonego kontekstu kontrolera i widoku głównego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa widoku głównego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Wstawia element do kolekcji w określonym indeksie.</summary>
      <param name="index">Liczony od elementu zerowego indeks, w którym powinien zostać wstawiony element.</param>
      <param name="item">Obiekt do wstawienia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="index" /> ma wartość niższą niż zero.— lub —Parametr <paramref name="index" /> ma wartość wyższą niż liczba elementów w kolekcji.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>Usuwa element w określonym indeksie obiektu <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="index" /> ma wartość niższą niż zero.— lub —<paramref name="index" /> ma wartość równą lub większą niż <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Zamienia element w określonym indeksie.</summary>
      <param name="index">Liczony od zera indeks elementu do zamiany.</param>
      <param name="item">Nowa wartość elementu z określonym indeksem.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="index" /> ma wartość niższą niż zero.— lub —Parametr <paramref name="index" /> ma wartość wyższą niż liczba elementów w kolekcji.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Reprezentuje wynik lokalizowania aparatu widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineResult" /> przy użyciu określonych przeszukanych lokalizacji.</summary>
      <param name="searchedLocations">Przeszukane lokalizacje.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="searchedLocations" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineResult" /> przy użyciu określonego widoku oraz aparatu widoku.</summary>
      <param name="view">Widok.</param>
      <param name="viewEngine">Aparat widoku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="view " /> lub <paramref name="viewEngine" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Pobiera lub ustawia przeszukane lokalizacje.</summary>
      <returns>Przeszukane lokalizacje.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Pobiera lub ustawia widok.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Pobiera lub ustawia aparat widoku.</summary>
      <returns>Aparat widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Reprezentuje kolekcję aparatów widoku dostępnych dla aplikacji.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Pobiera aparaty widoku.</summary>
      <returns>Aparaty widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Reprezentuje informacje potrzebne do zbudowania strony wzorcowej widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Pobiera skrypt AJAX dla strony wzorcowej.</summary>
      <returns>Skrypt AJAX dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Pobiera kod HTML dla strony wzorcowej.</summary>
      <returns>Kod HTML dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Pobiera model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Pobiera dane tymczasowe.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Pobiera adres URL.</summary>
      <returns>Adres URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>Pobiera dynamiczny słownik pakietu widoku.</summary>
      <returns>Dynamiczny słownik pakietu widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Pobiera kontekst widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Pobiera dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Pobiera moduł zapisujący używany do renderowania strony wzorcowej.</summary>
      <returns>Moduł zapisujący używany do renderowania strony wzorcowej.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Reprezentuje informacje wymagane w celu zbudowania strony silnie typizowanego widoku głównego.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Pobiera skrypt AJAX dla strony wzorcowej.</summary>
      <returns>Skrypt AJAX dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Pobiera kod HTML dla strony wzorcowej.</summary>
      <returns>Kod HTML dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Pobiera model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Pobiera dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Reprezentuje właściwości i metody, wymagane do renderowania widoku w postaci strony formularzy sieci Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" />, używany do renderowania kodu HTML w scenariuszach interfejsu Ajax.</summary>
      <returns>Obiekt pomocniczy Ajax skojarzony z widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt pomocniczy HTML skojarzony z widokiem.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Inicjuje właściwości <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> oraz <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Pobiera lub ustawia ścieżkę widoku głównego.</summary>
      <returns>Ścieżka widoku głównego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Wywołuje zdarzenie <see cref="E:System.Web.UI.Page.PreInit" /> na początku inicjowania strony.</summary>
      <param name="e">Dane zdarzenia.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Umożliwia przetwarzanie określonego żądania HTTP przez platformę ASP.NET MVC.</summary>
      <param name="context">Obiekt, który hermetyzuje informacje specyficzne dla protokołu HTTP o bieżącym żądaniu HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Inicjuje obiekt <see cref="T:System.Web.UI.HtmlTextWriter" />, który odbiera zawartość strony do renderowania.</summary>
      <param name="writer">Obiekt, który odbiera zawartość strony.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderuje stronę widoku na potrzeby odpowiedzi, używając określonego kontekstu widoku.</summary>
      <param name="viewContext">Obiekt, który hermetyzuje informacje wymagane do wyświetlenia widoku, łącznie z kontekstem kontrolera, kontekstem formularza, danymi tymczasowymi i danymi skojarzonego widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Uwaga: Ten interfejs API jest teraz nieaktualny.Ustawia składnik zapisywania tekstu używany do renderowania widoku na potrzeby odpowiedzi.</summary>
      <param name="textWriter">Składnik zapisywania używany do renderowania widoku na potrzeby odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku dla skojarzonego widoku.</summary>
      <param name="viewData">Słownik danych do przekazania do widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Pobiera dane tymczasowe do przekazania do widoku.</summary>
      <returns>Dane tymczasowe do przekazania do widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Pobiera lub ustawia adres URL renderowanej strony. </summary>
      <returns>Adres URL renderowanej strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Pobiera lub ustawia informacje używane do renderowania widoku.</summary>
      <returns>Informacje używane do renderowania widoku, łącznie z kontekstem formularza, danymi tymczasowymi i danymi skojarzonego widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Pobiera składnik zapisywania tekstu używany do renderowania widoku na potrzeby odpowiedzi.</summary>
      <returns>Składnik zapisywania tekstu używany do renderowania widoku na potrzeby odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Reprezentuje informacje wymagane w celu renderowania silnie typizowanego widoku w postaci strony formularzy sieci Web.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper`1" /> obsługujący renderowanie kodu HTML w scenariuszach interfejsu Ajax.</summary>
      <returns>Obiekt pomocniczy Ajax skojarzony z widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> udostępniający obsługę renderowania elementów.</summary>
      <returns>Obiekt pomocniczy HTML skojarzony z widokiem.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Tworzy wystąpienia właściwości <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> i <see cref="P:System.Web.Mvc.ViewPage`1.Html" /> oraz je inicjuje.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Pobiera właściwość <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku dla skojarzonego widoku.</summary>
      <param name="viewData">Słownik danych do przekazania do widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Reprezentuje klasę, używaną do wyświetlania widoku za pomocą wystąpienia <see cref="T:System.Web.Mvc.IView" /> zwracanego przez obiekt <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Wyszukuje zarejestrowane aparaty widoków i zwraca obiekt, używany do renderowania widoku.</summary>
      <returns>Obiekt używany do renderowania widoku.</returns>
      <param name="context">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Podczas wyszukiwania widoku przez metodę wystąpił błąd.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Pobiera nazwę widoku głównego (na przykład strony wzorcowej lub szablonu) do użycia podczas renderowania widoku.</summary>
      <returns>Nazwa widoku głównego.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Reprezentuje klasę podstawową używaną do udostępniania modelu dla widoku i renderowania widoku na potrzeby odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Po wywołaniu przez element wywołujący akcje renderuje widok na potrzeby odpowiedzi.</summary>
      <param name="context">Kontekst, w którym jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ViewEngineResult" /> używany do renderowania widoku.</summary>
      <returns>Aparat widoku.</returns>
      <param name="context">Kontekst.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>Pobiera model danych widoku.</summary>
      <returns>Model danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.TempDataDictionary" /> dla tego wyniku.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.IView" /> renderowany na potrzeby odpowiedzi.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Pobiera lub ustawia obiekt danych widoku <see cref="T:System.Web.Mvc.ViewDataDictionary" /> dla tego wyniku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Pobiera lub ustawia kolekcję aparatów widoków skojarzonych z tym wynikiem.</summary>
      <returns>Kolekcja aparatów widoków.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Pobiera lub ustawia nazwę widoku do renderowania.</summary>
      <returns>Nazwa widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Udostępnia klasę abstrakcyjną, przy użyciu której można zaimplementować stronę początkową (wzorcową) widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>Po zaimplementowaniu w klasie pochodnej pobiera kod znaczników HTML strony początkowej widoku.</summary>
      <returns>Kod znaczników HTML strony początkowej widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>Po zaimplementowaniu w klasie pochodnej pobiera adres URL strony początkowej widoku.</summary>
      <returns>Adres URL strony początkowej widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>Po zaimplementowaniu w klasie pochodnej pobiera kontekst widoku strony początkowej widoku.</summary>
      <returns>Kontekst widoku strony początkowej widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Udostępnia kontener dla obiektów <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Udostępnia kontener dla obiektów <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Pobiera sformatowaną wartość.</summary>
      <returns>Sformatowana wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Reprezentuje typ widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Pobiera lub ustawia nazwę typu.</summary>
      <returns>Nazwa typu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Reprezentuje informacje niezbędne do utworzenia kontrolki użytkownika.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Pobiera skrypt AJAX widoku.</summary>
      <returns>Skrypt AJAX widoku.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Gwarantuje dodanie danych widoku do obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" /> kontrolki użytkownika, jeśli dane widoku istnieją.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Pobiera kod HTML widoku.</summary>
      <returns>Kod HTML widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Pobiera model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderuje widok przy użyciu określonego kontekstu widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Ustawia składnik zapisywania tekstu używany do renderowania widoku na potrzeby odpowiedzi.</summary>
      <param name="textWriter">Składnik zapisywania używany do renderowania widoku na potrzeby odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku przy użyciu określonych danych widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Pobiera słownik danych tymczasowych.</summary>
      <returns>Słownik danych tymczasowych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Pobiera adres URL widoku.</summary>
      <returns>Adres URL widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Pobiera lub ustawia kontekst widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Pobiera lub ustawia klucz danych widoku.</summary>
      <returns>Klucz danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Pobiera składnik zapisywania używany do renderowania widoku na potrzeby odpowiedzi.</summary>
      <returns>Składnik zapisywania używany do renderowania widoku na potrzeby odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Reprezentuje informacje wymagane do zbudowania silnie typizowanej kontrolki użytkownika.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Pobiera skrypt AJAX widoku.</summary>
      <returns>Skrypt AJAX widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Pobiera kod HTML widoku.</summary>
      <returns>Kod HTML widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Pobiera model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Pobiera lub ustawia dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Reprezentuje implementację abstrakcyjnej klasy podstawowej interfejsu <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji głównej z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji głównej z obsługą obszarów.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoku częściowego z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji widoku częściowego z obsługą obszarów.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoku z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji widoku z obsługą obszarów.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy określony widok częściowy przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Odwołanie do widoku częściowego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka częściowa do nowego widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy określony widok przy użyciu kontekstu kontrolera, ścieżki widoku oraz ścieżki widoku głównego.</summary>
      <returns>Odwołanie do widoku.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka widoku głównego.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>Pobiera lub ustawia dostawcę trybu wyświetlania.</summary>
      <returns>Dostawca trybu wyświetlania.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Zwraca wartość wskazującą, czy plik znajduje się w określonej ścieżce, korzystając z określonego kontekstu kontrolera.</summary>
      <returns>Wartość true, jeśli plik znajduje się w określonej ścieżce, a w przeciwnym razie wartość false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Pobiera lub ustawia rozszerzenia nazw plików używane do lokalizowania widoku.</summary>
      <returns>Rozszerzenia nazw plików używane do lokalizowania widoku.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Znajduje określony widok częściowy przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="useCache">Wartość true w celu użycia buforowanego widoku częściowego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null (w języku Visual Basic: Nothing).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Znajduje określony widok przy użyciu określonego kontekstu kontrolera i nazwy widoku głównego.</summary>
      <returns>Widok strony.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa widoku głównego.</param>
      <param name="useCache">Wartość true w celu użycia widoku buforowanego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null (w języku Visual Basic: Nothing).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji głównej.</summary>
      <returns>Formaty lokalizacji głównej.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoku częściowego.</summary>
      <returns>Formaty lokalizacji widoku częściowego.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Zwalnia określony widok przy użyciu określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="view">Widok do zwolnienia.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Pobiera lub ustawia pamięć podręczną lokalizacji widoku.</summary>
      <returns>Pamięć podręczna lokalizacji widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoku.</summary>
      <returns>Formaty lokalizacji widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Pobiera lub ustawia dostawcę ścieżek wirtualnych.</summary>
      <returns>Dostawca ścieżek wirtualnych.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Reprezentuje informacje niezbędne do utworzenia strony formularzy sieci Web w programie ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" /> przy użyciu kontekstu kontrolera i ścieżki widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" /> przy użyciu kontekstu kontrolera, ścieżki widoku i ścieżki strony wzorcowej.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka strony wzorcowej.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" /> przy użyciu kontekstu kontrolera, ścieżki widoku, ścieżki strony wzorcowej i wystąpienia interfejsu <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka strony wzorcowej.</param>
      <param name="viewPageActivator">Wystąpienie interfejsu aktywatora strony widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Pobiera lub ustawia ścieżkę wzorcową.</summary>
      <returns>Ścieżka wzorcowa.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Wyświetla widok dla odpowiedzi.</summary>
      <param name="viewContext">Obiekt, który hermetyzuje informacje wymagane do wyświetlenia widoku, łącznie z kontekstem kontrolera, kontekstem formularza, danymi tymczasowymi i danymi skojarzonego widoku.</param>
      <param name="writer">Obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</param>
      <param name="instance">Wystąpienie strony widoku.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Reprezentuje aparat widoku używany w celu renderowania strony formularzy sieci Web do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormViewEngine" /> przy użyciu określonego aktywatora strony widoku.</summary>
      <param name="viewPageActivator">Wystąpienie klasy, która implementuje interfejs <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy określony widok częściowy przy użyciu określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka częściowa.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy określony widok przy użyciu określonego kontekstu kontrolera i ścieżek widoku oraz widoku wzorcowego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka widoku wzorcowego.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Reprezentuje właściwości i metody wymagane do renderowania widoku, który używa składni Razor aplikacji ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania elementów HTML za pomocą technologii AJAX. </summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania elementów HTML za pomocą technologii AJAX.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Ustawia kontekst i dane widoku dla strony.</summary>
      <param name="parentPage">Strona nadrzędna.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpContext" /> skojarzony ze stroną.</summary>
      <returns>Obiekt <see cref="T:System.Web.HttpContext" /> skojarzony ze stroną.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Uruchamia hierarchię strony dla potoku wykonywania Razor aplikacji ASP.NET.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Inicjuje klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> i <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Pobiera dane tymczasowe do przekazania do widoku.</summary>
      <returns>Dane tymczasowe do przekazania do widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Pobiera lub ustawia adres URL renderowanej strony. </summary>
      <returns>Adres URL renderowanej strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>Pobiera pakiet widoku.</summary>
      <returns>Pakiet widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Pobiera lub ustawia informacje używane do renderowania widoku.</summary>
      <returns>Informacje używane do renderowania widoku, łącznie z kontekstem formularza, danymi tymczasowymi i danymi skojarzonego widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Reprezentuje właściwości i metody wymagane do renderowania widoku, który używa składni Razor aplikacji ASP.NET.</summary>
      <typeparam name="TModel">Typ modelu danych widoku.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania kodu znaczników HTML za pomocą interfejsu Ajax.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania kodu znaczników HTML za pomocą interfejsu Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Inicjuje klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> i <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Reprezentuje obsługę technologii ASP.NET AJAX w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający adres URL do określonej metody akcji. Po kliknięciu łącza akcji metoda akcji jest wywoływana asynchronicznie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;. </summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="actionName">Nazwa metody akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt; przy użyciu podanych informacji o routingu.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt; przy użyciu podanych informacji o routingu.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt; przy użyciu podanych informacji o routingu.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt; przy użyciu podanych informacji o routingu.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt; przy użyciu podanych informacji o routingu.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Zwraca element HTML script zawierający odwołanie do skryptu globalizacji, który definiuje informacje o ustawieniach kulturowych.</summary>
      <returns>Element script, którego atrybut src jest ustawiony na skrypt globalizacji, tak jak w poniższym przykładzie: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Obiekt pomocnika technologii AJAX, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Zwraca element HTML script zawierający odwołanie do skryptu globalizacji, który definiuje określone informacje o ustawieniach kulturowych.</summary>
      <returns>Element HTML script, którego atrybut src jest ustawiony na skrypt globalizacji, tak jak w poniższym przykładzie:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Obiekt pomocnika technologii AJAX, którego ta metoda jest rozszerzeniem.</param>
      <param name="cultureInfo">Hermetyzuje informacje o docelowych ustawieniach kulturowych, takich jak formaty dat.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="cultureInfo" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia zawierający ścieżkę wirtualną dla określonych wartości trasy. Po kliknięciu łącza do ścieżki wirtualnej wysyłane jest asynchronicznie żądanie przy użyciu języka JavaScript.</summary>
      <returns>Element zakotwiczenia.</returns>
      <param name="ajaxHelper">Pomocnik technologii AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="ajaxOptions">Obiekt udostępniający opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Reprezentuje ustawienia opcji do uruchamiania skryptów Ajax w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.AllowCache"></member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Pobiera lub ustawia komunikat do wyświetlenia w oknie potwierdzenia przed przesłaniem żądania.</summary>
      <returns>Komunikat do wyświetlenia w oknie potwierdzenia.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Pobiera lub ustawia metodę żądania HTTP („Get” lub „Post”).</summary>
      <returns>Metoda żądania HTTP.Wartość domyślna to „Post”.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Pobiera lub ustawia tryb określający sposób wstawiania odpowiedzi do docelowego elementu DOM.</summary>
      <returns>Tryb wstawiania: „InsertAfter” (wstaw po), „InsertBefore” (wstaw przed) lub „Replace” (zastąp).Wartość domyślna to „Replace”.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Pobiera lub ustawia wyrażoną w milisekundach wartość sterującą czasem trwania animacji przy wyświetlaniu lub ukrywaniu ładującego się elementu.</summary>
      <returns>Wyrażona w milisekundach wartość sterującą czasem trwania animacji przy wyświetlaniu lub ukrywaniu ładującego się elementu.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Pobiera lub ustawia atrybut id elementu HTML wyświetlanego podczas ładowania funkcji Ajax.</summary>
      <returns>Identyfikator elementu wyświetlanego podczas ładowania funkcji Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Pobiera lub ustawia nazwę funkcji JavaScript do wywołania bezpośrednio przed zaktualizowaniem strony.</summary>
      <returns>Nazwa funkcji JavaScript do wywołania przed zaktualizowaniem strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania po utworzeniu wystąpienia danych odpowiedzi, ale przed zaktualizowaniem strony.</summary>
      <returns>Funkcja JavaScript do wywołania po utworzeniu wystąpienia danych odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania w przypadku niepowodzenia aktualizacji strony.</summary>
      <returns>Funkcja JavaScript do wywołania w przypadku niepowodzenia aktualizacji strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania po pomyślnej aktualizacji strony.</summary>
      <returns>Funkcja JavaScript do wywołania po pomyślnej aktualizacji strony.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Zwraca opcje technologii Ajax jako kolekcję atrybutów HTML do obsługi dyskretnego kodu JavaScript.</summary>
      <returns>Opcje technologii Ajax jako kolekcja atrybutów HTML do obsługi dyskretnego kodu JavaScript.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Pobiera lub ustawia identyfikator elementu DOM do zaktualizowania przy użyciu odpowiedzi z serwera.</summary>
      <returns>Identyfikator elementu DOM do zaktualizowania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Pobiera lub ustawia adres URL, do którego skierowane ma zostać żądanie.</summary>
      <returns>Adres URL, do którego skierowane ma zostać żądanie.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Zawiera wyliczenie trybów wstawiania skryptów AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Wstaw po elemencie.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Wstaw przed elementem.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Zastąp element.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.ReplaceWith">
      <summary>Zastąp cały element.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Udostępnia informacje na temat asynchronicznej metody akcji, takie jak jej nazwę, kontrolera, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Powoduje wywołanie asynchronicznej metody akcji przy użyciu określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Obiekt zawierający wynik wywołania asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Zwraca wynik operacji asynchronicznej.</summary>
      <returns>Wynik operacji asynchronicznej.</returns>
      <param name="asyncResult">Obiekt reprezentujący stan operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wywołuje asynchroniczną metodę akcji przy użyciu określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania asynchronicznej metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Reprezentuje klasę odpowiedzialną za wywoływanie metod akcji kontrolera asynchronicznego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji przy użyciu określonego kontekstu kontrolera, nazwy akcji, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.Implements<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji przy użyciu określonego kontekstu kontrolera, deskryptora akcji, parametrów, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry asynchronicznej metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji przy użyciu określonego kontekstu kontrolera, filtrów, deskryptora akcji, parametrów, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry asynchronicznej metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>Wartość true, jeśli akcja została anulowana, a w przeciwnym razie — false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>Wartość true, jeśli akcja została anulowana, a w przeciwnym razie — false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>Wartość true, jeśli akcja została anulowana, a w przeciwnym razie — false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Udostępnia asynchroniczne operacje dla klasy <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncManager" />, używając kontekstu synchronizacji.</summary>
      <param name="syncContext">Kontekst synchronizacji.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Powiadamia program ASP.NET o ukończeniu wszystkich operacji asynchronicznych.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Występuje po wywołaniu metody <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Pobiera liczbę oczekujących operacji.</summary>
      <returns>Liczba oczekujących operacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Pobiera parametry przekazane do asynchronicznej metody ukończenia.</summary>
      <returns>Parametry przekazane do asynchronicznej metody ukończenia.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Uruchamia wywołanie zwrotne w bieżącym kontekście synchronizacji.</summary>
      <param name="action">Akcja asynchroniczna.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Pobiera lub ustawia wartość asynchronicznego limitu czasu wyrażoną w milisekundach.</summary>
      <returns>Wartość asynchronicznego limitu czasu wyrażona w milisekundach.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Definiuje interfejs dla elementu wywołującego akcje, który służy do wywoływania akcji asynchronicznych w odpowiedzi na żądania HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Wywołuje określoną akcję.</summary>
      <returns>Stan wyniku asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji asynchronicznej.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Anuluje akcję asynchroniczną.</summary>
      <returns>Wartość true, jeśli metoda asynchroniczna mogła zostać anulowana, a w przeciwnym razie — false.</returns>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvokerFactory">
      <summary>Służy do tworzenia wystąpienia elementu <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> dla bieżącego żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvokerFactory.CreateInstance">
      <summary>Tworzy wystąpienie asynchronicznego elementu wywołującego akcję dla bieżącego żądania.</summary>
      <returns>Utworzony element <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Definiuje metody wymagane dla kontrolera asynchronicznego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <returns>Stan operacji asynchronicznej.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Kończy operację asynchroniczną.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Udostępnia kontener na asynchroniczny obiekt menedżera.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Pobiera asynchroniczny obiekt menedżera.</summary>
      <returns>Asynchroniczny obiekt menedżera.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Udostępnia kontener przechowujący liczbę oczekujących operacji asynchronicznych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Występuje po ukończeniu metody asynchronicznej.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Pobiera liczbę operacji.</summary>
      <returns>Liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Zmniejsza liczbę operacji o 1.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Zmniejsza liczbę operacji o podaną wartość.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
      <param name="value">Liczba operacji, o jaką należy zmniejszyć wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Zwiększa liczbę operacji o 1.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Zwiększa liczbę operacji o podaną wartość.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
      <param name="value">Liczba operacji, o jaką należy zwiększyć wartość.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Udostępnia informacje na temat asynchronicznej metody akcji, takie jak jej nazwę, kontrolera, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Obiekt zawierający informacje na temat metody rozpoczynającej operację asynchroniczną (metody, której nazwa kończy się ciągiem „Asynch”).</param>
      <param name="completedMethodInfo">Obiekt zawierający informacje na temat metody ukończenia (metody, której nazwa kończy się ciągiem „Completed”).</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Pobiera nazwę metody akcji.</summary>
      <returns>Nazwa metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Pobiera informacje o asynchronicznej metodzie akcji.</summary>
      <returns>Informacje o asynchronicznej metodzie akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Rozpoczyna wykonywanie asynchronicznej metody akcji przy użyciu określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Obiekt zawierający wynik wywołania asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Pobiera informacje o asynchronicznej metodzie ukończenia.</summary>
      <returns>Informacje o asynchronicznej metodzie ukończenia.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera dla asynchronicznej metody akcji.</summary>
      <returns>Deskryptor kontrolera dla asynchronicznej metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Zwraca wynik operacji asynchronicznej.</summary>
      <returns>Wynik operacji asynchronicznej.</returns>
      <param name="asyncResult">Obiekt reprezentujący stan operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe podanego typu.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych do zwrócenia.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Użycie flagi pamięci podręcznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Zwraca parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Zwraca selektory metody akcji.</summary>
      <returns>Selektory metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Określa, czy dla elementu członkowskiego akcji zdefiniowane jest co najmniej jedno wystąpienie podanego typu atrybutu.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowany jest atrybut typu reprezentowanego przez parametr <paramref name="attributeType" />, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Pobiera inicjowany z opóźnieniem unikatowy identyfikator wystąpienia tej klasy.</summary>
      <returns>Inicjowany z opóźnieniem unikatowy identyfikator wystąpienia tej klasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Hermetyzuje informacje opisujące kontrolera asynchronicznego, takie jak jego nazwa, typ i akcje.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje metodę akcji przy użyciu podanej nazwy i kontekstu kontrolera.</summary>
      <returns>Informacje dotyczące metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Zwraca listę deskryptorów metod akcji zawartych w kontrolerze.</summary>
      <returns>Lista deskryptorów metod akcji zawartych w kontrolerze.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca atrybuty niestandardowe zdefiniowane dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca atrybuty niestandardowe określonego typu zdefiniowane dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Pobiera atrybuty filtru.</summary>
      <returns>Atrybuty filtru.</returns>
      <param name="useCache">Wartość true, aby użyć pamięci podręcznej; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla tego elementu członkowskiego zdefiniowane jest co najmniej jedno wystąpienie określonego atrybutu niestandardowego.</summary>
      <returns>Wartość true, jeśli dla tego elementu członkowskiego zdefiniowany jest atrybut typu reprezentowanego przez parametr <paramref name="attributeType" />, a w przeciwnym razie — false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Reprezentuje wyjątek, który wystąpił podczas synchronicznego przetwarzania żądania HTTP w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając dostarczanego przez system komunikatu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając określonego komunikatu.</summary>
      <param name="message">Komunikat opisujący wyjątek.Element wywołujący tego konstruktora musi upewnić się, że ten ciąg został zlokalizowany dla bieżącego ustawienia kulturowego systemu.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając określonego komunikatu o błędzie i odwołania do wyjątku wewnętrznego będącego przyczyną tego wyjątku.</summary>
      <param name="message">Komunikat opisujący wyjątek.Element wywołujący tego konstruktora musi upewnić się, że ten ciąg został zlokalizowany dla bieżącego ustawienia kulturowego systemu.</param>
      <param name="innerException">Wyjątek będący przyczyną bieżącego wyjątku.Jeśli parametr <paramref name="innerException" /> ma wartość różną od null, bieżący wyjątek jest zgłaszany w bloku catch obsługującym wyjątek wewnętrzny.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>Gdy metoda akcji zwraca typ Task lub Task&lt;T&gt;, deskryptor <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> udostępnia informacje dotyczące akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />.</summary>
      <param name="taskMethodInfo">Informacje o metodzie zadania.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>Pobiera nazwę metody akcji.</summary>
      <returns>Nazwa metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji przy użyciu określonych parametrów, wywołania zwrotnego kontekstu kontrolera i stanu.</summary>
      <returns>Obiekt zawierający wynik wywołania asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
      <param name="callback">Opcjonalna metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.Ten parametr może mieć wartość null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Kończy operację asynchroniczną.</summary>
      <returns>Wynik operacji asynchronicznej.</returns>
      <param name="asyncResult">Obiekt reprezentujący stan operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje asynchroniczną metodę akcji.</summary>
      <returns>Wynik wykonania asynchronicznej metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego, z wyłączeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę identyfikowanych według typu atrybutów niestandardowych zdefiniowanych dla tego elementu członkowskiego.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Zwraca tablicę wszystkich atrybutów niestandardowych zastosowanych do tego elementu członkowskiego.</summary>
      <returns>Tablica zawierająca wszystkie atrybuty niestandardowe zastosowane do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu, jeśli nie zostały zdefiniowane żadne atrybuty.</returns>
      <param name="useCache">Wartość true, aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów, a w innym razie — false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>Zwraca parametry asynchronicznej metody akcji.</summary>
      <returns>Parametry asynchronicznej metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>Zwraca selektory asynchronicznej metody akcji.</summary>
      <returns>Selektory asynchronicznej metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla tego elementu członkowskiego zdefiniowane jest co najmniej jedno wystąpienie określonego atrybutu niestandardowego.</summary>
      <returns>Wartość wskazująca, czy dla tego elementu członkowskiego zdefiniowane jest co najmniej jedno wystąpienie określonego atrybutu niestandardowego.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">Wartość true, aby przeszukać łańcuch hierarchii w poszukiwaniu odziedziczonego atrybutu niestandardowego, a w innym przypadku — false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>Pobiera informacje o zadaniu asynchronicznym.</summary>
      <returns>Informacje o zadaniu asynchronicznym.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>Pobiera unikatowy identyfikator zadania.</summary>
      <returns>Unikatowy identyfikator zadania.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>Reprezentuje kontekst żądania uwierzytelnienia zawierający informacje do realizacji żądania uwierzytelnienia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Metody akcji związane z żądaniem.</param>
      <param name="result">Odpowiedź na żądanie.</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji związany z żądaniem.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>Pobiera lub ustawia wynik akcji do wykonania.</summary>
      <returns>Odpowiedź na żądanie.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>Reprezentuje kontekst uwierzytelniania zawierający informacje do realizacji uwierzytelnienia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Metody akcji związane z uwierzytelnianiem</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>Pobiera lub ustawia bieżący uwierzytelniony podmiot zabezpieczeń.</summary>
      <returns>Poświadczenia bezpieczeństwa dla uwierzytelniania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>Pobiera lub ustawia wynik błędu wskazujący, że nastąpiła nieudana próba uwierzytelnienia.</summary>
      <returns>Wynik uwierzytelniania.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>Definiuje filtr realizujący uwierzytelnianie.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Uwierzytelnia żądanie.</summary>
      <param name="filterContext">Kontekst do użycia w celu uwierzytelnienia.</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Dodaje żądanie uwierzytelniania dla bieżącego obiektu <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="filterContext">Kontekst do użycia dla żądania uwierzytelnienia.</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>Definiuje filtr zastępujący inne filtry.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>Pobiera typ filtrów do zastąpienia.</summary>
      <returns>Filtr do zastąpienia.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Zapewnia obsługę wywoływania metod akcji podrzędnych i umożliwia renderowanie wyniku w widoku nadrzędnym.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wywołuje określoną metodę akcji podrzędnej i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonej nazwy kontrolera i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów oraz nazwy kontrolera i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów oraz nazwy kontrolera i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Słownik zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów i zwraca wynik w postaci ciągu HTML.</summary>
      <returns>Wynik akcji podrzędnej w postaci ciągu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji, która ma zostać wywołana.</param>
      <param name="routeValues">Słownik zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wywołuje określoną metodę akcji podrzędnej i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonej nazwy kontrolera i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów oraz nazwy kontrolera i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów oraz nazwy kontrolera i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Słownik zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną metodę akcji podrzędnej przy użyciu określonych parametrów i renderuje wynik w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji podrzędnej, która ma zostać wywołana.</param>
      <param name="routeValues">Słownik zawierający parametry trasy.Parametr <paramref name="routeValues" /> umożliwia określanie parametrów powiązanych z parametrami metody akcji.Parametr <paramref name="routeValues" /> jest scalany z oryginalnymi wartościami trasy i zastępuje te wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych ścieżki wirtualnej.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Zapewnia obsługę renderowania wartości obiektów w postaci kodu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie ciągu.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie ciągu, używając dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca kod znaczników języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu oraz identyfikatora pola HTML.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca ciąg zawierający wartość każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca ciąg zawierający wartość każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca ciąg zawierający wartość każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu oraz identyfikatora pola HTML.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu, używając dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu, używając określonego szablonu.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu, używając określonego szablonu i identyfikatora pola HTML.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w modelu, używając określonego szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>Zapewnia aparat do pobierania nazw wyświetlanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Pobiera nazwę wyświetlaną.</summary>
      <returns>Nazwa wyświetlana.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera nazwę wyświetlaną.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Pobiera nazwę wyświetlaną dla modelu.</summary>
      <returns>Nazwa wyświetlana dla modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera nazwę wyświetlaną.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Pobiera nazwę wyświetlaną dla modelu.</summary>
      <returns>Nazwa wyświetlana dla modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera nazwę wyświetlaną.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Pobiera nazwę wyświetlaną dla modelu.</summary>
      <returns>Nazwa wyświetlana dla modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Zapewnia możliwość renderowania wartości obiektów w postaci kodu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca kod znaczników HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Kod znaczników HTML dla każdej właściwości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TResult">Typ wyniku.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Zapewnia obsługę elementu input języka HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i nazwy pola HTML.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu i nazwy pola HTML.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu, używając dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu, używając określonego szablonu.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu i w określonym szablonie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu, używając określonego szablonu i nazwy pola HTML.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu i w szablonie o podanej nazwie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element input języka HTML dla każdej właściwości w modelu, używając nazwy szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element input języka HTML dla każdej właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="templateName">Nazwa szablonu, który ma zostać użyty do wyświetlenia obiektu.</param>
      <param name="htmlFieldName">Ciąg służący do odróżniania nazw elementów input języka HTML renderowanych dla właściwości o tych samych nazwach.</param>
      <param name="additionalViewData">Anonimowy obiekt mogący zawierać dodatkowe dane widoku, które zostaną scalone z wystąpieniem <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utworzonym dla tego szablonu.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>Udostępnia metody pracy z wartościami wyliczeń i listami elementów select.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>Pobiera listę obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> odpowiadających stałym enum zdefiniowanym w danym typie.</summary>
      <returns>Lista dla danego typu <paramref name="type" />.</returns>
      <param name="type">Typ do oceny.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>Pobiera listę obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> odpowiadających stałym enum zdefiniowanym w danym typie.Zapewnia również wyrównanie wartości <paramref name="value" />, nawet jeśli nie zostanie ona dopasowana do określonej stałej, i ustawia dla właściwości Selected wartość true dla jednego elementu w liście zwracanych – dla zgodności z wartością <paramref name="value" />.</summary>
      <returns>Lista dla danego typu <paramref name="type" />, z potencjalną możliwością uwzględnienia nierozpoznanej wartości <paramref name="value" />.</returns>
      <param name="type">Typ do oceny.</param>
      <param name="value">Wartość z typu do wyboru.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>Pobiera listę obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> odpowiadających stałym enum określonym w metadanych.</summary>
      <returns>Lista określonych metadanych.</returns>
      <param name="metadata">Metadane modelu do oceny.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>Pobiera listę obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> odpowiadających stałym enum określonym w metadanych.Zapewnia, że wartość zostanie wyrównana, nawet jeśli nie odpowiada zdefiniowanej stałej i nadaje właściwości Selected wartość true dla jednego elementu na liście zwracanych – dla zgodności z wartością.</summary>
      <returns>Lista dla danego typu <paramref name="metadata" />, z potencjalną możliwością uwzględnienia nierozpoznanej wartości <paramref name="value" />.</returns>
      <param name="metadata">Metadane do oceny.</param>
      <param name="value">Wartość z typu metadanych do wyboru.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>Pobiera wartość wskazującą, czy dany typ lub wyrażenie jest typu odpowiedniego do użycia w wywołaniu <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> i <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Wartość true, jeśli <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> nie zgłosi wyjątku przy przekazywaniu danego typu i <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> nie zgłosi wyjątku przy przekazywaniu wyrażenia tego typu, w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do sprawdzenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>Pobiera dane wskazujące, czy dane określone metadane lub powiązane wyrażenia są odpowiednie do użycia z wywołaniem <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> i <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Wartość true, jeśli <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> zwróci wartość i nie zgłosi wyjątku przy przekazywaniu danego <see cref="T:System.Web.Mvc.ModelMetadata" /> i <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> nie zgłosi wyjątku przy przekazywaniu powiązanego wyrażenia, w przeciwnym razie wartość false.</returns>
      <param name="metadata">Metadane do sprawdzenia.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Zapewnia obsługę języka HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Formularz używa metody POST, a żądanie jest przetwarzane przez metodę akcji dla widoku.</summary>
      <returns>Otwierający tag &lt;form&gt;. </returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i dołącza wartości trasy w atrybucie akcji.Formularz używa metody POST, a żądanie jest przetwarzane przez metodę akcji dla widoku.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler i akcję.Formularz używa metody POST.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy.Formularz używa metody POST.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy.Formularz używa określonej metody HTTP.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy.Formularz używa określonej metody HTTP i dołącza atrybuty HTML.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler i akcję.Formularz używa określonej metody HTTP.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler i akcję.Formularz używa określonej metody HTTP i dołącza atrybuty HTML ze słownika.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler i akcję.Formularz używa określonej metody HTTP i dołącza atrybuty HTML.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy ze słownika wartości trasy.Formularz używa metody POST.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy ze słownika wartości trasy.Formularz używa określonej metody HTTP.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i ustawia tag akcji na określony kontroler, akcję i wartości trasy ze słownika wartości trasy.Formularz używa określonej metody HTTP i dołącza atrybuty HTML ze słownika.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje otwierający tag &lt;form&gt; w odpowiedzi i dołącza wartości trasy ze słownika wartości trasy w atrybucie akcji.Formularz używa metody POST, a żądanie jest przetwarzane przez metodę akcji dla widoku.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Ten obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL przesyłania formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="method">Metoda HTTP służąca do przetwarzania formularza (GET lub POST).</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje w odpowiedzi otwierający tag &lt;form&gt;.Gdy użytkownik wyśle formularz, żądanie zostanie przetworzone przez element docelowy trasy.</summary>
      <returns>Otwierający tag &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Umieszcza zamykający tag &lt;/form&gt; w odpowiedzi. </summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Zapewnia obsługę wejściowych kontrolek HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza i wartości wskazującej, czy pole wyboru jest zaznaczone.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">Aby zaznaczyć pole wyboru, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.Wartość pola wyboru jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut checked w atrybutach html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości wskazującej, czy pole wyboru jest zaznaczone, oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">Aby zaznaczyć pole wyboru, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.Wartość pola wyboru jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut checked w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości wskazującej, czy pole wyboru jest zaznaczone, oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">Aby zaznaczyć pole wyboru, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.Wartość pola wyboru jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut checked w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input pola wyboru przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "checkbox".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Zwraca element input pola wyboru dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "checkbox" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie używające określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "checkbox" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Zwraca element input pola wyboru dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie używające określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "checkbox" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca ukryty element input przy użyciu określonego pomocnika HTML oraz nazwę pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca ukryty element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza oraz wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość ukrytego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca ukryty element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość ukrytego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca ukryty element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość ukrytego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca ukryty element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca ukryty element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca ukryty element input języka HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "hidden" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input hasła przy użyciu określonego pomocnika kodu HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "password".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input hasła przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza oraz wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "password".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość elementu input hasła.Jeśli wartość tego parametru nie zostanie podana, do jej pobrania zostanie użyty atrybut value w atrybutach html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input hasła przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "password".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość elementu input hasła.Jeśli wartość tego parametru nie zostanie podana, do jej pobrania zostanie użyty atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element input hasła przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "password".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość elementu input hasła.Jeśli wartość tego parametru nie zostanie podana, do jej pobrania zostanie użyty atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element input hasła dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "password" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input hasła dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "password" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element input hasła dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "password" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="isChecked">Aby wybrać przycisk radiowy, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="isChecked">Aby wybrać przycisk radiowy, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="isChecked">Aby wybrać przycisk radiowy, należy użyć wartości true. W przeciwnym razie należy użyć wartości false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element input przycisku radiowego, który służy do prezentowania wzajemnie wykluczających się opcji.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "radio".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element input przycisku radiowego dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "radio" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "radio" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Zwraca element input przycisku radiowego dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "radio" dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="value">Wartość wybranego przycisku radiowego.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca tekstowy element input przy użyciu określonego pomocnika kodu HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca tekstowy element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza oraz wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca tekstowy element input przy użyciu określonego pomocnika kodu HTML, nazwy pola formularza, wartości oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza oraz klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> służący do odszukania wartości.</param>
      <param name="value">Wartość tekstowego elementu input.Wartość jest pobierana w następującej kolejności: obiekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, wartość tego parametru, obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i na końcu atrybut value w atrybutach html.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca tekstowy element input dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "text" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Atrybut type elementu input języka HTML ma ustawioną wartość "text" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca tekstowy element input dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element input języka HTML, którego atrybut type ma ustawioną wartość "text" dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca tekstowy element input.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość "text".</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="format">Ciąg używany do formatowania danych wejściowych.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Zapewnia obsługę elementu label kodu HTML w widoku programu ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie przy użyciu tekstu etykiety.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety, który ma zostać wyświetlony.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Wartość.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie przy użyciu tekstu etykiety.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety, który ma zostać wyświetlony.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety, który ma zostać wyświetlony.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające właściwość do wyświetlenia.</param>
      <param name="labelText">Tekst etykiety.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Wartość.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez model.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez model.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie przy użyciu tekstu etykiety.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="labelText">Tekst etykiety, który ma zostać wyświetlony.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="labelText">Tekst etykiety.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element label kodu HTML i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element label kodu HTML i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="labelText">Tekst etykiety.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Zapewnia obsługę łączy HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku i działania.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania i wartości trasy.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, wartości trasy i atrybutów HTML.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.Atrybuty są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania i kontrolera.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, kontrolera, wartości trasy i atrybutów HTML.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, kontrolera, protokołu, nazwy hosta, fragmentu adresu URL, wartości trasy i atrybutów HTML.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, kontrolera, protokołu, nazwy hosta, fragmentu adresu URL, wartości trasy w formie słownika wartości trasy oraz atrybutów HTML w formie słownika.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, kontrolera, wartości trasy w formie słownika wartości trasy oraz atrybutów HTML w formie słownika.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania i wartości trasy w formie słownika wartości trasy.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) dla określonego tekstu linku, działania, wartości trasy w formie słownika wartości trasy oraz atrybutów HTML w formie słownika.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.Parametry są pobierane w drodze odbicia przez sprawdzenie właściwości obiektu.Obiekt jest zwykle tworzony przy użyciu składni inicjatora obiektu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="protocol">Protokół adresu URL, na przykład „http” lub „https”.</param>
      <param name="hostName">Nazwa hosta adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa punktu zakotwiczenia).</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeName">Nazwa trasy używanej do zwracania ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy. </param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element zakotwiczenia (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element zakotwiczenia (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="linkText">Tekst wewnętrzny elementu zakotwiczenia.</param>
      <param name="routeValues">Obiekt zawierający parametry trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Reprezentuje element form języka HTML w widoku MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" /> przy użyciu określonego obiektu odpowiedzi HTTP.</summary>
      <param name="httpResponse">Obiekt odpowiedzi HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpResponse " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" /> przy użyciu określonego kontekstu widoku.</summary>
      <param name="viewContext">Obiekt hermetyzujący informacje wymagane do wyświetlenia widoku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Zwalnia niezarządzane (a opcjonalnie także zarządzane) zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Kończy formularz i usuwa wszystkie jego zasoby.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>Pobiera atrybuty HTML identyfikatora i nazwy ciągu <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Pobiera identyfikator ciągu <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Wartość atrybutu HTML identyfikatora obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Wyrażenie określające obiekt, który zawiera identyfikator.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> Pobiera identyfikator ciągu <see cref="T:System.Web.Mvc.HtmlHelper`1" />.</summary>
      <returns>Wartość atrybutu HTML identyfikatora obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera identyfikator.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Pobiera identyfikator ciągu <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Wartość atrybutu HTML identyfikatora obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Pobiera pełną nazwę pola HTML obiektu reprezentowanego przez wyrażenie.</summary>
      <returns>Pełna nazwa pola HTML obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Wyrażenie określające obiekt, który zawiera nazwę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Pobiera pełną nazwę pola HTML obiektu reprezentowanego przez wyrażenie.</summary>
      <returns>Pełna nazwa pola HTML obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera nazwę.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Pobiera pełną nazwę pola HTML obiektu reprezentowanego przez wyrażenie.</summary>
      <returns>Pełna nazwa pola HTML obiektu reprezentowanego przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Zapewnia funkcje do wyświetlania widoku częściowego jako zakodowanego ciągu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wyświetla określony widok częściowy jako zakodowany ciąg HTML.</summary>
      <returns>Widok częściowy wyświetlany jako zakodowany ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="partialViewName">Nazwa widoku częściowego do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wyświetla określony widok częściowy jako zakodowany ciąg HTML.</summary>
      <returns>Widok częściowy wyświetlany jako zakodowany ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="partialViewName">Nazwa widoku częściowego do wyświetlenia.</param>
      <param name="model">Model widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Wyświetla określony widok częściowy jako zakodowany ciąg HTML.</summary>
      <returns>Widok częściowy wyświetlany jako zakodowany ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model widoku częściowego.</param>
      <param name="viewData">Słownik danych widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Wyświetla określony widok częściowy jako zakodowany ciąg HTML.</summary>
      <returns>Widok częściowy wyświetlany jako zakodowany ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="partialViewName">Nazwa widoku częściowego do wyświetlenia.</param>
      <param name="viewData">Słownik danych widoku częściowego.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Zapewnia obsługę renderowania widoku częściowego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Renderuje określony widok częściowy przy użyciu określonego pomocnika kodu HTML.</summary>
      <param name="htmlHelper">Pomocnik kodu HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Renderuje określony widok częściowy i przekazuje do niego kopię bieżącego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" /> z tą różnicą, że dla właściwości Model jest ustawiony określony model.</summary>
      <param name="htmlHelper">Pomocnik kodu HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy oraz zamienia właściwość ViewData widoku częściowego na określony obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i ustawia określony model dla właściwości Model danych widoku.</summary>
      <param name="htmlHelper">Pomocnik kodu HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model widoku częściowego.</param>
      <param name="viewData">Dane widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy i zamienia właściwość ViewData na określony obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <param name="htmlHelper">Pomocnik kodu HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Zapewnia obsługę dokonywania wyboru elementów z listy.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element select kodu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i etykiety opcji.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy, etykiety opcji i określonych atrybutów HTML.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy, etykiety opcji i określonych atrybutów HTML.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element select z pojedynczym wyborem przy użyciu określonego pomocnika HTML, nazwy pola formularza i etykiety opcji.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy i etykiety opcji.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy, etykiety opcji i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy, etykiety opcji i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca element select kodu HTML dla każdej wartości wyliczenia reprezentowanego przez określone wyrażenie.</summary>
      <returns>Element select kodu HTML dla każdej wartości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera wartości do wyświetlenia.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu.Ten parametr może mieć wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TEnum">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element select z wyborem wielokrotnym przy użyciu określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element select kodu HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select z wyborem wielokrotnym przy użyciu określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu listy.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select z wyborem wielokrotnym przy użyciu określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select z wyborem wielokrotnym przy użyciu określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element select kodu HTML z podelementem option dla każdego elementu na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element select kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do wyświetlenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Zapewnia obsługę kontrolek elementu textarea kodu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML i atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza i zawartości tekstowej.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="value">Zawartość tekstowa.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej, liczby wierszy i kolumn oraz określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej, liczby wierszy i kolumn oraz określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca określony element textarea przy użyciu określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa pola formularza, które ma zostać zwrócone.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML oraz liczby wierszy i kolumn.</summary>
      <returns>Element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Zwraca element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML oraz liczby wierszy i kolumn.</summary>
      <returns>Element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez określone wyrażenie przy użyciu określonych atrybutów HTML.</summary>
      <returns>Element textarea kodu HTML dla każdej właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Zapewnia obsługę sprawdzania poprawności danych wejściowych z formularza HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Pobiera lub ustawia nazwę pliku zasobu (klucza klasy) zawierającego wartości ciągu zlokalizowanego.</summary>
      <returns>Nazwa pliku zasobu (klucza klasy).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Pobiera metadane sprawdzania poprawności określonego modelu i stosuje odpowiednią metodę do pola danych.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelName" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Pobiera metadane sprawdzania poprawności określonego modelu i stosuje odpowiednią metodę do pola danych.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Wyświetla komunikat weryfikacji w przypadku wystąpienia błędu określonego wpisu w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Wartość null, jeśli wpis jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="modelName">Nazwa weryfikowanego wpisu.</param>
      <param name="htmlAttributes">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> zawierający atrybuty HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Wyświetla komunikat weryfikacji w przypadku wystąpienia błędu określonego wpisu w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Wartość null, jeśli wpis jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="modelName">Nazwa weryfikowanego wpisu.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Wyświetla komunikat weryfikacji w przypadku wystąpienia błędu określonego wpisu w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Wartość null, jeśli obiekt modelu jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="modelName">Nazwa weryfikowanego obiektu modelu.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określony wpis zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> zawierający atrybuty HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności w przypadku wystąpienia błędu określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="modelName">Nazwa obiektu właściwości lub modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)">
      <summary>Wyświetla komunikat weryfikacji w przypadku wystąpienia błędu określonego wpisu w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Wartość null, jeśli wpis jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="modelName">Nazwa weryfikowanego wpisu.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określony wpis zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Wyświetla komunikat weryfikacji w przypadku wystąpienia błędu określonego wpisu w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Wartość null, jeśli wpis jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="modelName">Nazwa weryfikowanego wpisu.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określony wpis zawiera błąd.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca kod znaczników HTML komunikatu o błędzie sprawdzania poprawności dla każdego pola danych reprezentowanego przez określone wyrażenie.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca kod znaczników HTML komunikatu o błędzie sprawdzania poprawności dla każdego pola danych reprezentowanego przez określone wyrażenie przy użyciu określonego komunikatu.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca kod znaczników HTML komunikatu o błędzie sprawdzania poprawności dla każdego pola danych reprezentowanego przez określone wyrażenie przy użyciu określonego komunikatu i określonych atrybutów kodu HTML.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Zwraca kod HTML dla komunikatu o błędzie weryfikacji dla określonego wyrażenia.</summary>
      <returns>Wartość null, jeśli obiekt modelu jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w przypadku wystąpienia błędu weryfikacji.</param>
      <param name="htmlAttributes">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> zawierający atrybuty HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca kod znaczników HTML komunikatu o błędzie sprawdzania poprawności dla każdego pola danych reprezentowanego przez określone wyrażenie przy użyciu określonego komunikatu i określonych atrybutów kodu HTML.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, wynikiem jest pusty ciąg. W przeciwnym razie wynikiem jest element span z komunikatem o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)">
      <summary>Zwraca kod HTML dla komunikatu o błędzie weryfikacji dla określonego wyrażenia.</summary>
      <returns>Wartość null, jeśli obiekt modelu jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w przypadku wystąpienia błędu weryfikacji.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Zwraca kod HTML dla komunikatu o błędzie weryfikacji dla określonego wyrażenia.</summary>
      <returns>Wartość null, jeśli obiekt modelu jest poprawny i wyłączono weryfikację po stronie klienta.W przeciwnym razie element <paramref name="tag" /> zawierający komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML, na którym działa ta metoda.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do renderowania.</param>
      <param name="validationMessage">Komunikat wyświetlany w przypadku wystąpienia błędu weryfikacji.</param>
      <param name="tag">Tag do ustawienia dla opakowującego elementu HTML komunikatu weryfikacji. </param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ właściwości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="excludePropertyErrors">Należy ustawić wartość true, jeśli w podsumowaniu mają być wyświetlane tylko błędy na poziomie modelu, lub wartość false, jeśli w podsumowaniu mają być wyświetlane wszystkie błędy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="excludePropertyErrors">Należy ustawić wartość true, jeśli w podsumowaniu mają być wyświetlane tylko błędy na poziomie modelu, lub wartość false, jeśli w podsumowaniu mają być wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat, który ma zostać wyświetlony wraz z podsumowaniem sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="excludePropertyErrors">Należy ustawić wartość true, jeśli w podsumowaniu mają być wyświetlane tylko błędy na poziomie modelu, lub wartość false, jeśli w podsumowaniu mają być wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat, który ma zostać wyświetlony wraz z podsumowaniem sprawdzania poprawności.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="excludePropertyErrors">Należy ustawić wartość true, jeśli w podsumowaniu mają być wyświetlane tylko błędy na poziomie modelu, lub wartość false, jeśli w podsumowaniu mają być wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat, który ma zostać wyświetlony wraz z podsumowaniem sprawdzania poprawności.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="message">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="message">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty kodu HTML elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności znajdujących się w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="message">Komunikat wyświetlany w sytuacji, gdy określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty kodu HTML elementu. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)"></member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="name">Nazwa modelu.</param>
      <param name="format">Ciąg formatu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do udostępnienia.</param>
      <typeparam name="TModel">Model.</typeparam>
      <typeparam name="TProperty">Właściwość.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="expression">Wyrażenie określające obiekt, który zawiera właściwości do udostępnienia.</param>
      <param name="format">Ciąg formatu.</param>
      <typeparam name="TModel">Model.</typeparam>
      <typeparam name="TProperty">Właściwość.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Udostępnia mechanizm do tworzenia niestandardowego kodu znaczników HTML zgodnego z integratorami modeli i szablonami ASP.NET MVC.</summary>
      <returns>Kod znaczników HTML dla danej wartości.</returns>
      <param name="html">Wystąpienie pomocnika kodu HTML, którego ta metoda jest rozszerzeniem.</param>
      <param name="format">Ciąg formatu.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>Kompiluje widoki ASP.NET Razor do postaci klas.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>Dyrektywa dziedziczenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>Dyrektywa modelu.</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Rozszerza klasę VBCodeParser o obsługę słowa kluczowego @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>Ustawia wartość wskazującą, czy bieżący blok kodu i model powinny być dziedziczone.</summary>
      <returns>Wartość true, jeśli blok kodu i model są dziedziczone, a w przeciwnym razie — false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>Dyrektywa typu modelu.</summary>
      <returns>Zwraca wartość void.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Konfiguruje analizator i generator kodu ASP.NET Razor dla określonego pliku.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">Wirtualna ścieżka do pliku ASP.NET Razor.</param>
      <param name="physicalPath">Fizyczna ścieżka do pliku ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>Zwraca generator kodu Razor specyficzny dla języka programu ASP.NET MVC.</summary>
      <returns>Generator kodu Razor specyficzny dla języka programu ASP.NET MVC.</returns>
      <param name="incomingCodeGenerator">Generator kodu języka C# lub Visual Basic.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>Zwraca analizator kodu Razor specyficzny dla języka programu ASP.NET MVC przy użyciu określonego analizatora języka.</summary>
      <returns>Analizator kodu Razor specyficzny dla języka programu ASP.NET MVC.</returns>
      <param name="incomingCodeParser">Analizator kodu języka C# lub Visual Basic.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Tworzy wystąpienia elementu <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> na podstawie podanych fabryk i akcji.Wejścia dla trasy udostępniają bezpośredni routing do podanej akcji.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="factories">Fabryki tras bezpośrednich.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera zestaw fabryk tras dla podanego deskryptora akcji.</summary>
      <returns>Zestaw fabryk tras.</returns>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Pobiera prefiks obszaru z podanego kontrolera.</summary>
      <returns>Prefiks obszaru lub wartość null.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Tworzy wystąpienia elementu <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> na podstawie podanych fabryk, kontrolera i akcji.Wejścia dla trasy udostępniają bezpośredni routing do podanego kontrolera i mogą dotrzeć do zestawu podanych akcji.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji.</param>
      <param name="factories">Fabryki tras bezpośrednich.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)">
      <summary>Pobiera fabryki tras dla podanego deskryptora kontrolera.</summary>
      <returns>Zestaw fabryk tras.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Pobiera trasy bezpośrednie dla danego deskryptora kontrolera i deskryptorów akcji na podstawie atrybutów elementu <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" />.</summary>
      <returns>Zestaw wejść dla trasy.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji dla wszystkich akcji.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Pobiera prefiks trasy z podanego kontrolera.</summary>
      <returns>Prefiks trasy lub wartość null.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>Domyślna implementacja elementu <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />.Rozpoznaje ograniczenia, analizując klucz ograniczenia i argumenty ograniczenia, używając mapy do rozpoznawania typu ograniczenia oraz wywołując konstruktora odpowiedniego dla typu ograniczenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>Pobiera modyfikowalny słownik mapujący klucze ograniczenia do konkretnego typu ograniczenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>Reprezentuje kontekst wspierający generowanie trasy bezpośredniej.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="areaPrefix">Prefiks trasy, jeśli występuje, określony przez obszar.</param>
      <param name="controllerPrefix">Prefiks trasy, jeśli występuje, określony przez kontroler.</param>
      <param name="actions">Deskryptory akcji, do których tworzona jest trasa.</param>
      <param name="inlineConstraintResolver">Mechanizm rozpoznawania ograniczeń w tekście.</param>
      <param name="targetIsAction">Wartość wskazująca, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>Pobiera deskryptory akcji, do których tworzona jest trasa.</summary>
      <returns>Deskryptory akcji, do których tworzona jest trasa.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>Pobiera prefiks trasy, jeśli występuje, określony przez obszar.</summary>
      <returns>Prefiks trasy, jeśli występuje, określony przez obszar.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>Pobiera prefiks trasy, jeśli występuje, określony przez kontroler.</summary>
      <returns>Prefiks trasy, jeśli występuje, określony przez kontroler.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Generuje konstruktora trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</summary>
      <returns>Konstruktor trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</returns>
      <param name="template">Szablon trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Generuje konstruktora trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</summary>
      <returns>Konstruktor trasy, który może stworzyć trasę odpowiednią dla tego kontekstu.</returns>
      <param name="template">Szablon trasy.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń w tekście do użycia, w przeciwnym razie wartość null.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Pobiera mechanizm rozpoznawania ograniczeń w tekście.</summary>
      <returns>Mechanizm rozpoznawania ograniczeń w tekście.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Pobiera wartość wskazującą, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</summary>
      <returns>Wartość true, jeśli trasa jest skonfigurowana na poziomie akcji; w przeciwnym razie wartość false, jeśli trasa jest skonfigurowana na poziomie kontrolera.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>Określa konstruktora, który tworzy bezpośrednie trasy do akcji (trasy atrybutów).</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>Pobiera deskryptory akcji, do których tworzona jest trasa.</summary>
      <returns>Deskryptory akcji, do których tworzona jest trasa.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>Tworzy wejścia dla trasy w oparciu o bieżące wartości właściwości.</summary>
      <returns>Utworzone wejście dla trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>Pobiera lub ustawia ograniczenia trasy.</summary>
      <returns>Ograniczenia trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Pobiera lub ustawia tokeny danych trasy.</summary>
      <returns>Tokeny danych trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>Pobiera lub ustawia domyślne ustawienia trasy.</summary>
      <returns>Wartości domyślne trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy lub wartość null, jeśli nie wprowadzono nazwy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>Pobiera lub ustawia kolejność trasy.</summary>
      <returns>Kolejność trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>Pobiera lub ustawia pierwszeństwo trasy.</summary>
      <returns>Pierwszeństwo trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Pobiera wartość wskazującą, czy trasa jest skonfigurowana na poziomie akcji lub kontrolera.</summary>
      <returns>Wartość true, jeśli trasa jest skonfigurowana na poziomie akcji w przeciwnym razie wartość, false, jeśli trasa jest skonfigurowana na poziomie kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>Pobiera lub ustawia szablon trasy.</summary>
      <returns>Szablon trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>Określa fabrykę, która tworzy trasę bezpośrednio do zbioru deskryptorów akcji (trasa atrybutu).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Tworzy bezpośrednie wejście dla trasy.</summary>
      <returns>Bezpośrednie wejście dla trasy.</returns>
      <param name="context">Kontekst do użycia podczas generowania trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteProvider">
      <summary>Definiuje dostawcę dla tras bezpośrednio prowadzących do deskryptorów akcji (dla tras atrybutów).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Pobiera bezpośrednie trasy dla kontrolera.</summary>
      <returns>Zestaw wejść dla trasy dla kontrolera.</returns>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionDescriptors">Deskryptory akcji.</param>
      <param name="constraintResolver">Mechanizm rozpoznawania ograniczeń w tekście.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>Definiuje abstrakcję rozpoznawania ograniczeń w tekście jako wystąpień obiektu <see cref="T:System.Web.Routing.IRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Rozpoznaje ograniczenie w tekście.</summary>
      <returns>Obiekt <see cref="T:System.Web.Routing.IRouteConstraint" />, jak który zostało rozpoznane ograniczenie w tekście.</returns>
      <param name="inlineConstraint">Ograniczenie w tekście do rozpoznania.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>Udostępnia informacje do budowy obiektu System.Web.Routing.Route.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>Pobiera szablon trasy opisujący wzorzec URI używany do dopasowywania.</summary>
      <returns>Szablon trasy opisujący wzorzec URI używany do dopasowywania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>Pobiera nazwę trasy do wygenerowania.</summary>
      <returns>Nazwa trasy do wygenerowania.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>Określa prefiks trasy.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>Pobiera prefiks trasy.</summary>
      <returns>Prefiks trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>Buduje wystąpienia obiektu <see cref="T:System.Web.Routing.Route" /> na podstawie informacji o trasie.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />, używając domyślnego mechanizmu rozpoznawania ograniczeń w tekście.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />.</summary>
      <param name="constraintResolver">Element <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> do użycia w celu rozpoznawania ograniczeń w tekście.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>Buduje obiekt <see cref="T:System.Web.Routing.Route" /> dla określonej akcji.</summary>
      <returns>Wygenerowany obiekt <see cref="T:System.Web.Routing.Route" />.</returns>
      <param name="routeTemplate">Szablon trasy z tokenami dla trasy.</param>
      <param name="allowedMethods">Metody HTTP obsługiwane przez trasę.Wartość null określa, że są obsługiwane wszystkie możliwe metody.</param>
      <param name="controllerName">Nazwa skojarzonego kontrolera.</param>
      <param name="actionName">Nazwa skojarzonej akcji.</param>
      <param name="targetMethod">Metoda, do której zastosowano zapytanie atrybut trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Buduje obiekt <see cref="T:System.Web.Routing.Route" /> dla określonej akcji.</summary>
      <returns>Wygenerowana trasa.</returns>
      <param name="routeTemplate">Szablon trasy z tokenami dla trasy.</param>
      <param name="controllerDescriptor">Kontroler, do którego zastosowano atrybut trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>Buduje obiekt <see cref="T:System.Web.Routing.Route" />.</summary>
      <returns>Wygenerowany obiekt <see cref="T:System.Web.Routing.Route" />.</returns>
      <param name="defaults">Wartości domyślne trasy.</param>
      <param name="constraints">Ograniczenia trasy.</param>
      <param name="routeTemplate">Szablon trasy bez tokenów.</param>
      <param name="targetMethod">Metoda, do której zastosowano zapytanie atrybut trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>Pobiera mechanizm rozpoznawania dla ograniczeń w tekście.</summary>
      <returns>Mechanizm rozpoznawania dla ograniczeń w tekście.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>Reprezentuje trasą mającą nazwę.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.RouteEntry" />.</summary>
      <param name="name">Nazwa trasy.</param>
      <param name="route">Trasa.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>Pobiera nazwę trasy.</summary>
      <returns>Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>Pobiera trasę.</summary>
      <returns>Trasa.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>Reprezentuje trasę atrybutu, która może zawierać niestandardowe ograniczenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">Szablon trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>Pobiera ograniczenia trasy.</summary>
      <returns>Ograniczenia trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Tworzy bezpośrednie wejście dla trasy.</summary>
      <returns>Bezpośrednie wejście dla trasy.</returns>
      <param name="context">Kontekst do użycia podczas generowania trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Pobiera tokeny danych trasy.</summary>
      <returns>Tokeny danych trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>Pobiera domyśle ustawienia trasy.</summary>
      <returns>Domyśle ustawienia trasy, jeśli występują; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy, jeśli występuje; w przeciwnym razie wartość null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>Pobiera lub ustawia kolejność trasy.</summary>
      <returns>Kolejność trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>Pobiera szablon trasy.</summary>
      <returns>Szablon trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>Ogranicza parametr trasy tak, aby zawierał tylko małe lub wielkie litery alfabetu angielskiego od A do Z.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości logicznych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>Ogranicza tracę za pomocą kilku ograniczeń podrzędnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">Ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Pobiera ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</summary>
      <returns>Ograniczenia podrzędne, które muszą być zgodne, aby to ograniczenie było zgodne.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości dziesiętnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 64-bitowych wartości zmiennoprzecinkowych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 32-bitowych wartości zmiennoprzecinkowych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko wartości <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 32-bitowych wartości całkowitych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o podanej długości lub mieszczącego się w podanym zakresie długości.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" /> ograniczające parametr trasy do postaci ciągu o podanej długości.</summary>
      <param name="minLength">Minimalna długość parametru trasy.</param>
      <param name="maxLength">Maksymalna długość parametru trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Pobiera długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Pobiera maksymalną długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Pobiera minimalną długość parametru trasy, o ile jest on ustawiony.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>Ogranicza parametr trasy do reprezentowania tylko 64-bitowych wartości całkowitych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o określonej długości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Pobiera maksymalną długość parametru trasy.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci liczby całkowitej o określonej wartości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" />.</summary>
      <param name="max">Wartość maksymalna.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Pobiera maksymalną wartość parametru trasy.</summary>
      <returns>Maksymalna wartość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci ciągu o określonej długości maksymalnej.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">Długość minimalna.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa porównania.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Pobiera minimalną długość parametru trasy.</summary>
      <returns>Minimalna długość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci długiej o określonej wartości minimalnej.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">Wartość minimalna.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Pobiera minimalną wartość parametru trasy.</summary>
      <returns>Minimalna wartość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>Ogranicza trasę za pomocą ograniczenia wewnętrznego, którego określenie nie zakończy się niepowodzeniem, gdy parametr opcjonalny jest ustawiony na własną wartość domyślną.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">Ograniczenie wewnętrzne do dopasowania, jeśli parametr nie jest parametrem opcjonalnym bez wartości.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Pobiera ograniczenie wewnętrzne do dopasowania, jeśli parametr nie jest parametrem opcjonalnym bez wartości.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>Ogranicza parametr trasy do postaci liczby całkowitej mającej podany zakres wartości.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">Wartość minimalna.</param>
      <param name="max">Wartość maksymalna.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Pobiera maksymalną wartość parametru trasy.</summary>
      <returns>Maksymalna wartość parametru trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Pobiera minimalną wartość parametru trasy.</summary>
      <returns>Minimalna wartość parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>Ogranicza parametr trasy do dopasowania do wyrażenia regularnego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> z określonym wzorcem.</summary>
      <param name="pattern">Wzorzec do dopasowania.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Określa, czy to wystąpienie jest równe określonej trasie.</summary>
      <returns>Wartość true, jeśli to wystąpienie jest równe określonej trasie, a w przeciwnym razie — false.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="route">Trasa do porównania.</param>
      <param name="parameterName">Nazwa parametru.</param>
      <param name="values">Lista wartości parametrów.</param>
      <param name="routeDirection">Kierunek trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Pobiera wzorzec wyrażenia regularnego do dopasowania.</summary>
      <returns>Wzorzec wyrażenia regularnego do dopasowania.</returns>
    </member>
  </members>
</doc>